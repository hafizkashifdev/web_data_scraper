{
  "openapi": "3.0.1",
  "info": {
    "title": "Payment Initiation API",
    "description": "In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization\u2019s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization\u2019s integration. Setting up our API Services is best completed with the assistance of your organization\u2019s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of **HSBCnet UK - Payment Initiation API**. For detail implementation guidelines, please refer to the respective section of Documentation page.\n",
    "version": "4.0"
  },
  "tags": [
    {
      "name": "Domestic Payment Consents",
      "description": "Manage Domestic Payment Consents"
    },
    {
      "name": "Domestic Payments",
      "description": "Domestic Payments"
    },
    {
      "name": "Domestic Scheduled Payment Consents",
      "description": "Manage Domestic Scheduled Payment Consents"
    },
    {
      "name": "Domestic Scheduled Payments",
      "description": "Domestic Scheduled Payments"
    },
    {
      "name": "Domestic Standing Order Consents",
      "description": "Manage Domestic Standing Order Consents"
    },
    {
      "name": "Domestic Standing Orders",
      "description": "Domestic Standing Orders"
    },
    {
      "name": "International Payment Consents",
      "description": "Manage International Payment Consents"
    },
    {
      "name": "International Payments",
      "description": "International Payments"
    },
    {
      "name": "International Scheduled Payment Consents",
      "description": "Manage International Scheduled Payment Consents"
    },
    {
      "name": "International Scheduled Payments",
      "description": "International Scheduled Payments"
    },
    {
      "name": "International Standing Order Consents",
      "description": "Manage International Standing Order Consents"
    },
    {
      "name": "International Standing Orders",
      "description": "International Standing Orders"
    },
    {
      "name": "File Payment Consents",
      "description": "Manage File Payment Consents"
    },
    {
      "name": "File Payments",
      "description": "File Payments"
    }
  ],
  "paths": {
    "/domestic-payment-consents": {
      "post": {
        "tags": [
          "Domestic Payment Consents"
        ],
        "summary": "Create Domestic Payment Consents",
        "description": "This API enables TPP to create domestic payment consent. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "CreateDomesticPaymentConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomesticConsent4"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /domestic-payment-consents",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201DomesticPaymentConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Domestic Payment Consents"
        ],
        "summary": "Get Domestic Payment Consents",
        "description": "This API enables TPP to retrieve domestic payment consent. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "GetDomesticPaymentConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200DomesticPaymentConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-payment-consents/{ConsentId}/funds-confirmation": {
      "get": {
        "tags": [
          "Domestic Payment Consents"
        ],
        "summary": "Get Domestic Payment Consents Funds Confirmation",
        "description": "This API enables TPP to retrieve domestic payment consent funds confirmation. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "GetDomesticPaymentConsentsConsentIdFundsConfirmation",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200DomesticPaymentConsentsConsentIdFundsConfirmationRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-payments": {
      "post": {
        "tags": [
          "Domestic Payments"
        ],
        "summary": "Create Domestic Payments",
        "description": "This API enables TPP to create domestic payment. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "CreateDomesticPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomestic2"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /domestic-payments",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201DomesticPaymentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-payments/{DomesticPaymentId}": {
      "get": {
        "tags": [
          "Domestic Payments"
        ],
        "summary": "Get Domestic Payments",
        "description": "This API enables TPP to retrieve domestic payment. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "GetDomesticPaymentsDomesticPaymentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/DomesticPaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200DomesticPaymentsDomesticPaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-scheduled-payment-consents": {
      "post": {
        "tags": [
          "Domestic Scheduled Payment Consents"
        ],
        "summary": "Create Domestic Scheduled Payment Consents",
        "description": "This API enables TPP to create domestic scheduled payment consent. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "CreateDomesticScheduledPaymentConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomesticScheduledConsent4"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /domestic-scheduled-payment-consents",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201DomesticScheduledPaymentConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-scheduled-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Domestic Scheduled Payment Consents"
        ],
        "summary": "Get Domestic Scheduled Payment Consents",
        "description": "This API enables TPP to retrieve domestic scheduled payment consent. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "GetDomesticScheduledPaymentConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200DomesticScheduledPaymentConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-scheduled-payments": {
      "post": {
        "tags": [
          "Domestic Scheduled Payments"
        ],
        "summary": "Create Domestic Scheduled Payments",
        "description": "This API enables TPP to create domestic scheduled payment. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "CreateDomesticScheduledPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomesticScheduled2"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /domestic-scheduled-payments",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201DomesticScheduledPaymentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-scheduled-payments/{DomesticScheduledPaymentId}": {
      "get": {
        "tags": [
          "Domestic Scheduled Payments"
        ],
        "summary": "Get Domestic Scheduled Payments",
        "description": "This API enables TPP to retrieve domestic scheduled payment. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "GetDomesticScheduledPaymentsDomesticScheduledPaymentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/DomesticScheduledPaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200DomesticScheduledPaymentsDomesticScheduledPaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-standing-order-consents": {
      "post": {
        "tags": [
          "Domestic Standing Order Consents"
        ],
        "summary": "Create Domestic Standing Order Consents",
        "description": "This API enables TPP to create domestic standing order consent. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "CreateDomesticStandingOrderConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent5"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /domestic-standing-order-consents",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201DomesticStandingOrderConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-standing-order-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Domestic Standing Order Consents"
        ],
        "summary": "Get Domestic Standing Order Consents",
        "description": "This API enables TPP to retrieve domestic standing order consent. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "GetDomesticStandingOrderConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200DomesticStandingOrderConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-standing-orders": {
      "post": {
        "tags": [
          "Domestic Standing Orders"
        ],
        "summary": "Create Domestic Standing Orders",
        "description": "This API enables TPP to create domestic standing order. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "CreateDomesticStandingOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomesticStandingOrder3"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /domestic-standing-orders",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201DomesticStandingOrdersCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/domestic-standing-orders/{DomesticStandingOrderId}": {
      "get": {
        "tags": [
          "Domestic Standing Orders"
        ],
        "summary": "Get Domestic Standing Orders",
        "description": "This API enables TPP to retrieve domestic standing order. Supported product types are: Business Current Account, Deposit Account (UK only).",
        "operationId": "GetDomesticStandingOrdersDomesticStandingOrderId",
        "parameters": [
          {
            "$ref": "#/components/parameters/DomesticStandingOrderId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200DomesticStandingOrdersDomesticStandingOrderIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-payment-consents": {
      "post": {
        "tags": [
          "International Payment Consents"
        ],
        "summary": "Create International Payment Consents",
        "description": "This API enables TPP to create international payment consent. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "CreateInternationalPaymentConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteInternationalConsent5"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for  /international-payment-consents ",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalPaymentConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "International Payment Consents"
        ],
        "summary": "Get International Payment Consents",
        "description": "This API enables TPP to retrieve international payment consent. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "GetInternationalPaymentConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalPaymentConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-payment-consents/{ConsentId}/funds-confirmation": {
      "get": {
        "tags": [
          "International Payment Consents"
        ],
        "summary": "Get International Payment Consents Funds Confirmation",
        "description": "This API enables TPP to retrieve international payment consent funds confirmation. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "GetInternationalPaymentConsentsConsentIdFundsConfirmation",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalPaymentConsentsConsentIdFundsConfirmationRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-payments": {
      "post": {
        "tags": [
          "International Payments"
        ],
        "summary": "Create International Payments",
        "description": "This API enables TPP to create international payment. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "CreateInternationalPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteInternational3"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /international-payments",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalPaymentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-payments/{InternationalPaymentId}": {
      "get": {
        "tags": [
          "International Payments"
        ],
        "summary": "Get International Payments",
        "description": "This API enables TPP to retrieve international payment. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "GetInternationalPaymentsInternationalPaymentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/InternationalPaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalPaymentsInternationalPaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-scheduled-payment-consents": {
      "post": {
        "tags": [
          "International Scheduled Payment Consents"
        ],
        "summary": "Create International Scheduled Payment Consents",
        "description": "This API enables TPP to create a scheduled payment consent. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "CreateInternationalScheduledPaymentConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteInternationalScheduledConsent5"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /international-scheduled-payment-consents ",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalScheduledPaymentConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-scheduled-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "International Scheduled Payment Consents"
        ],
        "summary": "Get International Scheduled Payment Consents",
        "description": "This API enables TPP to retrieve international scheduled payment consent. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "GetInternationalScheduledPaymentConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalScheduledPaymentConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-scheduled-payments": {
      "post": {
        "tags": [
          "International Scheduled Payments"
        ],
        "summary": "Create International Scheduled Payments",
        "description": "This API enables TPP to create international scheduled payment. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "CreateInternationalScheduledPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteInternationalScheduled3"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for/international-scheduled-payments",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalScheduledPaymentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-scheduled-payments/{InternationalScheduledPaymentId}": {
      "get": {
        "tags": [
          "International Scheduled Payments"
        ],
        "summary": "Get International Scheduled Payments",
        "description": "This API enables TPP to retrieve international scheduled payment. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "GetInternationalScheduledPaymentsInternationalScheduledPaymentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/InternationalScheduledPaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalScheduledPaymentsInternationalScheduledPaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-standing-order-consents": {
      "post": {
        "tags": [
          "International Standing Order Consents"
        ],
        "summary": "Create International Standing Order Consents",
        "description": "This API enables TPP to create international standing order consent. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "CreateInternationalStandingOrderConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsent6"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /international-standing-order-consents",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalStandingOrderConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-standing-order-consents/{ConsentId}": {
      "get": {
        "tags": [
          "International Standing Order Consents"
        ],
        "summary": "Get International Standing Order Consents",
        "description": "This API enables TPP to retrieve international standing order consent. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "GetInternationalStandingOrderConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalStandingOrderConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-standing-orders": {
      "post": {
        "tags": [
          "International Standing Orders"
        ],
        "summary": "Create International Standing Orders",
        "description": "This API enables TPP to create international standing order. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "CreateInternationalStandingOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteInternationalStandingOrder4"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /international-standing-orders ",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalStandingOrdersCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/international-standing-orders/{InternationalStandingOrderPaymentId}": {
      "get": {
        "tags": [
          "International Standing Orders"
        ],
        "summary": "Get International Standing Orders",
        "description": "This API enables TPP to retrieve international standing order. Supported product types:  Business Current Account, Foreign Current Account.",
        "operationId": "GetInternationalStandingOrdersInternationalStandingOrderPaymentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/InternationalStandingOrderPaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalStandingOrdersInternationalStandingOrderPaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/file-payment-consents": {
      "post": {
        "tags": [
          "File Payment Consents"
        ],
        "summary": "Create File Payment Consents",
        "description": "This API enables TPP to create a file payment consent. Supported product types are Business Current Account and deposit account.",
        "operationId": "CreateFilePaymentConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteFileConsent3"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /file-payment-consents ",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201FilePaymentConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/file-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "File Payment Consents"
        ],
        "summary": "Get File Payment Consents",
        "description": "This API enables TPP to retrieve file payment consent. Supported product types are Business Current Account and deposit account.",
        "operationId": "GetFilePaymentConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200FilePaymentConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/file-payment-consents/{ConsentId}/file": {
      "post": {
        "tags": [
          "File Payment Consents"
        ],
        "summary": "Upload File Payment Consents",
        "description": "This API enables TPP to create a file payment consent. Supported product types are Business Current Account and deposit account.",
        "operationId": "CreateFilePaymentConsentsConsentIdFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/File"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for  /file-payment-consents/{ConsentId}/file . For the best experience using the File Payment endpoint we advise you keep the information in your metadata and the File consistent \u2013 this will ensure the best chances of a successful journey. The file must contain a reference for each individual transaction. If this is not the case the request will be rejected. For BACS this file only supports a single debit of the total of all payments to the customer\u2019s selected debit account.",
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200FilePaymentConsentsConsentIdFileCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/file-payments": {
      "post": {
        "tags": [
          "File Payments"
        ],
        "summary": "Create File Payments",
        "description": "This API enables TPP to create a file payment. Supported product types are Business Current Account and deposit account.",
        "operationId": "CreateFilePayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization2"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteFile2"
              }
            }
          },
          "description": "Request body contains all the relevant fields to be sent in the request for /file-payments . For the best experience using the File Payment endpoint we advise you keep the information in your metadata and the File consistent \u2013 this will ensure the best chances of a successful journey. The file must contain a reference for each individual transaction. If this is not the case the request will be rejected. For BACS this file only supports a single debit of the total of all payments to the customer\u2019s selected debit account.",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201FilePaymentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "415": {
            "$ref": "#/components/responses/415Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/file-payments/{FilePaymentId}": {
      "get": {
        "tags": [
          "File Payments"
        ],
        "summary": "Get File Payments",
        "description": "This API enables TPP to retrieve file payment. Supported product types are Business Current Account and deposit account.",
        "operationId": "GetFilePaymentsFilePaymentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/FilePaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200FilePaymentsFilePaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/file-payments/{FilePaymentId}/payment-details": {
      "get": {
        "tags": [
          "File Payments"
        ],
        "summary": "Get File Payment Details",
        "description": "This API enables TPP to retrieve file payment details. Supported product types are Business Current Account and deposit account.",
        "operationId": "GetFilePaymentsFilePaymentIdPaymentDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/FilePaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorization1"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200FilePaymentsFilePaymentIdPaymentDetailsRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://sandbox.ob.hsbcnet.com/mock/obie/open-banking/v4.0/pisp",
      "description": "Sandbox Base URL"
    }
  ],
  "components": {
    "parameters": {
      "ConsentId": {
        "name": "ConsentId",
        "in": "path",
        "description": "ConsentId",
        "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "DomesticPaymentId": {
        "name": "DomesticPaymentId",
        "in": "path",
        "description": "DomesticPaymentId",
        "example": "38644f84-88fd-493c-9723-79a31e90752f",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "DomesticScheduledPaymentId": {
        "name": "DomesticScheduledPaymentId",
        "in": "path",
        "description": "DomesticScheduledPaymentId",
        "required": true,
        "example": "su94r6u73yran1pvvxyph039dnbbitol448p",
        "schema": {
          "type": "string"
        }
      },
      "DomesticStandingOrderId": {
        "name": "DomesticStandingOrderId",
        "in": "path",
        "description": "DomesticStandingOrderId",
        "example": "hzjb3uzobxjtehhomqszoalb58ll6wj7qldu",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "FilePaymentId": {
        "name": "FilePaymentId",
        "in": "path",
        "description": "FilePaymentId",
        "required": true,
        "example": "fb46178f-f66c-4cc8-af26-6e2454c0bb3c",
        "schema": {
          "type": "string"
        }
      },
      "InternationalPaymentId": {
        "name": "InternationalPaymentId",
        "in": "path",
        "description": "InternationalPaymentId",
        "required": true,
        "example": "ocoyz4fvfj8908xzv8johsw7zlbopqrfbimo",
        "schema": {
          "type": "string"
        }
      },
      "InternationalScheduledPaymentId": {
        "name": "InternationalScheduledPaymentId",
        "in": "path",
        "description": "InternationalScheduledPaymentId",
        "required": true,
        "example": "vvl4vqq9k1dj7gu9wa8596oprqz40us0rek6",
        "schema": {
          "type": "string"
        }
      },
      "InternationalStandingOrderPaymentId": {
        "name": "InternationalStandingOrderPaymentId",
        "in": "path",
        "description": "InternationalStandingOrderPaymentId",
        "required": true,
        "example": "73a93da4-920b-470f-94ad-5213cb262076",
        "schema": {
          "type": "string"
        }
      },
      "Authorization1": {
        "in": "header",
        "name": "Authorization",
        "required": true,
        "description": "An authorisation token which was obtained from an authorisation server using Client Credentials Grant (https://www.rfc-editor.org/rfc/rfc6749#section-4.4). The obtained token must be sent using 'Bearer' scheme (https://tools.ietf.org/html/rfc6750#section-2) for this request",
        "schema": {
          "type": "string"
        },
        "example": "Bearer CGfo01Zr391wSkMCvPeiMytEQsw"
      },
      "Authorization2": {
        "in": "header",
        "name": "Authorization",
        "required": true,
        "description": "An authorisation token which was obtained from an authorisation server using Authorisation Code Grant (https://www.rfc-editor.org/rfc/rfc6749#section-4.1). The obtained token must be sent using 'Bearer' scheme (https://tools.ietf.org/html/rfc6750#section-2) for this request",
        "example": "Bearer CGfo01Zr391wSkMCvPeiMytEQsw",
        "schema": {
          "type": "string"
        }
      },
      "x-customer-user-agent": {
        "in": "header",
        "name": "x-customer-user-agent",
        "description": "Indicates the user-agent that the PSU is using.",
        "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "x-fapi-customer-ip-address": {
        "in": "header",
        "name": "x-fapi-customer-ip-address",
        "required": false,
        "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
        "example": "12.201.45.125",
        "schema": {
          "type": "string",
          "pattern": "^((((25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}\\s?)|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\s?),?\\s?)+$"
        }
      },
      "x-fapi-auth-date": {
        "in": "header",
        "name": "x-fapi-auth-date",
        "required": false,
        "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
        "example": "Sun, 10 Sep 2017 19:43:31 UTC",
        "schema": {
          "type": "string",
          "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$"
        }
      },
      "x-fapi-interaction-id": {
        "in": "header",
        "name": "x-fapi-interaction-id",
        "required": false,
        "description": "An RFC4122 UID used as a correlation id.",
        "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
        "schema": {
          "type": "string"
        }
      },
      "x-idempotency-key": {
        "name": "x-idempotency-key",
        "in": "header",
        "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
        "example": "igxlwFGgIk015ImMlH4d",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 40,
          "pattern": "^(?!\\s)(.*)(\\S)$"
        }
      },
      "x-jws-signature": {
        "in": "header",
        "name": "x-jws-signature",
        "required": true,
        "description": "A detached JWS signature of the body of the payload.",
        "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "201DomesticPaymentConsentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticConsentResponse5"
            }
          }
        }
      },
      "200DomesticPaymentConsentsConsentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticConsentResponse5"
            }
          }
        }
      },
      "200DomesticPaymentConsentsConsentIdFundsConfirmationRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse1"
            }
          }
        }
      },
      "201DomesticPaymentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticResponse5"
            }
          }
        }
      },
      "200DomesticPaymentsDomesticPaymentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticResponse5"
            }
          }
        }
      },
      "201DomesticScheduledPaymentConsentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticScheduledConsentResponse5"
            }
          }
        }
      },
      "200DomesticScheduledPaymentConsentsConsentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticScheduledConsentResponse5"
            }
          }
        }
      },
      "201DomesticScheduledPaymentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticScheduledResponse5"
            }
          }
        }
      },
      "200DomesticScheduledPaymentsDomesticScheduledPaymentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticScheduledResponse5"
            }
          }
        }
      },
      "201DomesticStandingOrderConsentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse6"
            }
          }
        }
      },
      "200DomesticStandingOrderConsentsConsentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse6"
            }
          }
        }
      },
      "201DomesticStandingOrdersCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse6"
            }
          }
        }
      },
      "200DomesticStandingOrdersDomesticStandingOrderIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse6"
            }
          }
        }
      },
      "201InternationalPaymentConsentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalConsentResponse6"
            }
          }
        }
      },
      "200InternationalPaymentConsentsConsentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalConsentResponse6"
            }
          }
        }
      },
      "200InternationalPaymentConsentsConsentIdFundsConfirmationRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse1"
            }
          }
        }
      },
      "201InternationalPaymentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalResponse5"
            }
          }
        }
      },
      "200InternationalPaymentsInternationalPaymentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalResponse5"
            }
          }
        }
      },
      "201InternationalScheduledPaymentConsentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalScheduledConsentResponse6"
            }
          }
        }
      },
      "200InternationalScheduledPaymentConsentsConsentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalScheduledConsentResponse6"
            }
          }
        }
      },
      "201InternationalScheduledPaymentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalScheduledResponse6"
            }
          }
        }
      },
      "200InternationalScheduledPaymentsInternationalScheduledPaymentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalScheduledResponse6"
            }
          }
        }
      },
      "201InternationalStandingOrderConsentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsentResponse7"
            }
          }
        }
      },
      "200InternationalStandingOrderConsentsConsentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsentResponse7"
            }
          }
        }
      },
      "201InternationalStandingOrdersCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderResponse7"
            }
          }
        }
      },
      "200InternationalStandingOrdersInternationalStandingOrderPaymentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956"
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderResponse7"
            }
          }
        }
      },
      "201FilePaymentConsentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileConsentResponse4"
            }
          }
        }
      },
      "200FilePaymentConsentsConsentIdFileCreated": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "200FilePaymentConsentsConsentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileConsentResponse4"
            }
          }
        }
      },
      "201FilePaymentsCreated": {
        "description": "Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileResponse3"
            }
          }
        }
      },
      "200FilePaymentsFilePaymentIdRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileResponse3"
            }
          }
        }
      },
      "200FilePaymentsFilePaymentIdPaymentDetailsRead": {
        "description": "OK",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWritePaymentDetailsResponse1"
            }
          }
        }
      },
      "400Error": {
        "description": "Bad request",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      },
      "401Error": {
        "description": "Unauthorized",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "403Error": {
        "description": "Forbidden",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "required": true,
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      },
      "404Error": {
        "description": "Not found",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "405Error": {
        "description": "Method Not Allowed",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "406Error": {
        "description": "Not Acceptable",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "415Error": {
        "description": "Unsupported Media Type",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "429Error": {
        "description": "Too Many Requests",
        "headers": {
          "Retry-After": {
            "description": "Number in seconds to wait",
            "example": 2,
            "schema": {
              "type": "integer"
            }
          },
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "500Error": {
        "description": "Internal Server Error",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "example": "f8273b70-d5c0-4ef7-b3ba-2b3400fe1956",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "example": "eyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCI6MTY3MzMzNjQ0OSwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC90YW4iOiJkd3U5OTZ2dzIxOTFmLmNsb3VkZnJvbnQubmV0IiwiY3JpdCI6WyJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lhdCIsImh0dHA6XC9cL29wZW5iYW5raW5nLm9yZy51a1wvdGFuIiwiaHR0cDpcL1wvb3BlbmJhbmtpbmcub3JnLnVrXC9pc3MiXSwia2lkIjoiZXh0ZXJuYWxfMjAyMiIsInR5cCI6IkpPU0UiLCJodHRwOlwvXC9vcGVuYmFua2luZy5vcmcudWtcL2lzcyI6IkM9R0IsTD1Mb25kb24sTz1IU0JDIEdyb3VwIE1hbmFnZW1lbnQgU2VydmljZXMgTGltaXRlZCxPVT1PcGVuIEJhbmtpbmcgU2hhcmVkIFNlcnZpY2VzLENOPVByZXByb2QtUFNEMi1FeHRlcm5hbC1TaWduYXR1cmUuaHNiYy5jby51ayIsImFsZyI6IlBTMjU2In0..VKQA7mVLNwGPUpAngcvtyumGa9heFwrVSatjlnbnDBpeJnNH9JAo66IqyG0VKFlVE53K-RY47ka7h2ugAAjJnzkGhqxVmvI5K0UdIH7h1ctasTZzU9He6jI-HI5YIR0Mz7myVTDDiP0BHg22WyftzdudaXkgyRJNk8BEHpLWO4kWMuXX6AO6u0rjnsMf1lYuroAe18N2M5XTbWJ0CbJvQfNL_OgPbKpAhzF-tuNoN_9qnYXa2oP-K2GbaW6Chmu4DKIcLX5vswAmXbQuIRfeckou3rk4-VDAmeA1Izm-P1pYsVFAjOVHK1sYHnwbQBY8GMutYsCOn5ZRCtMy1C_IjA",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "TPPOAuth2Security": {
        "type": "oauth2",
        "description": "TPP client credential authorisation flow with the ASPSP. To be used by TPP to obtain a token. Check the well-known configuration endpoint, the 'token_endpoint' property.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/obie/open-banking/v1.1/oauth2/token",
            "scopes": {
              "payments": "Generic payment scope"
            }
          }
        }
      },
      "PSUOAuth2Security": {
        "type": "oauth2",
        "description": "OAuth flow, it is required when the PSU needs to perform SCA with the ASPSP when a TPP wants to access an ASPSP resource owned by the PSU. To be used by TPP to redirect the PSU in order to start consent authorization journey. Check the well-known configuration endpoint, the 'authorization_endpoint' and 'token_endpoint' property.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/obie/open-banking/v1.1/oauth2/authorize",
            "tokenUrl": "/obie/open-banking/v1.1/oauth2/token",
            "scopes": {
              "payments": "Generic payment scope"
            }
          }
        }
      }
    },
    "schemas": {
      "NumberOfPayments": {
        "description": "Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.",
        "type": "string",
        "minLength": 1,
        "maxLength": 35
      },
      "ActiveOrHistoricCurrencyCode": {
        "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
        "type": "string",
        "pattern": "^[A-Z]{3,3}$",
        "example": "GBP"
      },
      "CountryCode": {
        "description": "Nation with its own government.",
        "type": "string",
        "pattern": "^[A-Z]{2,2}$",
        "example": "PL"
      },
      "File": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "Identification_0": {
        "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner. May be optionally provided as a valid IBAN, BBAN, SortCodeAccountNumber having character length less than or equal to 35.",
        "type": "string",
        "minLength": 1,
        "maxLength": 35,
        "example": "40180022280418587"
      },
      "Links": {
        "type": "object",
        "additionalProperties": false,
        "description": "Links relevant to the payload",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri",
            "description": "A link to the same resource used for the current request",
            "example": "https://nginx-fulfilment-iceberg-nlb-b68ebddd38286fff.elb.eu-west-1.amazonaws.com/obie/open-banking/v3.1/pisp/domestic-payments/pmfz4jkavb1tupk6mwjwtd4mssa3bu6eyaq0"
          }
        },
        "required": [
          "Self"
        ]
      },
      "OBActiveCurrencyAndAmount_SimpleType": {
        "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
        "type": "string",
        "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
        "example": "0.05"
      },
      "OBActiveOrHistoricCurrencyAndAmount": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Amount",
          "Currency"
        ],
        "description": "Amount of money associated with the charge type.",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        }
      },
      "OBCashAccountDebtor4": {
        "type": "object",
        "description": "^ Only incuded in the response if `Data. ReadRefundAccount` is set to `Yes` in the consent.",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification_0"
          },
          "Name": {
            "type": "string",
            "description": "^ Name of the account, as assigned by the account servicing institution.  Usage The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
            "example": "IB1620339919"
          },
          "SecondaryIdentification": {
            "type": "string",
            "description": "^ This is secondary identification of the account, as assigned by the account servicing institution.  This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination) | Max34Text",
            "example": "xUO61DyFKvdxX5HxZ42G"
          }
        }
      },
      "OBError1": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ErrorCode": {
            "$ref": "#/components/schemas/OBExternalStatusReason1Code"
          },
          "Message": {
            "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "example": "Provided expiration date is not valid"
          },
          "Path": {
            "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "example": "Data.ExpirationDateTime"
          },
          "Url": {
            "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc",
            "type": "string"
          }
        },
        "required": [
          "ErrorCode",
          "Message"
        ],
        "minProperties": 1
      },
      "OBErrorResponse1": {
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Code": {
            "description": "High level textual error code, to help categorize the errors.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40,
            "example": "400"
          },
          "Id": {
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40,
            "example": "c7cd8b64-50e8-48dd-9085-8981941abe0a"
          },
          "Message": {
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "example": "There is something wrong with the request parameters provided"
          },
          "Errors": {
            "items": {
              "$ref": "#/components/schemas/OBError1"
            },
            "type": "array",
            "minItems": 1
          }
        },
        "required": [
          "Code",
          "Message",
          "Errors"
        ]
      },
      "OBExternalAccountIdentification4Code": {
        "description": "Name of the identification scheme, in a coded form as published in an external list. May be optionally provided as per any of the below supported enumeration values only: - UK.OBIE.IBAN - UK.OBIE.BBAN - UK.OBIE.SortCodeAccountNumber",
        "type": "string",
        "example": "UK.OBIE.IBAN",
        "enum": [
          "UK.OBIE.BBAN",
          "UK.OBIE.IBAN",
          "UK.OBIE.SortCodeAccountNumber"
        ]
      },
      "OBExternalFinancialInstitutionIdentification4Code": {
        "description": "Name of the identification scheme, in a coded form as published in an external list.",
        "type": "string",
        "example": "UK.OBIE.BICFI",
        "enum": [
          "UK.OBIE.BICFI"
        ]
      },
      "OBInternalExtendedAccountType1Code": {
        "description": "Specifies the extended type of account.",
        "type": "string",
        "enum": [
          "Business",
          "BusinessSavingsAccount",
          "Charity",
          "Collection",
          "Corporate",
          "Ewallet",
          "Government",
          "Investment",
          "ISA",
          "JointPersonal",
          "Pension",
          "Personal",
          "PersonalSavingsAccount",
          "Premier",
          "Wealth"
        ]
      },
      "OBExternalLocalInstrument1Code": {
        "description": "User community specific instrument.\nUsage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level. May be optionally provided as per any of the below supported enumeration values in case sensitive format only: - UK.OBIE.CHAPS (for UK payments) - UK.OBIE.FPS (for UK payments) - UK.OBIE.SWIFT (for non-UK payments) - UK.OBIE.Target2 (for all PSD2 payments) - UK.OBIE.Euro1 (for all PSD2 payments) - UK.OBIE.BACS (for UK ACH credits payments) Note: UK.OBIE.BalanceTransfer, UK.OBIE.MoneyTransfer, UK.OBIE.Paym & UK.OBIE.Link is not supported currently. UK.OBIE.SEPACreditTransfer,UK.OBIE.SEPAInstantCreditTransfer is not supported via Domestic endpoint payment initiation.",
        "type": "string",
        "example": "UK.OBIE.FPS",
        "enum": [
          "UK.OBIE.BACS",
          "UK.OBIE.CHAPS",
          "UK.OBIE.Euro1",
          "UK.OBIE.FPS",
          "UK.OBIE.SWIFT",
          "UK.OBIE.Target2"
        ]
      },
      "OBRisk1": {
        "description": "The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "BeneficiaryAccountType": {
            "$ref": "#/components/schemas/OBInternalExtendedAccountType1Code"
          },
          "BeneficiaryPrepopulatedIndicator": {
            "type": "boolean",
            "description": "Indicates if PISP has immutably prepopulated payment details in for the PSU."
          },
          "CategoryPurposeCode": {
            "$ref": "#/components/schemas/ExternalCategoryPurpose1Code"
          },
          "ContractPresentIndicator": {
            "description": "Indicates if Payee has a contractual relationship with the PISP.",
            "type": "boolean"
          },
          "MerchantCategoryCode": {
            "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
            "type": "string",
            "minLength": 3,
            "maxLength": 4,
            "example": "2549"
          },
          "MerchantCustomerIdentification": {
            "description": "The unique customer identifier of the PSU with the merchant.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70,
            "example": "k5QOq5h3LSbuUoKNcZd7"
          },
          "PaymentContextCode": {
            "$ref": "#/components/schemas/OBInternalPaymentContext1Code"
          },
          "PaymentPurposeCode": {
            "description": "Category code, related to the type of services or goods that corresponds to the underlying purpose of the payment that conforms to Recommended UK Purpose Code in ISO 20022 Payment Messaging List.",
            "type": "string",
            "minLength": 3,
            "maxLength": 4,
            "example": "SALA"
          },
          "DeliveryAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        }
      },
      "OBInternalPaymentContext1Code": {
        "description": "Specifies the payment context. <dl>\n  <dl>BillingGoodsAndServicesInAdvance</dl><dd>Billing Goods And Services In Advance is to indicate that the transaction relates to an invoice which has been generated and issued to the customer (PSU) in advance of goods or services being provided by the merchant.</dd>\n  <dl>BillingGoodsAndServicesInArrears</dl><dd>Billing Goods And Services In Arrears is to indicate that the transaction relates to an invoice which has been generated and issued to the customer (PSU) after goods or services have been provided by the merchant.</dd>\n  <dl>EcommerceMerchantInitiatedPayment</dl><dd>E-commerce Merchant Initiated Payment indicates that the customer (PSU) is making a payment using the merchant\u2019s customer-facing website or app which has an integrated checkout feature to make a payment.</dd>\n  <dl>FaceToFacePointOfSale</dl><dd>Face To Face Point of Sale is to indicate that the customer (PSU) is present and initiating the payment themselves at the point of sale.</dd>\n  <dl>TransferToSelf</dl><dd>Transfer to Self is an indicator that the transaction is between two accounts belonging to the same person or legal entity.</dd>\n  <dl>TransferToThirdParty</dl><dd>Transfer to a Third Party is to indicate that the transaction is between two accounts belonging to two different persons or legal entities. The accounts could be at the same financial institution or different.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "BillingGoodsAndServicesInAdvance",
          "BillingGoodsAndServicesInArrears",
          "EcommerceMerchantInitiatedPayment",
          "FaceToFacePointOfSale",
          "TransferToSelf",
          "TransferToThirdParty"
        ]
      },
      "OBSCASupportData1": {
        "type": "object",
        "properties": {
          "RequestedSCAExemptionType": {
            "type": "string",
            "description": "This field allows a PISP to request specific SCA Exemption for a Payment Initiation",
            "enum": [
              "BillPayment",
              "ContactlessTravel",
              "EcommerceGoods",
              "EcommerceServices",
              "Kiosk",
              "Parking",
              "PartyToParty"
            ]
          },
          "AppliedAuthenticationApproach": {
            "type": "string",
            "maxLength": 40,
            "description": "Specifies a character string with a maximum length of 40 characters.\nUsage: This field indicates whether the PSU was subject to SCA performed by the TPP",
            "enum": [
              "CA",
              "SCA"
            ]
          },
          "ReferencePaymentOrderId": {
            "type": "string",
            "maxLength": 40,
            "minLength": 1,
            "example": "0fdbdd11-3b48-4f16-8161-a4c19df1a51f",
            "description": "If the payment is recurring, then this field is populated with the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence. The value here refers to the payment id e.g. DomesticPaymentId  "
          }
        },
        "description": "Supporting Data provided by TPP, when requesting SCA Exemption."
      },
      "OBSupplementaryData1": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
      },
      "OBWriteDomestic2": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "ConsentId",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomestic2"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBWriteDomesticConsent4": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "Initiation"
            ],
            "properties": {
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomestic2"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBInternalReadRefundAccount1Code": {
        "description": "Specifies to share the refund account details with PISP.",
        "type": "string",
        "enum": [
          "Yes",
          "No"
        ],
        "example": "Yes"
      },
      "OBDomestic2": {
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.",
        "type": "object",
        "required": [
          "InstructionIdentification",
          "EndToEndIdentification",
          "InstructedAmount",
          "CreditorAccount"
        ],
        "properties": {
          "InstructionIdentification": {
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. Usage: the instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
            "type": "string",
            "maxLength": 35,
            "example": "YOz4NFfJDEOMWj2KPDmj"
          },
          "EndToEndIdentification": {
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction. OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.",
            "type": "string",
            "maxLength": 35,
            "example": "Uc6Ca8PbBAfhDV3W0Lfv"
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBInternalLocalInstrument1Code_1"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "RegulatoryReporting": {
            "description": "Information needed due to regulatory and statutory requirements.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "maxItems": 10
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          }
        }
      },
      "DebtorAccount": {
        "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.",
        "type": "object",
        "required": [
          "SchemeName",
          "Identification"
        ],
        "additionalProperties": false,
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBInternalAccountIdentification4Code"
          },
          "Identification": {
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "type": "string",
            "maxLength": 256
          },
          "Name": {
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels. Note, the account name is not the product name or the nickname of the account.",
            "type": "string",
            "maxLength": 350,
            "example": "IB1620339919"
          },
          "SecondaryIdentification": {
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "type": "string",
            "maxLength": 34
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        }
      },
      "Debtor": {
        "description": "Set of elements used to identify a person or an organisation.",
        "additionalProperties": false,
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBInternalAccountIdentification4Code"
          },
          "Identification": {
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "type": "string",
            "maxLength": 256
          },
          "Name": {
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels. Note, the account name is not the product name or the nickname of the account.",
            "type": "string",
            "maxLength": 350,
            "example": "IB1620339919"
          },
          "SecondaryIdentification": {
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "type": "string",
            "maxLength": 34
          }
        }
      },
      "OBInternalLocalInstrument1Code_1": {
        "description": "User community specific instrument. Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level. <dl>\n  <dt>UK.OBIE.BACS</dt><dd>BACS Payment Scheme</dd>\n  <dt>UK.OBIE.CHAPS</dt><dd>CHAPS Payment Scheme</dd>\n  <dt>UK.OBIE.FPS</dt><dd>Faster Payment Scheme</dd>\n  <dt>UK.OBIE.SWIFT</dt><dd>Swift Payment Service</dd>\n  <dt>UK.OBIE.Euro1</dt><dd>To use Euro1 Payment System</dd>\n  <dt>UK.OBIE.Target2</dt><dd>To indicate Target2 payment service</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "UK.OBIE.BACS",
          "UK.OBIE.CHAPS",
          "UK.OBIE.FPS",
          "UK.OBIE.SWIFT",
          "UK.OBIE.Euro1",
          "UK.OBIE.Target2"
        ],
        "example": "UK.OBIE.BACS"
      },
      "OBInternalLocalInstrument1Code_2": {
        "description": "User community specific instrument. Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level. <dl>\n  <dt>UK.OBIE.BACS</dt><dd>BACS Payment Scheme</dd>\n  <dt>UK.OBIE.CHAPS</dt><dd>CHAPS Payment Scheme</dd>\n  <dt>UK.OBIE.FPS</dt><dd>Faster Payment Scheme</dd>\n  <dt>UK.OBIE.SWIFT</dt><dd>Swift Payment Service</dd>\n  <dt>UK.OBIE.BalanceTransfer</dt><dd>To indicate Balance Transfer</dd>\n  <dt>UK.OBIE.Euro1</dt><dd>To use Euro1 Payment System</dd>\n  <dt>UK.OBIE.SEPACreditTransfer</dt><dd>To indicate SEPA Credit Transfer payment service</dd>\n  <dt>UK.OBIE.Target2</dt><dd>To indicate Target2 payment service</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "UK.OBIE.BACS",
          "UK.OBIE.CHAPS",
          "UK.OBIE.FPS",
          "UK.OBIE.SWIFT",
          "UK.OBIE.BalanceTransfer",
          "UK.OBIE.Euro1",
          "UK.OBIE.SEPACreditTransfer",
          "UK.OBIE.Target2"
        ],
        "example": "UK.OBIE.BACS"
      },
      "OBInternalAccountIdentification4Code": {
        "description": "Name of the identification scheme, in a coded form as published in an external list. <dl>\n  <dt>UK.OBIE.BBAN</dl><dd>Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer.</dd>\n  <dt>UK.OBIE.IBAN</dl><dd>An identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\".</dd>\n  <dt>UK.OBIE.PAN</dl><dd>Primary Account Number - identifier scheme used to identify a card account.\n  <dt>UK.OBIE.Paym</dl><dd>Paym Scheme to make payments via mobile</dd>\n  <dt>UK.OBIE.SortCodeAccountNumber</dl><dd>Sort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. The regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$</dd>\n  <dt>UK.OBIE.Wallet</dl><dd>A primary and unique account identifier used to identify a wallet. An ASPSP must document on their developer portal, the payment methods that supports this account identifier.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "UK.OBIE.BBAN",
          "UK.OBIE.IBAN",
          "UK.OBIE.PAN",
          "UK.OBIE.Paym",
          "UK.OBIE.SortCodeAccountNumber",
          "UK.OBIE.Wallet"
        ]
      },
      "OBProxy1": {
        "description": "Specifies an alternate assumed name for the identification of the account.",
        "type": "object",
        "required": [
          "Identification",
          "Code"
        ],
        "properties": {
          "Identification": {
            "description": "Identification used to indicate the account identification under another specified name.",
            "type": "string",
            "maxLength": 2048
          },
          "Type": {
            "description": "Type of the proxy identification.",
            "type": "string",
            "maxLength": 35
          },
          "Code": {
            "$ref": "#/components/schemas/ExternalProxyAccountType1Code"
          }
        }
      },
      "ExternalProxyAccountType1Code": {
        "description": "Specifies the external proxy account type code, as published in the proxy account type external code set. <dl>\n  <dt>TELE</dt><dd>TelephoneNumber - A telephone number in the format specified by the 'The international public telecommunication numbering plan ITU-T E.164.</dd>\n  <dt>EMAL</dt><dd>EmailAddress - Internationalised address of an electronic mail box for internet messages.</dd>\n  <dt>DNAM</dt><dd>DomainName - Internationalised internet domain name.</dd>\n  <dt>CINC</dt><dd>CertificateOfIncorporationNumber - Corporate Identification issued by a national institution or regulator, used as account proxy. (applied for corporate account proxy).</dd>\n  <dt>COTX</dt><dd>CorporateTaxIdentification - Unique government-issued tax Identification used as account proxy to identify the corporate (for example for government tax) and typically linked to the corporate bank account (applied for corporate account proxy).</dd>\n  <dt>COID</dt><dd>CountryAuthorityIdentification - Identification issued by a national institution or regulator (different from a national scheme like a clearing provider), used as account proxy (applied for corporate or individual account proxy).</dd>\n  <dt>CUST</dt><dd>CustomerIdentificationNumber - Any other customer identification number issued by a corporate, bank or other organization, used as account proxy. (applied for corporate or individual account proxy).</dd>\n  <dt>DRLC</dt><dd>DriverLicenseNumber - Unique government-issued Identification used as account proxy to identify the individual (for example for government charges, road taxes and tolls,vaccination charges) and typically linked to the individual's bank account (applied for individual account proxy).</dd>\n  <dt>EIDN</dt><dd>ElectronicIdentification - Government-issued Identification (different from a passport Identification or a national Identification). Used as account proxy to identify the individual (for example for public benefits) and typically linked to the individual's bank account (applied for individual account proxy).</dd>\n  <dt>EWAL</dt><dd>EWalletIdentification - Market-adopted prepaid instruments like e-Wallets, payments to / from e-wallets from / to bank accounts (applied for corporate or individual account proxy).</dd>\n  <dt>PVTX</dt><dd>IndividualTaxIdentification - Unique government-issued tax Identification used as account proxy to identify the individual for example for government tax) and typically linked to the individual's bank account (applied for individual account proxy).</dd>\n  <dt>LEIC</dt><dd>LegalEntityIdentifierCode - Legal Entity Identifier used as account proxy (applied for corporate account proxy). Use cases: Can be used by corporates as a \"government-issued\" Identification for registration with payment schemes as a proxy. The proxy may be further used for payments and collections using the underlying instant payment rails for a variety of corporate use cases.</dd>\n  <dt>MBNO</dt><dd>MobilePhoneNumber - Mobile phone number in the format specified by the \u201cThe international public telecommunication numbering plan ITU- T E 164\" (applied for corporate or individual account proxy).</dd>\n  <dt>NIDN</dt><dd>NationalIdentificationNumber - Unique government-issued Identification used as account proxy to identify the individual or corporate for example for public benefits, government subsidies) and typically linked to the individual's / corporate bank account. (applied for corporate or individual account proxy).</dd>\n  <dt>CCPT</dt><dd>PassportNumber - Unique government-issued Identification used as account proxy to identify the individual (for example for government charges, road taxes, vaccination charges) and typically linked to the individual's bank account (applied for individual account proxy).</dd>\n  <dt>SHID</dt><dd>SchemeIdentificationNumber - Account proxy issued by a payment scheme (applied for corporate or individual account proxy). Use cases: Any proxies issued by clearing systems, for example VPA (India), FPS Identifier (Hong Kong), Jompay (Malaysia) CCIN (Canada).</dd>\n  <dt>SOSE</dt><dd>SocialSecurityNumber - Unique government-issued Identification used as account proxy to identify the individual (for example for public benefits) and typically linked to the individual's bank account (applied for individual account proxy).</dd>\n  <dt>TOKN</dt><dd>TokenIdentification - Electronic Identification used, for example, to mask an account number as a means of data secrecy. (applied for corporate or individual account proxy).</dd>\n  <dt>UBIL</dt><dd>UtilitiesSubscriptionIdentification - Subscriber Identification for utilities and services. As opposed to a biller Identification, this identification is used for the subscriber of the service (applied for corporate or individual account proxy).</dd>\n  <dt>VIPN</dt><dd>VehicleIdentificationPlateNumber - Account proxy for receiving insurance claims, pay insurance premium, road tax payments, traffic tickets etc.(applied for corporate or individual account proxy).</dd>\n  <dt>BIID</dt><dd>BillerSubscriberIdentification - Billers of specific utilities could register for a Biller Identification as supported in the clearing scheme, and use this identification for collections (applied for corporate account proxy).</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "TELE",
          "EMAL",
          "DNAM",
          "CINC",
          "COTX",
          "COID",
          "CUST",
          "DRLC",
          "EIDN",
          "EWAL",
          "PVTX",
          "LEIC",
          "MBNO",
          "NIDN",
          "CCPT",
          "SHID",
          "SOSE",
          "TOKN",
          "UBIL",
          "VIPN",
          "BIID"
        ],
        "example": "TELE"
      },
      "OBUltimateDebtor1": {
        "description": "Ultimate party that owes an amount of money to the (ultimate) creditor.",
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "type": "string",
            "maxLength": 140
          },
          "Identification": {
            "description": "Identification assigned by an institution.",
            "type": "string",
            "maxLength": 256
          },
          "LEI": {
            "$ref": "#/components/schemas/LEI"
          },
          "SchemeName": {
            "$ref": "#/components/schemas/OBInternalAccountIdentification4Code"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        }
      },
      "LEI": {
        "description": "Legal entity identification as an alternate identification for a party. Legal Entity Identifier is a code allocated to a party as described in ISO 17442 >>Financial Services - Legal Entity Identifier (LEI)<<.\n",
        "type": "string",
        "pattern": "^[0-9]{4}[0]{2}[A-Z0-9]{12}[0-9]{2}$",
        "example": "123400AB12CD34EF5678"
      },
      "OBPostalAddress7": {
        "description": "Postal address of a party",
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressType2Code"
          },
          "CareOf": {
            "description": "The 'care of' address is used whenever sending mail to a person or organisation who does not actually live or work at the address. They will receive the mail for the individual.\n",
            "type": "string",
            "maxLength": 140
          },
          "PostBox": {
            "description": "Numbered box in a post office, assigned to a person or organisation, where letters are kept until called for.",
            "type": "string",
            "maxLength": 16
          },
          "BuildingNumber": {
            "description": "Number that identifies the position of a building on a street.",
            "type": "string",
            "maxLength": 16
          },
          "UnitNumber": {
            "description": "Number that identifies the unit of a specific address.",
            "type": "string",
            "maxLength": 16
          },
          "BuildingName": {
            "description": "Name of a referenced building.",
            "type": "string",
            "maxLength": 140
          },
          "Department": {
            "description": "Identification of a division of a large organisation or building.",
            "type": "string",
            "maxLength": 70
          },
          "SubDepartment": {
            "description": "Identification of a sub-division of a large organisation or building.",
            "type": "string",
            "maxLength": 70
          },
          "Room": {
            "description": "Information that locates and identifies a room to form part of an address.",
            "type": "string",
            "maxLength": 70
          },
          "Floor": {
            "description": "Number that identifies the level within a building.",
            "type": "string",
            "maxLength": 70
          },
          "StreetName": {
            "description": "Name of a street or thoroughfare.",
            "type": "string",
            "maxLength": 140
          },
          "TownName": {
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "type": "string",
            "maxLength": 35
          },
          "TownLocationName": {
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "type": "string",
            "maxLength": 140
          },
          "DistrictName": {
            "description": "Number that of the regional area, known as a district, which forms part of an address.",
            "type": "string",
            "maxLength": 140
          },
          "PostCode": {
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "type": "string",
            "maxLength": 16
          },
          "CountrySubDivision": {
            "description": "Identifies a subdivision of a country such as state, region, county.",
            "type": "string",
            "maxLength": 35
          },
          "Country": {
            "description": "Nation with its own government.",
            "type": "string",
            "pattern": "^[A-Z]{2,2}$"
          },
          "AddressLine": {
            "type": "array",
            "items": {
              "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text.",
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "minItems": 0,
            "maxItems": 7
          }
        }
      },
      "OBAddressType2Code": {
        "description": "Identifies the nature of the postal address. <dl>\n  <dt>BIZZ</dt><dd>Business - Address is the business address</dd>\n  <dt>DLVY</dt><dd>Delivery - Address is the address to which delivery is to take place.</dd>\n  <dt>MLTO</dt><dd>Mail To - Address is the address to which mail is sent.</dd>\n  <dt>PBOX</dt><dd>PO Box - Address is a postal office (PO) box.</dd>\n  <dt>ADDR</dt><dd>Postal - Address is the complete postal address.</dd>\n  <dt>HOME</dt><dd>Residential - Address is the home address.</dd>\n  <dt>CORR</dt><dd>Correspondence - Address is the address where the correspondence is sent.</dd>\n  <dt>STAT</dt><dd>Statement - Address is the address where statements are sent.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "BIZZ",
          "DLVY",
          "MLTO",
          "PBOX",
          "ADDR",
          "HOME",
          "CORR",
          "STAT"
        ],
        "example": "BIZZ"
      },
      "OBCashAccountCreditor3": {
        "type": "object",
        "required": [
          "SchemeName",
          "Identification",
          "Name"
        ],
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
          },
          "Identification": {
            "type": "string",
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "maxLength": 256
          },
          "Name": {
            "type": "string",
            "description": "Name of the account, as assigned by the account servicing institution.  Usage The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
            "example": "IB1620339919"
          },
          "SecondaryIdentification": {
            "type": "string",
            "description": "Secondary identification of the account, as assigned by the account servicing institution. This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "maxLength": 34,
            "example": "xUO61DyFKvdxX5HxZ42G"
          },
          "Proxy": {
            "$ref": "#/components/schemas/OBProxy1"
          }
        }
      },
      "OBUltimateCreditor1": {
        "description": "Ultimate party to which an amount of money is due.",
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "type": "string",
            "maxLength": 140
          },
          "Identification": {
            "description": "Identification assigned by an institution.",
            "type": "string",
            "maxLength": 256
          },
          "LEI": {
            "$ref": "#/components/schemas/LEI"
          },
          "SchemeName": {
            "$ref": "#/components/schemas/OBInternalAccountIdentification4Code"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        }
      },
      "OBRemittanceInformation2": {
        "type": "object",
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.",
        "properties": {
          "Structured": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRemittanceInformationStructured1"
            }
          },
          "Unstructured": {
            "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 140
            }
          }
        }
      },
      "OBRemittanceInformationStructured1": {
        "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an structured form.",
        "type": "object",
        "properties": {
          "ReferredDocumentAmount": {
            "description": "Provides details on the amounts of the referred document.",
            "type": "integer"
          },
          "Invoicer": {
            "description": "Identification of the organisation issuing the invoice, when it is different from the creditor or ultimate creditor",
            "type": "string",
            "maxLength": 256
          },
          "Invoicee": {
            "description": "Identification of the party to whom an invoice is issued, when it is different from the debtor or ultimate debtor.",
            "type": "string",
            "maxLength": 256
          },
          "TaxRemittance": {
            "description": "Provides remittance information about a payment made for tax-related purposes.",
            "type": "string",
            "maxLength": 140
          },
          "AdditionalRemittanceInformation": {
            "description": "Additional information, in free text form, to complement the structured remittance information.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 140
            },
            "maxItems": 3
          },
          "CreditorReferenceInformation": {
            "$ref": "#/components/schemas/OBCreditorReferenceInformation1"
          },
          "ReferredDocumentInformation": {
            "description": "Provides the identification and the content of the referred document.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Code": {
                  "$ref": "#/components/schemas/ExternalDocumentType1Code"
                },
                "Issuer": {
                  "description": "Identification of the issuer of the reference document type.",
                  "type": "string",
                  "maxLength": 35
                },
                "LineDetails": {
                  "description": "Set of elements used to provide the content of the referred document line.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Number": {
                  "description": "Identification of the type specified for the referred document line.",
                  "type": "string",
                  "maxLength": 35
                },
                "RelatedDate": {
                  "description": "Date associated with the referred document line.",
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-10-16T12:00:00+00:00"
                }
              }
            }
          }
        }
      },
      "ExternalDocumentType1Code": {
        "description": "Type of remittance document, as published in an external document type code set. <dl>\n  <dt>CINV</dt><dd>CommercialInvoice - Document is an invoice.</dd>\n  <dt>CNFA</dt><dd>CreditNoteRelatedToFinancialAdjustment - Document is a credit note for the final amount settled for a commercial transaction.</dd>\n  <dt>CONT</dt><dd>Contract - Document is a contract evidencing an agreement between the seller and buyer for the supply of goods and/or services.</dd>\n  <dt>CREN</dt><dd>CreditNote - Document is a credit note.</dd>\n  <dt>DEBN</dt><dd>DebitNote - Document is a debit note.</dd>\n  <dt>DISP</dt><dd>DispatchAdvice - Document is an advice of dispatch of the goods.</dd>\n  <dt>DNFA</dt><dd>DebitNoteRelatedToFinancialAdjustment - Document is a debit note for the final amount settled for a commercial transaction.</dd>\n  <dt>HIRI</dt><dd>HireInvoice - Document is an invoice for the hiring of human resources or renting goods or equipment.</dd>\n  <dt>INVS</dt><dd>InvoiceSigned - Document is a signed invoice.</dd>\n  <dt>MSIN</dt><dd>MeteredServiceInvoice - Document is an invoice claiming payment for the supply of metered services, eg. Gas or electricity, supplied to a fixed meter.</dd>\n  <dt>PROF</dt><dd>ProformaInvoice - In trade transactions, a pro forma invoice is a document that states a commitment from the seller to sell goods to the buyer at specified prices and terms. It is used to declare the value of the trade. It is not a true invoice, because it is not used to record accounts receivable for the seller and accounts payable for the buyer.</dd>\n  <dt>PUOR</dt><dd>PurchaseOrder - Document is a purchase order.</dd>\n  <dt>QUOT</dt><dd>Quotation - Document is a quotation setting out the conditions under which the goods and/or services are offered.</dd>\n  <dt>SBIN</dt><dd>SelfBilledInvoice - Document is a statement of the transactions posted to the debtor's account at the supplier.</dd>\n  <dt>SPRR</dt><dd>SellerPresentment - Document is a document presented by the seller in support of the procurement of goods and/or services.</dd>\n  <dt>TISH</dt><dd>TimeSheet - Document is a timesheet recording times for the provision of services and/or delivery of goods.</dd>\n  <dt>USAR</dt><dd>UsageReport - Document is a usage report indicating the consumption pattern for designated goods and/or services.</dd>\n  <dt>AROI</dt><dd>AccountReceivableOpenItem - Document is a payment that applies to a specific source document.</dd>\n  <dt>BOLD</dt><dd>BillOfLading - Document is a shipping notice.</dd>\n  <dt>CMCN</dt><dd>CommercialContract - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.</dd>\n  <dt>SOAC</dt><dd>StatementOfAccount - Document is a statement of the transactions posted to the debtor's account at the supplier.</dd>\n  <dt>TSUT</dt><dd>TradeServicesUtilityTransaction - Document is a transaction identifier as assigned by the Trade Services Utility.</dd>\n  <dt>VCHR</dt><dd>Voucher - Document is an electronic payment document.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "CINV",
          "CNFA",
          "CONT",
          "CREN",
          "DEBN",
          "DISP",
          "DNFA",
          "HIRI",
          "INVS",
          "MSIN",
          "PROF",
          "PUOR",
          "QUOT",
          "SBIN",
          "SPRR",
          "TISH",
          "USAR",
          "AROI",
          "BOLD",
          "CMCN",
          "SOAC",
          "TSUT",
          "VCHR"
        ],
        "example": "CINV"
      },
      "OBCreditorReferenceInformation1": {
        "description": "Reference information provided by the creditor to allow the identification of the underlying documents.",
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/components/schemas/ExternalCreditorReferenceType1Code"
          },
          "Issuer": {
            "description": "Entity that assigns the identification.",
            "type": "string",
            "maxLength": 35
          },
          "Reference": {
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.",
            "type": "string",
            "maxLength": 35
          }
        }
      },
      "ExternalCreditorReferenceType1Code": {
        "description": "Specifies the amount type, as published in an external referred amount code set. <dl>\n  <dt>DISP</dt><dd>DispatchAdvice - Document is a dispatch advice.</dd>\n  <dt>FXDR</dt><dd>ForeignExchangeDealReference - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.</dd>\n  <dt>PUOR</dt><dd>PurchaseOrder - Document is a purchase order.</dd>\n  <dt>RPIN</dt><dd>RelatedPaymentInstruction - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.</dd>\n  <dt>RADM</dt><dd>RemittanceAdviceMessage - Document is a remittance advice sent separately from the current transaction.</dd>\n  <dt>SCOR</dt><dd>StructuredCommunicationReference - Document is a structured communication reference provided by the creditor to identify the referred transaction.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "DISP",
          "FXDR",
          "PUOR",
          "RPIN",
          "RADM",
          "SCOR"
        ],
        "example": "DISP"
      },
      "OBRegulatoryReporting1": {
        "description": "Information needed due to regulatory and statutory requirements.",
        "type": "object",
        "properties": {
          "DebitCreditReportingIndicator": {
            "$ref": "#/components/schemas/OBExternalRegulatoryReportingType1Code"
          },
          "Authority": {
            "$ref": "#/components/schemas/OBRegulatoryAuthority2"
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStructuredRegulatoryReporting3"
            }
          }
        }
      },
      "OBExternalRegulatoryReportingType1Code": {
        "description": "Identifies whether the regulatory reporting information applies to the debit side, to the credit side or to both debit and credit sides of the transaction. <dl>\n  <dl>CRED</dl><dd>Credit - Regulatory information applies to the credit side.</dd>\n  <dl>DEBT</dl><dd>Debit - Regulatory information applies to the debit side.</dd>\n  <dl>BOTH</dl><dd>Both - Regulatory information applies to both credit and debit sides.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "CRED",
          "DEBT",
          "BOTH"
        ],
        "example": "CRED"
      },
      "OBRegulatoryAuthority2": {
        "description": "Entity requiring the regulatory reporting information.",
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name of the entity requiring the regulatory reporting information.",
            "type": "string",
            "maxLength": 140
          },
          "CountryCode": {
            "$ref": "#/components/schemas/CountryCode"
          }
        }
      },
      "OBStructuredRegulatoryReporting3": {
        "description": "Set of elements used to provide details on the regulatory reporting information.",
        "type": "object",
        "properties": {
          "Type": {
            "description": "Specifies the type of the information supplied in the regulatory reporting details.",
            "type": "string",
            "maxLength": 35
          },
          "Information": {
            "description": "Additional details that cater for specific domestic regulatory requirements.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 35
            }
          },
          "Date": {
            "description": "Date related to the specified type of regulatory reporting details.",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-16T12:00:00+00:00"
          },
          "Country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        }
      },
      "OBBranchAndFinancialInstitutionIdentification6": {
        "description": "Financial institution servicing an account for the creditor.",
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentification4Code"
          },
          "Identification": {
            "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
            "type": "string",
            "maxLength": 35
          },
          "Name": {
            "description": "Name by which an agent is known and which is usually used to identify that agent.",
            "type": "string",
            "maxLength": 140
          },
          "LEI": {
            "$ref": "#/components/schemas/LEI"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        }
      },
      "OBAuthorisation1": {
        "description": "The authorisation type request from the TPP.",
        "type": "object",
        "required": [
          "AuthorisationType"
        ],
        "properties": {
          "AuthorisationType": {
            "description": "Type of authorisation flow requested.",
            "type": "string",
            "enum": [
              "Any",
              "Single"
            ],
            "example": "Any"
          },
          "CompletionDateTime": {
            "description": "Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-16T12:00:00+00:00"
          }
        }
      },
      "OBWriteDomesticConsentResponse5": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created.",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/OBInternalConsentStatus1Code_1"
              },
              "StatusReason": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBStatusReason"
                }
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated.",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "CutOffDateTime": {
                "description": "Specified cut-off date and time for the payment consent.",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource.",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource.",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Charges": {
                "description": "Set of elements used to provide details of a charge for the payment initiation.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomestic2"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/OBCashAccountDebtor4"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBInternalConsentStatus1Code_1": {
        "description": "Specifies the status of consent resource in code form. <dl>\n  <dt>AUTH</dt><dd>Authorised - The consent resource has been successfully authorised.</dd>\n  <dt>AWAU</dt><dd>AwaitingAuthorisation - The consent resource is awaiting PSU authorisation.</dd>\n  <dt>COND</dt><dd>Consumed - The consent resource has been consumed after payment request is submitted by the PISP.</dd>\n  <dt>RJCT</dt><dd>Rejected - The consent resource has been rejected.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "AUTH",
          "AWAU",
          "COND",
          "RJCT"
        ],
        "example": "AUTH"
      },
      "OBInternalConsentStatus1Code_2": {
        "description": "Specifies the status of consent resource in code form. <dl>\n  <dt>AUTH</dt><dd>Authorised - The consent resource has been successfully authorised.</dd>\n  <dt>AWAU</dt><dd>AwaitingAuthorisation - The consent resource is awaiting PSU authorisation.</dd>\n  <dt>AWUP</dt><dd>AwaitingUpload - The consent resource is expecting a file to be uploaded.</dd>\n  <dt>COND</dt><dd>Consumed - The consent resource has been consumed after payment request is submitted by the PISP.</dd>\n  <dt>RJCT</dt><dd>Rejected - The consent resource has been rejected.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "AUTH",
          "AWAU",
          "AWUP",
          "COND",
          "RJCT"
        ],
        "example": "AUTH"
      },
      "OBStatusReason": {
        "type": "object",
        "properties": {
          "StatusReasonCode": {
            "$ref": "#/components/schemas/OBExternalStatusReason1Code"
          },
          "StatusReasonDescription": {
            "description": "Description supporting the StatusReasonCode.",
            "type": "string",
            "maxLength": 500
          },
          "Path": {
            "description": "Path is optional but relevant when the status reason refers to an object/field and hence conditional to provide JSON path.",
            "type": "string",
            "maxLength": 500
          }
        }
      },
      "OBExternalStatusReason1Code": {
        "description": "Specifies the status reason in a code form. <dl>\n  <dt>U001</dt><dd>Field is expected</dd>\n  <dt>U002</dt><dd>Field is invalid</dd>\n  <dt>U003</dt><dd>Field has a invalid date</dd>\n  <dt>U004</dt><dd>A required field is missing</dd>\n  <dt>U005</dt><dd>A value is provided when not required</dd>\n  <dt>U006</dt><dd>Header is invalid</dd>\n  <dt>U007</dt><dd>Header is missing</dd>\n  <dt>U008</dt><dd>Mismatch between staged consent and payment order request</dd>\n  <dt>U009</dt><dd>Unexpected consent status</dd>\n  <dt>U010</dt><dd>Invalid schema</dd>\n  <dt>U011</dt><dd>Resource cannot be found</dd>\n  <dt>U012</dt><dd>Payment received after cutoff date and time</dd>\n  <dt>U013</dt><dd>Reference found is duplicate</dd>\n  <dt>U014</dt><dd>Payment outside control parameters</dd>\n  <dt>U015</dt><dd>Invalid signature</dd>\n  <dt>U016</dt><dd>Invalid claim in a signature</dd>\n  <dt>U017</dt><dd>Invalid or missing claim in a signature</dd>\n  <dt>U018</dt><dd>Signature is malformed</dd>\n  <dt>U019</dt><dd>Missing information related to signature</dd>\n  <dt>U020</dt><dd>Signature was not expected in header but was provided</dd>\n  <dt>U021</dt><dd>Unsupported account identified has been provided</dd>\n  <dt>U022</dt><dd>Unsupported secondary account identified has been provided</dd>\n  <dt>U023</dt><dd>Unsupported currency is provided. Also use U002 or provide path.</dd>\n  <dt>U024</dt><dd>Unsupported event type</dd>\n  <dt>U025</dt><dd>Unsupported frequency</dd>\n  <dt>U026</dt><dd>Unsupported localInstrument</dd>\n  <dt>U027</dt><dd>Unsupported scheme</dd>\n  <dt>U028</dt><dd>Reauthentication is required by PSU</dd>\n  <dt>U029</dt><dd>Duplicate resource submitted</dd>\n  <dt>U000</dt><dd>Can use this in conjunction with NARR code to specific the specific unexpected error\n</dl>\n",
        "type": "string",
        "enum": [
          "U001",
          "U002",
          "U003",
          "U004",
          "U005",
          "U006",
          "U007",
          "U008",
          "U009",
          "U010",
          "U011",
          "U012",
          "U013",
          "U014",
          "U015",
          "U016",
          "U017",
          "U018",
          "U019",
          "U020",
          "U021",
          "U022",
          "U023",
          "U024",
          "U025",
          "U026",
          "U027",
          "U028",
          "U029",
          "U000",
          "AM06",
          "AM07",
          "AM09",
          "AM10",
          "AM11",
          "AM12",
          "AM13",
          "AM14",
          "AM15",
          "AM16",
          "AM17",
          "AM18",
          "AM19",
          "AM20",
          "AM21",
          "AM22",
          "AM23",
          "BE01",
          "BE04",
          "BE05",
          "BE06",
          "BE07",
          "BE08",
          "BE09",
          "BE10",
          "BE11",
          "BE12",
          "BE13",
          "BE14",
          "BE15",
          "BE16",
          "BE17",
          "BE18",
          "BE19",
          "BE20",
          "BE21",
          "BE22",
          "BE23",
          "CERI",
          "CH03",
          "CH04",
          "CH07",
          "CH09",
          "CH10",
          "CH11",
          "CH12",
          "CH13",
          "CH14",
          "CH15",
          "CH16",
          "CH17",
          "CH19",
          "CH20",
          "CH21",
          "CH22",
          "CHQC",
          "CNOR",
          "CURR",
          "CUST",
          "DNOR",
          "DS01",
          "DS02",
          "DS03",
          "DS04",
          "DS05",
          "DS06",
          "DS07",
          "DS08",
          "DS09",
          "DS0A",
          "DS0B",
          "DS0C",
          "DS0D",
          "DS0E",
          "DS0F",
          "DS0G",
          "DS0H",
          "DS0K",
          "DS10",
          "DS11",
          "DS12",
          "DS13",
          "DS14",
          "DS15",
          "DS16",
          "DS17",
          "DS18",
          "DS19",
          "DS20",
          "DS21",
          "DS22",
          "DS23",
          "DS24",
          "DS25",
          "DS26",
          "DS27",
          "DT01",
          "DT02",
          "DT03",
          "DT04",
          "DT05",
          "DT06",
          "DU01",
          "DU02",
          "DU03",
          "DU04",
          "DU05",
          "DUPL",
          "ED01",
          "ED03",
          "ED05",
          "ED06",
          "ERIN",
          "FF01",
          "FF02",
          "FF03",
          "FF04",
          "FF05",
          "FF06",
          "FF07",
          "FF08",
          "FF09",
          "FF10",
          "FF11",
          "G000",
          "G001",
          "G002",
          "G003",
          "G004",
          "G005",
          "G006",
          "ID01",
          "MD01",
          "MD02",
          "MD05",
          "MD06",
          "MD07",
          "MS02",
          "MS03",
          "NARR",
          "NERI",
          "RC01",
          "RC02",
          "RC03",
          "RC04",
          "RC05",
          "RC06",
          "RC07",
          "RC08",
          "RC09",
          "RC10",
          "RC11",
          "RC12",
          "RCON",
          "RECI",
          "RF01",
          "RR01",
          "RR02",
          "RR03",
          "RR04",
          "RR05",
          "RR06",
          "RR07",
          "RR08",
          "RR09",
          "RR10",
          "RR11",
          "RR12",
          "S000",
          "S001",
          "S002",
          "S003",
          "S004",
          "SL01",
          "SL02",
          "SL03",
          "SL11",
          "SL12",
          "SL13",
          "SL14",
          "TA01",
          "TD01",
          "TD02",
          "TD03",
          "TK01",
          "TK02",
          "TK03",
          "TK09",
          "TKCM",
          "TKSG",
          "TKSP",
          "TKVE",
          "TKXP",
          "TM01",
          "TS01",
          "TS04",
          "CN01",
          "FOCR",
          "FR01",
          "NOCM",
          "NOAS",
          "RUTA",
          "UPAY",
          "ALAC",
          "AEXR",
          "ARFR",
          "ARJR",
          "ATNS",
          "EDTR",
          "EDTL",
          "FRAD",
          "IEDT",
          "IRNR",
          "NOAR",
          "NOPG",
          "NRCH",
          "RTNS",
          "REPR",
          "SPII",
          "PINS",
          "UCRD",
          "FF12",
          "FF13",
          "DC02",
          "APAR"
        ],
        "example": "U000"
      },
      "OBCharge2": {
        "description": "Set of elements used to provide details of a charge for the payment initiation.",
        "type": "object",
        "required": [
          "ChargeBearer",
          "Type",
          "Amount"
        ],
        "properties": {
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBInternalChargeBearerType1Code"
          },
          "Type": {
            "$ref": "#/components/schemas/OBInternalPaymentChargeType1Code"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        }
      },
      "OBInternalChargeBearerType1Code": {
        "description": "Specifies which party/parties will bear the charges associated with the processing of the payment transaction. <dl>\n  <dl>BorneByCreditor</dl><dd>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</dd>\n  <dl>BorneByDebtor</dl><dd>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</dd>\n  <dl>FollowingServiceLevel</dl><dd>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</dd>\n  <dl>Shared</dl><dd>Specifies which party/parties will bear the charges associated with the processing of the payment transaction.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "BorneByCreditor",
          "BorneByDebtor",
          "FollowingServiceLevel",
          "Shared"
        ],
        "example": "BorneByCreditor"
      },
      "OBInternalPaymentChargeType1Code": {
        "description": "Charge type, in a coded form.",
        "type": "string",
        "enum": [
          "PSD2.WCCharges"
        ],
        "example": "PSD2.WCCharges"
      },
      "OBWriteDomesticResponse5": {
        "type": "object",
        "required": [
          "Data"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "DomesticPaymentId",
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "DomesticPaymentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic payment resource.",
                "type": "string",
                "maxLength": 40,
                "example": "pmfz4jkavb1tupk6mwjwtd4mssa3bu6eyaq0"
              },
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the message was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/ExternalPaymentTransactionStatus1Code_1"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "StatusReason": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBStatusReason"
                }
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Refund": {
                "$ref": "#/components/schemas/OBDomesticRefundAccount1"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomestic2"
              },
              "MultiAuthorisation": {
                "$ref": "#/components/schemas/OBMultiAuthorisation1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/OBCashAccountDebtor4"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "ExternalPaymentTransactionStatus1Code_1": {
        "description": "Specifies the status of the payment information group. <dl>\n  <dt>ACCC</dt><dd>AcceptedCreditSettlementCompleted - Settlement on the creditor's account has been completed.</dd>\n  <dt>ACSC</dt><dd>AcceptedSettlementCompleted - Settlement completed. Usage : this can be used by a Market Infrastructure reporting to Infrastructure Participant or an Account Servicer to Account Owner to report that the transaction account entry has been completed. Warning : this status is provided for transaction status reasons, not for financial information. It can only be used after bilateral agreement\t</dd>\n  <dt>ACSP</dt><dd>AcceptedSettlementInProcess - All preceding checks such as technical validation and customer profile were successful and therefore the payment instruction has been accepted for execution.</dd>\n  <dt>ACWP</dt><dd>AcceptedWithoutPosting - Payment instruction included in the credit transfer is accepted without being posted to the creditor customer\u2019s account.</dd>\n  <dt>PDNG</dt><dd>Pending - Payment instruction is pending. Further checks and status update will be performed.</dd>\n  <dt>RJCT</dt><dd>Rejected - Payment instruction has been rejected.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "ACCC",
          "ACSC",
          "ACSP",
          "ACWP",
          "PDNG",
          "RJCT"
        ],
        "example": "ACSP"
      },
      "ExternalPaymentTransactionStatus1Code_2": {
        "description": "Specifies the status of the payment information group. <dl>\n  <dt>CANC</dt><dd>Cancelled - Payment initiation has been successfully cancelled after having received a request for cancellation. Usage: code to be used in the context of APIs only.</dd>\n  <dt>INCO</dt><dd>InitiationCompleted - Standing order has been setup successfully and the individual payment has been successfully completed.</dd>\n  <dt>INFA</dt><dd>InitiationFailed - Standing order has been setup successfully but the individual payment has failed</dd>\n  <dt>PDNG</dt><dd>Pending - Payment instruction is pending. Further checks and status update will be performed.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "CANC",
          "INCO",
          "INFA",
          "PDNG"
        ],
        "example": "CANC"
      },
      "OBDomesticRefundAccount1": {
        "description": "Unambiguous identification of the refund account to which a refund will be made as a result of the transaction.",
        "type": "object",
        "required": [
          "Account"
        ],
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          }
        }
      },
      "OBMultiAuthorisation1": {
        "description": "The multiple authorisation flow response from the ASPSP.",
        "type": "object",
        "required": [
          "Status"
        ],
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/OBExternalStatus2Code"
          },
          "NumberRequired": {
            "description": "Number of authorisations required for payment order (total required at the start of the multi authorisation journey).",
            "type": "integer"
          },
          "NumberReceived": {
            "description": "Number of authorisations received.",
            "type": "integer"
          },
          "LastUpdateDateTime": {
            "description": "Last date and time at the authorisation flow was updated.",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-17T12:00:00+00:00"
          },
          "ExpirationDateTime": {
            "description": "Date and time at which the requested authorisation flow must be completed.",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-17T12:00:00+00:00"
          }
        }
      },
      "OBExternalStatus2Code": {
        "description": "Specifies the status of the authorisation flow in code form. <dl>\n  <dt>AWAF</dt><dd>Awaiting - Further Authorisation\tThe multiple authorisation flow is awaiting further authorisation.</dd>\n  <dt>RJCT</dt><dd>Rejected - The multiple authorisation flow has been rejected.</dd>\n  <dt>AUTH</dt><dd>Authorised - The multiple authorisation flow has been fully authorised.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "AWAF",
          "RJCT",
          "AUTH"
        ],
        "example": "AWAF"
      },
      "OBWriteDomesticScheduled2": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "ConsentId",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticScheduled2"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBWriteDomesticScheduledConsent4": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "Permission",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticScheduled2"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBInternalPermissions2Code": {
        "description": "Specifies the Open Banking service request types. <dl>\n  <dt>Create</dt><dd>Specifies the Open Banking service request types.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "Create"
        ]
      },
      "OBDomesticScheduled2": {
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.",
        "type": "object",
        "required": [
          "InstructionIdentification",
          "RequestedExecutionDateTime",
          "InstructedAmount",
          "CreditorAccount"
        ],
        "additionalProperties": false,
        "properties": {
          "InstructionIdentification": {
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. Usage: the instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
            "type": "string",
            "maxLength": 35,
            "example": "YOz4NFfJDEOMWj2KPDmj"
          },
          "EndToEndIdentification": {
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction. OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.",
            "type": "string",
            "maxLength": 35,
            "example": "Uc6Ca8PbBAfhDV3W0Lfv"
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBInternalLocalInstrument1Code_1"
          },
          "RequestedExecutionDateTime": {
            "description": "Date at which the initiating party requests the clearing agent to process the payment. Usage: This is the date on which the debtor's account is to be debited. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00. For DBB - It Must be > today and \u2264 45 days ahead",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-16T12:00:00+00:00"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "RegulatoryReporting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "maxItems": 10
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        }
      },
      "OBWriteDomesticScheduledConsentResponse5": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Permission",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-17T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/OBInternalConsentStatus1Code_1"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the consent resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "CutOffDateTime": {
                "description": "Specified cut-off date and time for the payment consent. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticScheduled2"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/OBCashAccountDebtor4"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteDomesticScheduledResponse5": {
        "type": "object",
        "required": [
          "Data"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "DomesticScheduledPaymentId",
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "DomesticScheduledPaymentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic schedule payment resource.",
                "type": "string",
                "maxLength": 40,
                "example": "su94r6u73yran1pvvxyph039dnbbitol448p"
              },
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the message was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-17T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/ExternalPaymentTransactionStatus1Code_2"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-17T12:00:00+00:00"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Refund": {
                "$ref": "#/components/schemas/OBDomesticRefundAccount1"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticScheduled2"
              },
              "MultiAuthorisation": {
                "$ref": "#/components/schemas/OBMultiAuthorisation1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              },
              "RegulatoryReporting": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBRegulatoryReporting1"
                },
                "maxItems": 10
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteDomesticStandingOrder3": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "ConsentId",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticStandingOrder3"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBWriteDomesticStandingOrderConsent5": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "Permission",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticStandingOrder3"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBDomesticStandingOrder3": {
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "MandateRelatedInformation",
          "FirstPaymentAmount",
          "CreditorAccount"
        ],
        "properties": {
          "MandateRelatedInformation": {
            "$ref": "#/components/schemas/OBMandateRelatedInformation1"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "FirstPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "RecurringPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "FinalPaymentAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "RegulatoryReporting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "maxItems": 10
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        }
      },
      "OBMandateRelatedInformation1": {
        "type": "object",
        "required": [
          "Frequency"
        ],
        "properties": {
          "MandateIdentification": {
            "description": "Unique identification, as assigned by the creditor, to unambiguously identify the mandate.",
            "type": "string",
            "maxLength": 35,
            "example": "40010000010901"
          },
          "Classification": {
            "$ref": "#/components/schemas/OBExternalMandateClassification1Code"
          },
          "CategoryPurposeCode": {
            "$ref": "#/components/schemas/ExternalCategoryPurpose1Code"
          },
          "FirstPaymentDateTime": {
            "$ref": "#/components/schemas/FirstPaymentDateTime"
          },
          "FinalPaymentDateTime": {
            "$ref": "#/components/schemas/FinalPaymentDateTime"
          },
          "Frequency": {
            "$ref": "#/components/schemas/OBFrequency6"
          },
          "Reason": {
            "description": "Reason for the setup of the credit transfer mandate.",
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "OBFrequency6": {
        "description": "Regularity with which credit transfer instructions are to be created and processed",
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/OBFrequency6Code"
          },
          "CountPerPeriod": {
            "description": "Number of instructions to be created and processed during the specified period. Specifies a frequency in terms of a count per period within a specified frequency type.",
            "type": "integer"
          }
        }
      },
      "OBFrequency6Code": {
        "description": "A code indicating the point in time for the credit transfer. <dl></dd>\n  <dt>ADHO</dt>Adhoc - Event takes place on request or as necessary.</dd>\n  <dt>YEAR</dt>Annual - Event takes place every year or once a year.</dd>\n  <dt>DAIL</dt>Daily - Event takes place every day.</dd>\n  <dt>FRTN</dt>Fortnightly - Event takes place every two weeks.</dd>\n  <dt>INDA</dt>Intra Day - Event takes place several times a day.</dd>\n  <dt>MNTH</dt>Monthly - Event takes place every month or once a month.</dd>\n  <dt>QURT</dt>Quarterly - Event takes place every three months or four times a year.</dd>\n  <dt>MIAN</dt>Semi Annual - Event takes place every six months or two times a year.</dd>\n  <dt>WEEK</dt>Weekly - Event takes place once a week.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "ADHO",
          "YEAR",
          "DAIL",
          "FRTN",
          "INDA",
          "MNTH",
          "QURT",
          "MIAN",
          "WEEK"
        ]
      },
      "OBExternalMandateClassification1Code": {
        "description": "Type of mandate instruction. <dl>\n  <td>FIXE</dt><dd>Fixed - Direct debit amount is fixed.</dd>\n  <td>USGB</dt><dd>Usage Based - Direct debit amount is based on usage.</dd>\n  <td>VARI</dt><dd>Variable - Direct debit amount is variable.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "FIXE",
          "USGB",
          "VARI"
        ]
      },
      "ExternalCategoryPurpose1Code": {
        "description": "Specifies the high level purpose of the mandate based on a set of pre-defined categories. <dl>\n  <dt>BONU</dt><dd>BonusPayment - Transaction is the payment of a bonus.</dd>\n  <dt>CASH</dt><dd>CashManagementTransfer - Transaction is a general cash management instruction.</dd>\n  <dt>CBLK</dt><dd>CardBulkClearing - A service that is settling money for a bulk of card transactions, while referring to a specific transaction file or other information like terminal ID, card acceptor ID or other transaction details.</dd>\n  <dt>CCRD</dt><dd>CreditCardPayment - Transaction is related to a payment of credit card.</dd>\n  <dt>CORT</dt><dd>TradeSettlementPayment - Transaction is related to settlement of a trade, eg a foreign exchange deal or a securities transaction.</dd>\n  <dt>DCRD</dt><dd>DebitCardPayment - Transaction is related to a payment of debit card.</dd>\n  <dt>DIVI</dt><dd>Dividend - Transaction is the payment of dividends.</dd>\n  <dt>DVPM</dt><dd>DeliverAgainstPayment - Code used to pre-advise the account servicer of a forthcoming deliver against payment instruction.</dd>\n  <dt>EPAY</dt><dd>Epayment - Transaction is related to ePayment.</dd>\n  <dt>FCIN</dt><dd>FeeCollectionAndInterest - Transaction is related to the payment of a fee and interest.</dd>\n  <dt>FCOL</dt><dd>FeeCollection - A service that is settling card transaction related fees between two parties.</dd>\n  <dt>GP2P</dt><dd>PersontoPersonPayment - General Person-to-Person Payment. Debtor and Creditor are natural persons.</dd>\n  <dt>GOVT</dt><dd>GovernmentPayment - Transaction is a payment to or from a government department.</dd>\n  <dt>HEDG</dt><dd>Hedging - Transaction is related to the payment of a hedging operation.</dd>\n  <dt>ICCP</dt><dd>IrrevocableCreditCardPayment - Transaction is reimbursement of credit card payment.</dd>\n  <dt>IDCP</dt><dd>IrrevocableDebitCardPayment - Transaction is reimbursement of debit card payment.</dd>\n  <dt>INTC</dt><dd>IntraCompanyPayment - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.</dd>\n  <dt>INTE</dt><dd>Interest - Transaction is the payment of interest.</dd>\n  <dt>LBOX</dt><dd>LockboxTransactions - Transaction is related to identify cash handling via Night Safe or Lockbox by bank or vendor on behalf of a physical store.</dd>\n  <dt>LOAN</dt><dd>Loan - Transaction is related to the transfer of a loan to a borrower.</dd>\n  <dt>MP2B</dt><dd>Commercial - Mobile P2B Payment</dd>\n  <dt>MP2P</dt><dd>Consumer - Mobile P2P Payment</dd>\n  <dt>OTHR</dt><dd>OtherPayment - Other payment purpose.</dd>\n  <dt>PENS</dt><dd>PensionPayment - Transaction is the payment of pension.</dd>\n  <dt>RPRE</dt><dd>Represented - Collection used to re-present previously reversed or returned direct debit transactions.</dd>\n  <dt>RRCT</dt><dd>ReimbursementReceivedCreditTransfer - Transaction is related to a reimbursement for commercial reasons of a correctly received credit transfer.</dd>\n  <dt>RVPM</dt><dd>ReceiveAgainstPayment - Code used to pre-advise the account servicer of a forthcoming receive against payment instruction.</dd>\n  <dt>SALA</dt><dd>SalaryPayment - Transaction is the payment of salaries.</dd>\n  <dt>SECU</dt><dd>Securities - Transaction is the payment of securities.</dd>\n  <dt>SSBE</dt><dd>SocialSecurityBenefit - Transaction is a social security benefit, ie payment made by a government to support individuals.</dd>\n  <dt>SUPP</dt><dd>SupplierPayment  Transaction is related to a payment to a supplier.</dd>\n  <dt>TAXS</dt><dd>TaxPayment  Transaction is the payment of taxes.</dd>\n  <dt>TRAD</dt><dd>Trade - Transaction is related to the payment of a trade finance transaction.</dd>\n  <dt>TREA</dt><dd>TreasuryPayment - Transaction is related to treasury operations. E.g. financial contract settlement.</dd>\n  <dt>VATX</dt><dd>ValueAddedTaxPayment - Transaction is the payment of value added tax.</dd>\n  <dt>WHLD</dt><dd>WithHolding - Transaction is the payment of withholding tax.</dd>\n  <dt>SWEP</dt><dd>CashManagementSweepAccount - Classification: Cash Management. Transaction relates to a cash management instruction, requesting a sweep of the account of the Debtor above an agreed floor amount, up to a target or zero balance. The purpose is to move the funds from multiple accounts to a single bank account. Funds can move domestically or across border and more than one bank can be used.</dd>\n  <dt>TOPG</dt><dd>CashManagementTopAccount - Classification: Cash Management. Transaction relates to a cash management instruction, requesting to top the account of the Creditor above a certain floor amount, up to a target or zero balance. The floor amount, if not pre-agreed by the parties involved, may be specified.</dd>\n  <dt>ZABA</dt><dd>CashManagementZeroBalanceAccount - Transaction relates to a cash management instruction, requesting to zero balance the account of the Debtor. Zero Balance Accounts empty or fill the balances in accounts at the same bank, in the same country into or out of a main account each day.</dd>\n  <dt>VOST</dt><dd>CrossborderMIPayments - Transaction to be processed as a domestic payment instruction originated from a foreign bank.</dd>\n  <dt>FCDT</dt><dd>ForeignCurrencyDomesticTransfer - Foreign Currency Transaction that is processed between two domestic financial institutions.</dd>\n  <dt>CIPC</dt><dd>CashInPreCredit - Transaction is a direct debit for a cash order of notes and/or coins.</dd>\n  <dt>CONC</dt><dd>CashOutNotesCoins - Transaction is a direct debit for a cash order of notes and/or coins.</dd>\n  <dt>CGWV</dt><dd>CarrierGuardedWholesaleValuables - Transaction is a payment towards a Party for the collection of cash by the Cash in Transit company.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "BONU",
          "CASH",
          "CBLK",
          "CCRD",
          "CORT",
          "DCRD",
          "DIVI",
          "DVPM",
          "EPAY",
          "FCIN",
          "FCOL",
          "GP2P",
          "GOVT",
          "HEDG",
          "ICCP",
          "IDCP",
          "INTC",
          "INTE",
          "LBOX",
          "LOAN",
          "MP2B",
          "MP2P",
          "OTHR",
          "PENS",
          "RPRE",
          "RRCT",
          "RVPM",
          "SALA",
          "SECU",
          "SSBE",
          "SUPP",
          "TAXS",
          "TRAD",
          "TREA",
          "VATX",
          "WHLD",
          "SWEP",
          "TOPG",
          "ZABA",
          "VOST",
          "FCDT",
          "CIPC",
          "CONC",
          "CGWV"
        ]
      },
      "FirstPaymentDateTime": {
        "description": "The date on which the first payment for a Standing Order schedule will be made. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
        "type": "string",
        "format": "date-time",
        "example": "2023-01-04T13:21:59+00:00"
      },
      "FinalPaymentDateTime": {
        "description": "The date on which the final payment for a Standing Order schedule will be made. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
        "type": "string",
        "format": "date-time",
        "example": "2023-02-04T13:21:59+00:00"
      },
      "OBWriteDomesticStandingOrderConsentResponse6": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Permission",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/OBInternalConsentStatus1Code_1"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "CutOffDateTime": {
                "description": "Specified cut-off date and time for the payment consent. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticStandingOrder3"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteDomesticStandingOrderResponse6": {
        "type": "object",
        "required": [
          "Data"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "DomesticStandingOrderId",
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "additionalProperties": false,
            "properties": {
              "DomesticStandingOrderId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic standing order resource.",
                "type": "string",
                "maxLength": 40,
                "example": "hzjb3uzobxjtehhomqszoalb58ll6wj7qldu"
              },
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/ExternalPaymentTransactionStatus1Code_2"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "Refund": {
                "$ref": "#/components/schemas/OBDomesticRefundAccount1"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBDomesticStandingOrder3"
              },
              "MultiAuthorisation": {
                "$ref": "#/components/schemas/OBMultiAuthorisation1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteFile2": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBFile2"
              }
            }
          }
        }
      },
      "OBWriteFileConsent3": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "Initiation"
            ],
            "properties": {
              "Initiation": {
                "$ref": "#/components/schemas/OBFile2"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              }
            }
          }
        }
      },
      "OBFile2": {
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "FileType",
          "FileHash"
        ],
        "properties": {
          "FileType": {
            "description": "Specifies the payment file type.",
            "type": "string",
            "enum": [
              "UK.OBIE.PaymentInitiation.3.1",
              "UK.OBIE.pain.001.001.03"
            ]
          },
          "FileHash": {
            "description": "A base64 encoding of a SHA256 hash of the file to be uploaded.",
            "type": "string",
            "minLength": 1,
            "maxLength": 44
          },
          "FileReference": {
            "description": "Reference for the file.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "NumberOfTransactions": {
            "description": "Number of individual transactions contained in the payment information group.",
            "type": "string",
            "pattern": "^[0]?[1-9]{1}$|^[1]{1}[0-9]{1}$|^[2]{1}[0-5]{1}$",
            "example": "15"
          },
          "ControlSum": {
            "description": "Total of all individual amounts included in the group, irrespective of currencies.",
            "type": "number"
          },
          "RequestedExecutionDateTime": {
            "description": "Date at which the initiating party requests the clearing agent to process the payment. Usage: This is the date on which the debtor's account is to be debited. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-16T12:00:00+00:00"
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrument1Code"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          }
        }
      },
      "OBWriteFileConsentResponse4": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/OBInternalConsentStatus1Code_2"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the consent resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "CutOffDateTime": {
                "description": "Specified cut-off date and time for the payment consent. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBFile2"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/OBCashAccountDebtor4"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteFileResponse3": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "FilePaymentId",
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "properties": {
              "FilePaymentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the file payment resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              },
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the message was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "description": "Specifies the status of the payment information group. <dl>\n  <dt>INCO</dt><dd>InitiationCompleted - Standing order has been setup successfully and the individual payment has been successfully completed.</dd>\n  <dt>INFA</dt><dd>InitiationFailed - Standing order has been setup successfully but the individual payment has failed.</dd>\n  <dt>PDNG</dt><dd>Pending - Payment instruction is pending. Further checks and status update will be performed.</dd>\n</dl>\n",
                "type": "string",
                "enum": [
                  "INCO",
                  "INFA",
                  "PDNG"
                ],
                "example": "INCO"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBFile2"
              },
              "MultiAuthorisation": {
                "$ref": "#/components/schemas/OBMultiAuthorisation1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/OBCashAccountDebtor4"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteFundsConfirmationResponse1": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "FundsAvailableResult": {
                "$ref": "#/components/schemas/OBFundsAvailableResult1"
              },
              "SupplementaryData": {
                "$ref": "#/components/schemas/OBSupplementaryData1"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBFundsAvailableResult1": {
        "description": "Result of a funds availability check.",
        "type": "object",
        "required": [
          "FundsAvailableDateTime",
          "FundsAvailable"
        ],
        "properties": {
          "FundsAvailableDateTime": {
            "description": "Date and time at which the funds availability check was generated.",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-16T12:00:00+00:00"
          },
          "FundsAvailable": {
            "description": "Flag to indicate the availability of funds given the Amount in the consent request.",
            "type": "boolean"
          }
        }
      },
      "OBWriteInternational3": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternational3"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBWriteInternationalConsent5": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "Initiation"
            ],
            "properties": {
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternational3"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBInternational3": {
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "InstructionIdentification",
          "EndToEndIdentification",
          "CurrencyOfTransfer",
          "InstructedAmount",
          "CreditorAccount"
        ],
        "properties": {
          "InstructionIdentification": {
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. Usage: the instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
            "type": "string",
            "maxLength": 35,
            "example": "YOz4NFfJDEOMWj2KPDmj"
          },
          "EndToEndIdentification": {
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction. OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.",
            "type": "string",
            "maxLength": 35,
            "example": "Uc6Ca8PbBAfhDV3W0Lfv"
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBInternalLocalInstrument1Code_2"
          },
          "InstructionPriority": {
            "$ref": "#/components/schemas/OBInternalPriority2Code"
          },
          "Purpose": {
            "description": "Specifies the external purpose code in the format of character string with a maximum length of 4 characters. The list of valid codes is an external code list published separately. External code sets can be downloaded from www.iso20022.org.\n",
            "type": "string",
            "minLength": 1,
            "maxLength": 4,
            "example": "SALA"
          },
          "ExtendedPurpose": {
            "description": "Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.",
            "type": "string",
            "maxLength": 140,
            "example": "Buying Goods"
          },
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBInternalChargeBearerType1Code"
          },
          "CurrencyOfTransfer": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          },
          "DestinationCountryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBExchangeRate1"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "Creditor": {
            "$ref": "#/components/schemas/OBPartyIdentification43"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "RegulatoryReporting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "maxItems": 10
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        }
      },
      "OBInternalPriority2Code": {
        "description": "Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.",
        "type": "string",
        "enum": [
          "Normal",
          "Urgent"
        ],
        "example": "Normal"
      },
      "OBExchangeRate1": {
        "description": "Provides details on the currency exchange rate and contract.",
        "type": "object",
        "required": [
          "UnitCurrency",
          "ExchangeRate",
          "RateType"
        ],
        "additionalProperties": false,
        "properties": {
          "UnitCurrency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          },
          "ExchangeRate": {
            "$ref": "#/components/schemas/BaseOneRate"
          },
          "RateType": {
            "$ref": "#/components/schemas/OBInternalExchangeRateType2Code"
          },
          "ContractIdentification": {
            "description": "Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.",
            "type": "string",
            "maxLength": 256
          },
          "ExpirationDateTime": {
            "description": "Specified date and time the exchange rate agreement will expire.",
            "type": "string",
            "format": "date-time",
            "example": "2024-11-20T12:00:00+00:00"
          }
        }
      },
      "OBPartyIdentification43": {
        "description": "Party to which an amount of money is due.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Name": {
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "type": "string",
            "maxLength": 140
          },
          "LEI": {
            "$ref": "#/components/schemas/LEI"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress7"
          }
        }
      },
      "BaseOneRate": {
        "description": "The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.",
        "type": "number"
      },
      "OBInternalExchangeRateType2Code": {
        "description": "Specifies the type used to complete the currency exchange.",
        "type": "string",
        "enum": [
          "Actual",
          "Agreed",
          "Indicative"
        ],
        "example": "Actual"
      },
      "OBWriteInternationalConsentResponse6": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/OBInternalConsentStatus1Code_1"
              },
              "OBStatusReason": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBStatusReason"
                }
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "CutOffDateTime": {
                "description": "Specified cut-off date and time for the payment consent. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "ExchangeRateInformation": {
                "$ref": "#/components/schemas/OBExchangeRate1"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternational3"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteInternationalResponse5": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "InternationalPaymentId",
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "properties": {
              "InternationalPaymentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the international payment resource.",
                "type": "string",
                "maxLength": 40
              },
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the message was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/ExternalPaymentTransactionStatus1Code_1"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Refund": {
                "$ref": "#/components/schemas/OBInternationalRefundAccount1"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "ExchangeRateInformation": {
                "$ref": "#/components/schemas/OBExchangeRate1"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternational3"
              },
              "MultiAuthorisation": {
                "$ref": "#/components/schemas/OBMultiAuthorisation1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBInternationalRefundAccount1": {
        "description": "Unambiguous identification of the refund account to which a refund will be made as a result of the transaction.",
        "type": "object",
        "required": [
          "Account"
        ],
        "additionalProperties": false,
        "properties": {
          "Creditor": {
            "$ref": "#/components/schemas/OBPartyIdentification43"
          },
          "Agent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "Account": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          }
        }
      },
      "OBWriteInternationalScheduled3": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalScheduled3"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBWriteInternationalScheduledConsent5": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "Permission",
              "Initiation"
            ],
            "properties": {
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalScheduled3"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBInternationalScheduled3": {
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.",
        "type": "object",
        "required": [
          "InstructionIdentification",
          "RequestedExecutionDateTime",
          "CurrencyOfTransfer",
          "InstructedAmount",
          "CreditorAccount"
        ],
        "additionalProperties": false,
        "properties": {
          "InstructionIdentification": {
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. Usage: the instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
            "type": "string",
            "maxLength": 35
          },
          "EndToEndIdentification": {
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction. OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.",
            "type": "string",
            "maxLength": 35
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBInternalLocalInstrument1Code_2"
          },
          "InstructionPriority": {
            "$ref": "#/components/schemas/OBInternalPriority2Code"
          },
          "Purpose": {
            "description": "Specifies the external purpose code in the format of character string with a maximum length of 4 characters. The list of valid codes is an external code list published separately. External code sets can be downloaded from www.iso20022.org.\n",
            "type": "string",
            "minLength": 1,
            "maxLength": 4,
            "example": "SALA"
          },
          "ExtendedPurpose": {
            "description": "Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.",
            "type": "string",
            "maxLength": 140,
            "example": "Buying Goods"
          },
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBInternalChargeBearerType1Code"
          },
          "RequestedExecutionDateTime": {
            "description": "Date at which the initiating party requests the clearing agent to process the payment. Usage: This is the date on which the debtor's account is to be debited.",
            "type": "string",
            "format": "date-time",
            "example": "2024-11-01T21:00:00+00:00"
          },
          "CurrencyOfTransfer": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          },
          "DestinationCountryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBExchangeRate1"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "Creditor": {
            "$ref": "#/components/schemas/OBPartyIdentification43"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "RegulatoryReporting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "maxItems": 10
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        }
      },
      "OBWriteInternationalScheduledConsentResponse6": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Permission",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/OBInternalConsentStatus1Code_1"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "CutOffDateTime": {
                "description": "Specified cut-off date and time for the payment consent. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "ExchangeRateInformation": {
                "$ref": "#/components/schemas/OBExchangeRate1"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalScheduled3"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteInternationalScheduledResponse6": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "InternationalScheduledPaymentId",
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "properties": {
              "InternationalScheduledPaymentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the international scheduled payment resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              },
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the message was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Status": {
                "$ref": "#/components/schemas/ExternalPaymentTransactionStatus1Code_2"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "ExpectedExecutionDateTime": {
                "description": "Expected execution date and time for the payment resource. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "ExpectedSettlementDateTime": {
                "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time",
                "example": "2024-10-16T12:00:00+00:00"
              },
              "Refund": {
                "$ref": "#/components/schemas/OBInternationalRefundAccount1"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "ExchangeRateInformation": {
                "$ref": "#/components/schemas/OBExchangeRate1"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalScheduled3"
              },
              "MultiAuthorisation": {
                "$ref": "#/components/schemas/OBMultiAuthorisation1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWritePaymentDetailsResponse1": {
        "type": "object",
        "required": [
          "Data"
        ],
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PaymentStatus": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBWritePaymentDetails1"
                }
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWritePaymentDetails1": {
        "description": "Payment status details.",
        "type": "object",
        "required": [
          "PaymentTransactionId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "additionalProperties": false,
        "properties": {
          "PaymentTransactionId": {
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
            "type": "string",
            "maxLength": 210,
            "example": "dfc474a8-ad89-4443-afed-55c7af89e48e"
          },
          "Status": {
            "$ref": "#/components/schemas/ExternalPaymentTransactionStatus1Code"
          },
          "StatusUpdateDateTime": {
            "description": "Date and time at which the status was assigned to the transfer. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-17T12:00:00+00:00"
          },
          "StatusDetail": {
            "$ref": "#/components/schemas/OBPaymentStatusDetail1"
          }
        }
      },
      "ExternalPaymentTransactionStatus1Code": {
        "description": "Status of a transfer, as assigned by the transaction administrator <dl>\n  <dt>INFA</dt><dd>InitiationFailed - Standing order has been setup successfully but the individual payment has failed</dd>\n  <dt>INCO</dt><dd>InitiationCompleted - Standing order has been setup successfully and the individual payment has been successfully completed.</dd>\n  <dt>ACCC</dt><dd>AcceptedSettlementCompletedCreditorAccount - Settlement on the creditor's account has been completed.</dd>\n  <dt>ACCP</dt><dd>AcceptedCustomerProfile - Preceding check of technical validation was successful. Customer profile check was also successful.</dd>\n  <dt>ACFC</dt><dd>AcceptedFundsChecked - Preceding check of technical validation and customer profile was successful and an automatic funds check was positive.</dd>\n  <dt>ACSC</dt><dd>AcceptedSettlementCompletedDebitorAccount - Settlement completed. Usage : this can be used by a Market Infrastructure reporting to Infrastructure Participant or an Account Servicer to Account Owner to report that the transaction account entry has been completed. Warning : this status is provided for transaction status reasons, not for financial information. It can only be used after bilateral agreement</dd>\n  <dt>ACSP</dt><dd>AcceptedSettlementInProcess - All preceding checks such as technical validation and customer profile were successful and therefore the payment instruction has been accepted for execution.</dd>\n  <dt>ACTC</dt><dd>AcceptedTechnicalValidation - Authentication and syntactical and semantical validation are successful</dd>\n  <dt>ACWC</dt><dd>AcceptedWithChange - Instruction is accepted but a change will be made, such as date or remittance not sent.</dd>\n  <dt>ACWP</dt><dd>AcceptedWithoutPosting - Payment instruction included in the credit transfer is accepted without being posted to the creditor customer\u2019s account.</dd>\n  <dt>BLCK</dt><dd>Blocked - Payment transaction previously reported with status 'ACWP' is blocked, for example, funds will neither be posted to the Creditor's account, nor be returned to the Debtor.</dd>\n  <dt>CANC</dt><dd>Cancelled - Payment initiation has been successfully cancelled after having received a request for cancellation. Usage: code to be used in the context of APIs only.</dd>\n  <dt>PATC</dt><dd>PartiallyAcceptedTechnicalCorrect - Payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.</dd>\n  <dt>PDNG</dt><dd>Pending - Payment instruction is pending. Further checks and status update will be performed.</dd>\n  <dt>RCVD</dt><dd>Received - Payment instruction has been received.</dd>\n  <dt>RJCT</dt><dd>Rejected - Payment instruction has been rejected.</dd>\n</dl>\n",
        "type": "string",
        "enum": [
          "INFA",
          "INCO",
          "ACCC",
          "ACCP",
          "ACFC",
          "ACSC",
          "ACSP",
          "ACTC",
          "ACWC",
          "ACWP",
          "BLCK",
          "CANC",
          "PATC",
          "PDNG",
          "RCVD",
          "RJCT"
        ],
        "example": "CANC"
      },
      "OBPaymentStatusDetail1": {
        "description": "Payment status details as per underlying Payment Rail.",
        "required": [
          "Status"
        ],
        "properties": {
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrument1Code"
          },
          "Status": {
            "description": "Status of a transfer, as assigned by the transaction administrator.",
            "type": "string",
            "maxLength": 128
          },
          "StatusReason": {
            "$ref": "#/components/schemas/OBTransactionIndividualStatusReason1Code"
          },
          "StatusReasonDescription": {
            "description": "Reason provided for the status of a transfer.",
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "OBTransactionIndividualStatusReason1Code": {
        "description": "Reason Code provided for the status of a transfer.",
        "type": "string",
        "enum": [
          "Cancelled",
          "PendingFailingSettlement",
          "PendingSettlement",
          "Proprietary",
          "ProprietaryRejection",
          "Suspended",
          "Unmatched"
        ],
        "example": "Cancelled"
      },
      "OBWriteInternationalStandingOrder4": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalStandingOrder4"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBWriteInternationalStandingOrderConsent6": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "Permission",
              "Initiation"
            ],
            "properties": {
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalStandingOrder4"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        }
      },
      "OBInternationalStandingOrder4": {
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "MandateRelatedInformation",
          "CurrencyOfTransfer",
          "InstructedAmount",
          "CreditorAccount"
        ],
        "properties": {
          "MandateRelatedInformation": {
            "$ref": "#/components/schemas/OBMandateRelatedInformation1"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBRemittanceInformation2"
          },
          "NumberOfPayments": {
            "$ref": "#/components/schemas/NumberOfPayments"
          },
          "ExtendedPurpose": {
            "description": "Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.",
            "type": "string",
            "maxLength": 140,
            "example": "Buying Goods"
          },
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBInternalChargeBearerType1Code"
          },
          "CurrencyOfTransfer": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          },
          "DestinationCountryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/DebtorAccount"
          },
          "UltimateDebtor": {
            "$ref": "#/components/schemas/OBUltimateDebtor1"
          },
          "Creditor": {
            "$ref": "#/components/schemas/OBPartyIdentification43"
          },
          "UltimateCreditor": {
            "$ref": "#/components/schemas/OBUltimateCreditor1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccountCreditor3"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          },
          "RegulatoryReporting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBRegulatoryReporting1"
            },
            "maxItems": 10
          }
        }
      },
      "OBWriteInternationalStandingOrderConsentResponse7": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Permission",
              "Initiation"
            ],
            "properties": {
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time"
              },
              "Status": {
                "$ref": "#/components/schemas/OBInternalConsentStatus1Code_1"
              },
              "StatusReason": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBStatusReason"
                }
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time"
              },
              "Permission": {
                "$ref": "#/components/schemas/OBInternalPermissions2Code"
              },
              "ReadRefundAccount": {
                "$ref": "#/components/schemas/OBInternalReadRefundAccount1Code"
              },
              "CutOffDateTime": {
                "description": "Specified cut-off date and time for the payment consent. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalStandingOrder4"
              },
              "Authorisation": {
                "$ref": "#/components/schemas/OBAuthorisation1"
              },
              "SCASupportData": {
                "$ref": "#/components/schemas/OBSCASupportData1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/OBCashAccountDebtor4"
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      },
      "OBWriteInternationalStandingOrderResponse7": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "InternationalStandingOrderId",
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Initiation"
            ],
            "properties": {
              "InternationalStandingOrderId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the international standing order resource.",
                "type": "string",
                "maxLength": 40
              },
              "ConsentId": {
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                "type": "string",
                "maxLength": 128,
                "example": "25475c32-4dd8-4e76-8a2b-2f530862cf69"
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time"
              },
              "Status": {
                "$ref": "#/components/schemas/ExternalPaymentTransactionStatus1Code_2"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00\n",
                "type": "string",
                "format": "date-time"
              },
              "StatusReason": {
                "$ref": "#/components/schemas/OBStatusReason"
              },
              "Refund": {
                "$ref": "#/components/schemas/OBInternationalRefundAccount1"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OBCharge2"
                }
              },
              "Initiation": {
                "$ref": "#/components/schemas/OBInternationalStandingOrder4"
              },
              "MultiAuthorisation": {
                "$ref": "#/components/schemas/OBMultiAuthorisation1"
              },
              "Debtor": {
                "$ref": "#/components/schemas/Debtor"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {}
        }
      }
    }
  }
}