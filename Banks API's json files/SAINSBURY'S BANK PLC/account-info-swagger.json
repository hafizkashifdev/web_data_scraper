{
  "openapi": "3.0.0",
  "info": {
    "title": "Account and Transaction API Specification for Sainsburys Bank",
    "description": "Open API for Account and Transaction API Specification",
    "version": "v3.1.1"
  },
  "servers": [
    {
      "url": {
        "https": "//tsob.sainsburysbank.co.uk/open-banking/v3.1/aisp"
      }
    },
    {
      "url": {
        "https": "//ob.sainsburysbank.co.uk/open-banking/v3.1/aisp\""
      }
    }
  ],
  "paths": {
    "/account-access-consents": {
      "post": {
        "tags": [
          "Account Access"
        ],
        "summary": "Create Account Access Consents",
        "operationId": "CreateAccountAccessConsents",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/components/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent-Param"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/OBReadConsent1"
              }
            }
          },
          "description": "Default",
          "required": true
        },
        "responses": {
          "201\"": {
            "$ref": "#/components/responses/201AccountAccessConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/components/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/403ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/404ErrorResponse"
          },
          "405": {
            "$ref": "#/components/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/components/responses/406ErrorResponse"
          },
          "415": {
            "$ref": "#/components/responses/415ErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/500ErrorResponse"
          }
        }
      }
    },
    "/account-access-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Account Access"
        ],
        "summary": "Get Account Access Consents",
        "operationId": "GetAccountAccessConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/components/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent-Param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200AccountAccessConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/components/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/403ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/404ErrorResponse"
          },
          "405": {
            "$ref": "#/components/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/components/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/500ErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "Account Access"
        ],
        "summary": "Delete Account Access Consents",
        "operationId": "DeleteAccountAccessConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/components/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent-Param"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204AccountAccessConsentsConsentIdDeleted"
          },
          "400": {
            "$ref": "#/components/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/components/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/403ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/404ErrorResponse"
          },
          "405": {
            "$ref": "#/components/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/components/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/500ErrorResponse"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Accounts",
        "operationId": "GetAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/components/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent-Param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200AccountsRead"
          },
          "400": {
            "$ref": "#/components/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/components/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/403ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/404ErrorResponse"
          },
          "405": {
            "$ref": "#/components/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/components/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/500ErrorResponse"
          }
        }
      }
    },
    "/accounts/{AccountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Accounts",
        "operationId": "GetAccountsAccountId",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/components/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent-Param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200AccountsAccountIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/components/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/components/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/components/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/500ErrorResponse"
          }
        }
      }
    },
    "/accounts/{AccountId}/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get Balances",
        "operationId": "GetAccountsAccountIdBalances",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/components/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent-Param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200AccountsAccountIdBalancesRead"
          },
          "400": {
            "$ref": "#/components/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/components/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/components/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/components/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/500ErrorResponse"
          }
        }
      }
    },
    "/accounts/{AccountId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Transactions",
        "operationId": "GetAccountsAccountIdTransactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/components/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/components/parameters/FromBookingDateTimeParam"
          },
          {
            "$ref": "#/components/parameters/ToBookingDateTimeParam"
          },
          {
            "$ref": "#/components/parameters/x-customer-user-agent-Param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200AccountsAccountIdTransactionsRead"
          },
          "400": {
            "$ref": "#/components/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/components/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/components/responses/403ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/404ErrorResponse"
          },
          "405": {
            "$ref": "#/components/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/components/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/500ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "FromBookingDateTimeParam": {
        "in": "query",
        "name": "fromBookingDateTime",
        "description": "The UTC ISO 8601 Date Time to filter transactions FROM\nNB Time component is optional - set to 00: 00: 00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "ToBookingDateTimeParam": {
        "in": "query",
        "name": "toBookingDateTime",
        "description": "The UTC ISO 8601 Date Time to filter transactions TO\nNB Time component is optional - set to 00: 00: 00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "FromStatementDateTimeParam": {
        "in": "query",
        "name": "fromStatementDateTime",
        "description": "The UTC ISO 8601 Date Time to filter statements FROM\nNB Time component is optional - set to 00: 00: 00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "ToStatementDateTimeParam": {
        "in": "query",
        "name": "toStatementDateTime",
        "description": "The UTC ISO 8601 Date Time to filter statements TO\nNB Time component is optional - set to 00: 00: 00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-fapi-financial-id-Param": {
        "in": "header",
        "name": "x-fapi-financial-id",
        "required": true,
        "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
        "schema": {
          "type": "string"
        }
      },
      "x-fapi-customer-ip-address-Param": {
        "in": "header",
        "name": "x-fapi-customer-ip-address",
        "required": false,
        "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
        "schema": {
          "type": "string"
        }
      },
      "x-fapi-interaction-id-Param": {
        "in": "header",
        "name": "x-fapi-interaction-id",
        "required": false,
        "description": "An RFC4122 UID used as a correlation id.",
        "schema": {
          "type": "string"
        }
      },
      "x-fapi-customer-last-logged-time-Param": {
        "in": "header",
        "name": "x-fapi-customer-last-logged-time",
        "required": false,
        "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31UTC",
        "schema": {
          "type": "string",
          "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2}(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\d{4}\\d{2}:\\d{2}:\\d{2}(GMT|UTC)$"
        }
      },
      "AuthorizationParam": {
        "in": "header",
        "name": "Authorization",
        "required": true,
        "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
        "schema": {
          "type": "string"
        }
      },
      "AccountId": {
        "name": "AccountId",
        "in": "path",
        "description": "AccountId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConsentId": {
        "name": "ConsentId",
        "in": "path",
        "description": "ConsentId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "StatementId": {
        "name": "StatementId",
        "in": "path",
        "description": "StatementId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "x-customer-user-agent-Param": {
        "in": "header",
        "name": "x-customer-user-agent",
        "description": "Indicates the user-agent that the PSU is using.",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "201AccountAccessConsentsCreated": {
        "description": "Account Access Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBReadConsentResponse1"
            }
          }
        }
      },
      "200AccountAccessConsentsConsentIdRead": {
        "description": "Account Access Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBReadConsentResponse1"
            }
          }
        }
      },
      "204AccountAccessConsentsConsentIdDeleted": {
        "description": "Account Access Consents Deleted",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "200AccountsRead": {
        "description": "Accounts Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBReadAccount3"
            }
          }
        }
      },
      "200AccountsAccountIdRead": {
        "description": "Accounts Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBReadAccount3"
            }
          }
        }
      },
      "200AccountsAccountIdTransactionsRead": {
        "description": "Transactions Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBReadTransaction5"
            }
          }
        }
      },
      "200AccountsAccountIdBalancesRead": {
        "description": "Balances Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBReadBalance1"
            }
          }
        }
      },
      "400ErrorResponse": {
        "description": "Bad request",
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      },
      "401ErrorResponse": {
        "description": "Unauthorized"
      },
      "403ErrorResponse": {
        "description": "Forbidden"
      },
      "404ErrorResponse": {
        "description": "Not found"
      },
      "405ErrorResponse": {
        "description": "Method Not Allowed"
      },
      "406ErrorResponse": {
        "description": "Not Acceptable"
      },
      "415ErrorResponse": {
        "description": "Unsupported Media Type"
      },
      "429ErrorResponse": {
        "description": "Too Many Requests",
        "headers": {
          "Retry-After": {
            "description": "Number in seconds to wait",
            "schema": {
              "type": "integer"
            }
          }
        }
      },
      "500ErrorResponse": {
        "description": "Internal Server Error",
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      }
    },
    "schemas": {
      "AccountId": {
        "description": "Account Identification of the customer for Product Details",
        "type": "string",
        "minLength": 1,
        "maxLength": 40
      },
      "OBAccount3": {
        "description": "Unambiguous identification of the account to which credit and debit entries are made.",
        "type": "object",
        "properties": {
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "Currency": {
            "description": "Identification of the currency in which the account is held. \nUsage: Currency should only be used in case one and the same account number covers several currencies\nand the initiating party needs to identify which currency needs to be used for settlement on the account.",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          },
          "AccountType": {
            "$ref": "#/components/schemas/OBExternalAccountType1Code"
          },
          "AccountSubType": {
            "$ref": "#/components/schemas/OBExternalAccountSubType1Code"
          },
          "Description": {
            "description": "Specifies the description of the account type.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "Nickname": {
            "description": "The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "Account": {
            "items": {
              "$ref": "#/components/schemas/OBCashAccount5"
            },
            "type": "array",
            "description": "Provides the details to identify an account."
          },
          "Servicer": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5"
          }
        },
        "required": [
          "AccountId",
          "Currency",
          "AccountType",
          "AccountSubType"
        ],
        "additionalProperties": false
      },
      "OBAccount3Basic": {
        "description": "Unambiguous identification of the account to which credit and debit entries are made.",
        "type": "object",
        "properties": {
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "Currency": {
            "description": "Identification of the currency in which the account is held. \nUsage: Currency should only be used in case one and the same account number covers several currencies\nand the initiating party needs to identify which currency needs to be used for settlement on the account.",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          },
          "AccountType": {
            "$ref": "#/components/schemas/OBExternalAccountType1Code"
          },
          "AccountSubType": {
            "$ref": "#/components/schemas/OBExternalAccountSubType1Code"
          },
          "Description": {
            "description": "Specifies the description of the account type.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "Nickname": {
            "description": "The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          }
        },
        "required": [
          "AccountId",
          "Currency",
          "AccountType",
          "AccountSubType"
        ],
        "additionalProperties": false
      },
      "OBAccount3Detail": {
        "description": "Unambiguous identification of the account to which credit and debit entries are made.",
        "type": "object",
        "properties": {
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "Currency": {
            "description": "Identification of the currency in which the account is held. \nUsage: Currency should only be used in case one and the same account number covers several currencies\nand the initiating party needs to identify which currency needs to be used for settlement on the account.",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          },
          "AccountType": {
            "$ref": "#/components/schemas/OBExternalAccountType1Code"
          },
          "AccountSubType": {
            "$ref": "#/components/schemas/OBExternalAccountSubType1Code"
          },
          "Description": {
            "description": "Specifies the description of the account type.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "Nickname": {
            "description": "The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "Account": {
            "items": {
              "$ref": "#/components/schemas/OBCashAccount5"
            },
            "type": "array",
            "description": "Provides the details to identify an account."
          },
          "Servicer": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5"
          }
        },
        "required": [
          "AccountId",
          "Currency",
          "AccountType",
          "AccountSubType",
          "Account"
        ],
        "additionalProperties": false
      },
      "OBActiveCurrencyAndAmount_SimpleType": {
        "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
        "type": "string",
        "pattern": "^\\d{1,13}\\.\\d{1,5}$"
      },
      "OBActiveOrHistoricCurrencyAndAmount": {
        "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
          },
          "Currency": {
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          }
        },
        "required": [
          "Amount",
          "Currency"
        ],
        "additionalProperties": false
      },
      "OBAddressTypeCode": {
        "description": "Identifies the nature of the postal address.",
        "type": "string",
        "enum": [
          "Business",
          "Correspondence",
          "DeliveryTo",
          "MailTo",
          "POBox",
          "Postal",
          "Residential",
          "Statement"
        ]
      },
      "OBBalanceType1Code": {
        "description": "Balance type, in a coded form.",
        "type": "string",
        "enum": [
          "ClosingAvailable",
          "ClosingBooked",
          "ClosingCleared",
          "Expected",
          "ForwardAvailable",
          "Information",
          "InterimAvailable",
          "InterimBooked",
          "InterimCleared",
          "OpeningAvailable",
          "OpeningBooked",
          "OpeningCleared",
          "PreviouslyClosedBooked"
        ]
      },
      "OBBankTransactionCodeStructure1": {
        "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry.",
        "type": "object",
        "properties": {
          "Code": {
            "description": "Specifies the family within a domain.",
            "type": "string",
            "minLength": 1,
            "maxLength": 4
          },
          "SubCode": {
            "description": "Specifies the sub-product family within a specific family.",
            "type": "string",
            "minLength": 1,
            "maxLength": 4
          }
        },
        "required": [
          "Code",
          "SubCode"
        ],
        "additionalProperties": false
      },
      "OBCashBalance1": {
        "description": "Set of elements used to define the balance details.",
        "type": "object",
        "properties": {
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "CreditDebitIndicator": {
            "type": "string",
            "enum": [
              "Credit",
              "Debit"
            ],
            "description": "Indicates whether the balance is a credit or a debit balance. \nUsage: A zero balance is considered to be a credit balance."
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1Code"
          },
          "DateTime": {
            "description": "Indicates the date (and time) of the balance.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "CreditLine": {
            "items": {
              "$ref": "#/components/schemas/OBCreditLine1"
            },
            "type": "array",
            "description": "Set of elements used to provide details on the credit line."
          }
        },
        "required": [
          "AccountId",
          "CreditDebitIndicator",
          "Type",
          "DateTime",
          "Amount"
        ],
        "additionalProperties": false,
        "minProperties": 1
      },
      "OBCreditDebitCode": {
        "type": "string",
        "enum": [
          "Credit",
          "Debit"
        ]
      },
      "OBCreditLine1": {
        "description": "Set of elements used to provide details on the credit line.",
        "type": "object",
        "properties": {
          "Included": {
            "description": "Indicates whether or not the credit line is included in the balance of the account.\nUsage: If not present, credit line is not included in the balance amount of the account.",
            "type": "boolean"
          },
          "Type": {
            "$ref": "#/components/schemas/OBExternalLimitType1Code"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "required": [
          "Included"
        ],
        "additionalProperties": false
      },
      "OBCurrencyExchange5": {
        "description": "Set of elements used to provide details on the currency exchange.",
        "type": "object",
        "properties": {
          "SourceCurrency": {
            "description": "Currency from which an amount is to be converted in a currency conversion.",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          },
          "TargetCurrency": {
            "description": "Currency from which an amount is to be converted in a currency conversion.",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          },
          "UnitCurrency": {
            "description": "Currency from which an amount is to be converted in a currency conversion.",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
          },
          "ExchangeRate": {
            "description": "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
            "type": "number"
          },
          "ContractIdentification": {
            "description": "Unique identification to unambiguously identify the foreign exchange contract.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "QuotationDate": {
            "description": "Date and time at which an exchange rate is quoted.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "required": [
          "SourceCurrency",
          "ExchangeRate"
        ],
        "additionalProperties": false
      },
      "OBEntryStatus1Code": {
        "description": "Status of a transaction entry on the books of the account servicer.",
        "type": "string",
        "enum": [
          "Booked",
          "Pending"
        ]
      },
      "OBExternalAccountSubType1Code": {
        "description": "Specifies the sub type of account (product family group).",
        "type": "string",
        "enum": [
          "ChargeCard",
          "CreditCard",
          "CurrentAccount",
          "EMoney",
          "Loan",
          "Mortgage",
          "PrePaidCard",
          "Savings"
        ]
      },
      "OBExternalAccountType1Code": {
        "description": "Specifies the type of account (personal or business).",
        "type": "string",
        "enum": [
          "Business",
          "Personal"
        ]
      },
      "OBExternalCardAuthorisationType1Code": {
        "description": "The card authorisation type.",
        "type": "string",
        "enum": [
          "ConsumerDevice",
          "Contactless",
          "None",
          "PIN"
        ]
      },
      "OBExternalCardSchemeType1Code": {
        "description": "Name of the card scheme.",
        "type": "string",
        "enum": [
          "AmericanExpress",
          "Diners",
          "Discover",
          "MasterCard",
          "VISA"
        ]
      },
      "OBExternalLimitType1Code": {
        "description": "Limit type, in a coded form.",
        "type": "string",
        "enum": [
          "Available",
          "Credit",
          "Emergency",
          "Pre-Agreed",
          "Temporary"
        ]
      },
      "OBExternalPermissions1Code": {
        "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the Sainsburys Bank. Note this is a subset of the Open Banking permissions.",
        "type": "string",
        "enum": [
          "ReadAccountsBasic",
          "ReadAccountsDetail",
          "ReadBalances",
          "ReadPAN",
          "ReadTransactionsBasic",
          "ReadTransactionsCredits",
          "ReadTransactionsDebits",
          "ReadTransactionsDetail"
        ]
      },
      "OBExternalRequestStatus1Code": {
        "description": "Specifies the status of consent resource in code form.",
        "type": "string",
        "enum": [
          "Authorised",
          "AwaitingAuthorisation",
          "Rejected",
          "Revoked"
        ]
      },
      "OBMerchantDetails1": {
        "description": "Details of the merchant involved in the transaction.",
        "type": "object",
        "properties": {
          "MerchantName": {
            "description": "Name by which the merchant is known.",
            "type": "string",
            "minLength": 1,
            "maxLength": 350
          },
          "MerchantCategoryCode": {
            "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
            "type": "string",
            "minLength": 3,
            "maxLength": 4
          }
        },
        "additionalProperties": false
      },
      "OBReadAccount3": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Account": {
                "items": {
                  "$ref": "#/components/schemas/OBAccount3"
                },
                "type": "array",
                "description": "Unambiguous identification of the account to which credit and debit entries are made."
              }
            },
            "additionalProperties": false
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "Data",
          "Links",
          "Meta"
        ],
        "additionalProperties": false
      },
      "OBReadBalance1": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Balance": {
                "items": {
                  "$ref": "#/components/schemas/OBCashBalance1"
                },
                "type": "array",
                "description": "Set of elements used to define the balance details.",
                "minItems": 1
              }
            },
            "required": [
              "Balance"
            ],
            "additionalProperties": false
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "Data",
          "Links",
          "Meta"
        ],
        "additionalProperties": false
      },
      "OBReadConsent1": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadData1"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk2"
          }
        },
        "required": [
          "Data",
          "Risk"
        ],
        "additionalProperties": false
      },
      "OBReadConsentResponse1": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "ConsentId": {
                "description": "Unique identification as assigned to identify the account access consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128
              },
              "CreationDateTime": {
                "description": "Date and time at which the resource was created.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
                "type": "string",
                "format": "date-time"
              },
              "Status": {
                "$ref": "#/components/schemas/OBExternalRequestStatus1Code"
              },
              "StatusUpdateDateTime": {
                "description": "Date and time at which the resource status was updated.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
                "type": "string",
                "format": "date-time"
              },
              "Permissions": {
                "items": {
                  "$ref": "#/components/schemas/OBExternalPermissions1Code"
                },
                "type": "array",
                "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
                "minItems": 1
              },
              "ExpirationDateTime": {
                "description": "Specified date and time the permissions will expire.\nIf this is not populated, the permissions will be open ended.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
                "type": "string",
                "format": "date-time"
              },
              "TransactionFromDateTime": {
                "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
                "type": "string",
                "format": "date-time"
              },
              "TransactionToDateTime": {
                "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Permissions"
            ],
            "additionalProperties": false
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk2"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "Data",
          "Risk",
          "Links",
          "Meta"
        ],
        "additionalProperties": false
      },
      "OBReadData1": {
        "type": "object",
        "properties": {
          "Permissions": {
            "items": {
              "$ref": "#/components/schemas/OBExternalPermissions1Code"
            },
            "type": "array",
            "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
            "minItems": 1
          },
          "ExpirationDateTime": {
            "description": "Specified date and time the permissions will expire.\nIf this is not populated, the permissions will be open ended.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "TransactionFromDateTime": {
            "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "TransactionToDateTime": {
            "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Permissions"
        ],
        "additionalProperties": false
      },
      "OBReadTransaction5": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Transaction": {
                "items": {
                  "$ref": "#/components/schemas/OBTransaction5"
                },
                "type": "array",
                "description": "Provides further details on an entry in the report."
              }
            },
            "additionalProperties": false
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "Data",
          "Links",
          "Meta"
        ],
        "additionalProperties": false
      },
      "OBTransaction5": {
        "description": "Provides further details on an entry in the report.",
        "type": "object",
        "properties": {
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "TransactionId": {
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
            "type": "string",
            "minLength": 1,
            "maxLength": 210
          },
          "TransactionReference": {
            "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "StatementReference": {
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "type": "array",
            "description": "Unique reference for the statement. This reference may be optionally populated if available."
          },
          "CreditDebitIndicator": {
            "type": "string",
            "enum": [
              "Credit",
              "Debit"
            ],
            "description": "Indicates whether the transaction is a credit or a debit entry."
          },
          "Status": {
            "$ref": "#/components/schemas/OBEntryStatus1Code"
          },
          "BookingDateTime": {
            "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "ValueDateTime": {
            "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "AddressLine": {
            "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "CurrencyExchange": {
            "$ref": "#/components/schemas/OBCurrencyExchange5"
          },
          "BankTransactionCode": {
            "$ref": "#/components/schemas/OBBankTransactionCodeStructure1"
          },
          "ProprietaryBankTransactionCode": {
            "description": "Set of elements to fully identify a proprietary bank transaction code.",
            "type": "object",
            "properties": {
              "Code": {
                "description": "Proprietary bank transaction code to identify the underlying transaction.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "Issuer": {
                "description": "Identification of the issuer of the proprietary bank transaction code.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              }
            },
            "required": [
              "Code"
            ],
            "additionalProperties": false
          },
          "CardInstrument": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          },
          "TransactionInformation": {
            "$ref": "#/components/schemas/TransactionInformation"
          },
          "Balance": {
            "$ref": "#/components/schemas/OBTransactionCashBalance"
          },
          "MerchantDetails": {
            "$ref": "#/components/schemas/OBMerchantDetails1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6"
          },
          "DebtorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6"
          }
        },
        "required": [
          "AccountId",
          "CreditDebitIndicator",
          "Status",
          "BookingDateTime",
          "Amount"
        ],
        "additionalProperties": false
      },
      "OBTransaction5Basic": {
        "description": "Provides further details on an entry in the report.",
        "type": "object",
        "properties": {
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "TransactionId": {
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
            "type": "string",
            "minLength": 1,
            "maxLength": 210
          },
          "TransactionReference": {
            "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "StatementReference": {
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "type": "array",
            "description": "Unique reference for the statement. This reference may be optionally populated if available."
          },
          "CreditDebitIndicator": {
            "type": "string",
            "enum": [
              "Credit",
              "Debit"
            ],
            "description": "Indicates whether the transaction is a credit or a debit entry."
          },
          "Status": {
            "$ref": "#/components/schemas/OBEntryStatus1Code"
          },
          "BookingDateTime": {
            "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "ValueDateTime": {
            "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "AddressLine": {
            "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "CurrencyExchange": {
            "$ref": "#/components/schemas/OBCurrencyExchange5"
          },
          "BankTransactionCode": {
            "$ref": "#/components/schemas/OBBankTransactionCodeStructure1"
          },
          "ProprietaryBankTransactionCode": {
            "description": "Set of elements to fully identify a proprietary bank transaction code.",
            "type": "object",
            "properties": {
              "Code": {
                "description": "Proprietary bank transaction code to identify the underlying transaction.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "Issuer": {
                "description": "Identification of the issuer of the proprietary bank transaction code.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              }
            },
            "required": [
              "Code"
            ],
            "additionalProperties": false
          },
          "CardInstrument": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          }
        },
        "required": [
          "AccountId",
          "CreditDebitIndicator",
          "Status",
          "BookingDateTime",
          "Amount"
        ],
        "additionalProperties": false
      },
      "OBTransaction5Detail": {
        "description": "Provides further details on an entry in the report.",
        "type": "object",
        "properties": {
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "TransactionId": {
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
            "type": "string",
            "minLength": 1,
            "maxLength": 210
          },
          "TransactionReference": {
            "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "StatementReference": {
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "type": "array",
            "description": "Unique reference for the statement. This reference may be optionally populated if available."
          },
          "CreditDebitIndicator": {
            "type": "string",
            "enum": [
              "Credit",
              "Debit"
            ],
            "description": "Indicates whether the transaction is a credit or a debit entry."
          },
          "Status": {
            "$ref": "#/components/schemas/OBEntryStatus1Code"
          },
          "BookingDateTime": {
            "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "ValueDateTime": {
            "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
            "type": "string",
            "format": "date-time"
          },
          "AddressLine": {
            "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          },
          "CurrencyExchange": {
            "$ref": "#/components/schemas/OBCurrencyExchange5"
          },
          "BankTransactionCode": {
            "$ref": "#/components/schemas/OBBankTransactionCodeStructure1"
          },
          "ProprietaryBankTransactionCode": {
            "description": "Set of elements to fully identify a proprietary bank transaction code.",
            "type": "object",
            "properties": {
              "Code": {
                "description": "Proprietary bank transaction code to identify the underlying transaction.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "Issuer": {
                "description": "Identification of the issuer of the proprietary bank transaction code.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              }
            },
            "required": [
              "Code"
            ],
            "additionalProperties": false
          },
          "CardInstrument": {
            "$ref": "#/components/schemas/OBTransactionCardInstrument1"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData1"
          },
          "TransactionInformation": {
            "$ref": "#/components/schemas/TransactionInformation"
          },
          "Balance": {
            "$ref": "#/components/schemas/OBTransactionCashBalance"
          },
          "MerchantDetails": {
            "$ref": "#/components/schemas/OBMerchantDetails1"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6"
          },
          "DebtorAgent": {
            "$ref": "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBCashAccount6"
          }
        },
        "required": [
          "AccountId",
          "CreditDebitIndicator",
          "Status",
          "BookingDateTime",
          "Amount"
        ],
        "additionalProperties": false
      },
      "OBTransactionCardInstrument1": {
        "description": "Set of elements to describe the card instrument used in the transaction.",
        "type": "object",
        "properties": {
          "CardSchemeName": {
            "$ref": "#/components/schemas/OBExternalCardSchemeType1Code"
          },
          "AuthorisationType": {
            "$ref": "#/components/schemas/OBExternalCardAuthorisationType1Code"
          },
          "Name": {
            "description": "Name of the cardholder using the card instrument.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "Identification": {
            "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
            "type": "string",
            "minLength": 1,
            "maxLength": 34
          }
        },
        "required": [
          "CardSchemeName"
        ],
        "additionalProperties": false
      },
      "OBTransactionCashBalance": {
        "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.",
        "type": "object",
        "properties": {
          "CreditDebitIndicator": {
            "type": "string",
            "enum": [
              "Credit",
              "Debit"
            ],
            "description": "Indicates whether the balance is a credit or a debit balance. \nUsage: A zero balance is considered to be a credit balance."
          },
          "Type": {
            "$ref": "#/components/schemas/OBBalanceType1Code"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "required": [
          "CreditDebitIndicator",
          "Type",
          "Amount"
        ],
        "additionalProperties": false
      },
      "TransactionInformation": {
        "description": "Further details of the transaction. \nThis is the transaction narrative, which is unstructured text.",
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      },
      "OBSupplementaryData1": {
        "description": "Additional information that can not be captured in the structured fields and/or any other specific block.",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "OBBranchAndFinancialInstitutionIdentification5": {
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\nThis is the servicer of the beneficiary account.",
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentification4Code"
          },
          "Identification": {
            "description": "Unique and unambiguous identification of the servicing institution.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          }
        },
        "required": [
          "SchemeName",
          "Identification"
        ],
        "additionalProperties": false
      },
      "OBExternalFinancialInstitutionIdentification4Code": {
        "description": "Name of the identification scheme, in a coded form as published in an external list.",
        "type": "string",
        "example": [
          "UK.OBIE.BICFI"
        ],
        "minLength": 1,
        "maxLength": 40
      },
      "OBCashAccount5": {
        "description": "Provides the details to identify the beneficiary account.",
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
          },
          "Identification": {
            "description": "Beneficiary account identification.",
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "Name": {
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "SecondaryIdentification": {
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "type": "string",
            "minLength": 1,
            "maxLength": 34
          }
        },
        "required": [
          "SchemeName",
          "Identification"
        ],
        "additionalProperties": false
      },
      "OBCashAccount6": {
        "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction.",
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
          },
          "Identification": {
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "Name": {
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "SecondaryIdentification": {
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "type": "string",
            "minLength": 1,
            "maxLength": 34
          }
        },
        "additionalProperties": false
      },
      "OBExternalAccountIdentification4Code": {
        "description": "Name of the identification scheme, in a coded form as published in an external list.",
        "type": "string",
        "example": [
          "UK.OBIE.BBAN",
          "UK.OBIE.IBAN",
          "UK.OBIE.PAN",
          "UK.OBIE.Paym",
          "UK.OBIE.SortCodeAccountNumber"
        ],
        "minLength": 1,
        "maxLength": 40
      },
      "OBBranchAndFinancialInstitutionIdentification6": {
        "description": "Financial institution servicing an account for the debtor.",
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentification4Code"
          },
          "Identification": {
            "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "Name": {
            "description": "Name by which an agent is known and which is usually used to identify that agent.",
            "type": "string",
            "minLength": 1,
            "maxLength": 140
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress6"
          }
        },
        "additionalProperties": false
      },
      "OBPostalAddress6": {
        "description": "Information that locates and identifies a specific address, as defined by postal services.",
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressTypeCode"
          },
          "Department": {
            "description": "Identification of a division of a large organisation or building.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "SubDepartment": {
            "description": "Identification of a sub-division of a large organisation or building.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "StreetName": {
            "description": "Name of a street or thoroughfare.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "BuildingNumber": {
            "description": "Number that identifies the position of a building on a street.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          },
          "PostCode": {
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          },
          "TownName": {
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "CountrySubDivision": {
            "description": "Identifies a subdivision of a country such as state, region, county.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "Country": {
            "description": "Nation with its own government.",
            "type": "string",
            "pattern": "^[A-Z]{2,2}$"
          },
          "AddressLine": {
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "type": "array",
            "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text.",
            "minItems": 0,
            "maxItems": 7
          }
        },
        "additionalProperties": false
      },
      "OBError1": {
        "type": "object",
        "properties": {
          "ErrorCode": {
            "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "Message": {
            "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "Path": {
            "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "Url": {
            "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc",
            "type": "string"
          }
        },
        "required": [
          "ErrorCode",
          "Message"
        ],
        "additionalProperties": false,
        "minProperties": 1
      },
      "OBErrorResponse1": {
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
        "type": "object",
        "properties": {
          "Code": {
            "description": "High level textual error code, to help categorize the errors.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "Id": {
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "Message": {
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "Errors": {
            "items": {
              "$ref": "#/components/schemas/OBError1"
            },
            "type": "array",
            "minItems": 1
          }
        },
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "additionalProperties": false
      },
      "ISODateTime": {
        "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10: 43: 07+00: 00",
        "type": "string",
        "format": "date-time"
      },
      "Links": {
        "type": "object",
        "description": "Links relevant to the payload",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri"
          },
          "First": {
            "type": "string",
            "format": "uri"
          },
          "Prev": {
            "type": "string",
            "format": "uri"
          },
          "Next": {
            "type": "string",
            "format": "uri"
          },
          "Last": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false,
        "required": [
          "Self"
        ]
      },
      "Meta": {
        "title": "MetaData",
        "type": "object",
        "description": "Meta Data relevant to the payload",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "FirstAvailableDateTime": {
            "$ref": "#/components/schemas/ISODateTime"
          },
          "LastAvailableDateTime": {
            "$ref": "#/components/schemas/ISODateTime"
          }
        },
        "additionalProperties": false
      },
      "OBRisk2": {
        "description": "The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info.",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      }
    }
  }
}