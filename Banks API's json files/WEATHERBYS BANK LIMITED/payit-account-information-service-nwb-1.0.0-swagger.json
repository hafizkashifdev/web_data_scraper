{
    "openapi": "3.0.1",
    "info": {
        "title": "AISP API Specification",
        "description": "AISP REST API",
        "termsOfService": "https://payitproduksprdnossb.azureedge.net/documents/NatWest-Payit-User-Terms.pdf",
        "contact": {
            "name": "Payit"
        },
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "https://lp2api.natwestpayit.com/lp2nos-account",
            "description": "AISP Base server url"
        },
        {
            "url": "https://login.microsoftonline.com/a67f64d9-57b9-4c56-b2a2-8bfb5f86966a",
            "description": "Token Generation server url"
        }
    ],
    "tags": [
        {
            "name": "Bearer Token",
            "description": "Returns a token thats needed to access AISP endpoints"
        },
        {
            "name": "Accounts",
            "description": "Returns a list of accounts for a consent"
        },
        {
            "name": "Consent",
            "description": "Initiate Consent"
        },
        {
            "name": "Eligible Banks",
            "description": "Get Eligible Banks"
        }
    ],
    "paths": {
        "/oauth2/token": {
            "get": {
                "tags": [
                    "Bearer Token"
                ],
                "summary": "Get Bearer Token",
                "operationId": "getBearerToken",
                "parameters": [
                    {
                        "name": "grant_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "A Parameter that needs to be passed for authentication",
                            "example": "client_credentials"
                        }
                    },
                    {
                        "name": "client_secret",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "You will be given the client secret by your Payit Implementation manager",
                            "example": "rZi0LRigb2c2UDNWKwI4CU6UKB64DoyogKNviQzRTGc"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "You will be given the client id by your Payit Implementation manager",
                            "example": "1c846832-50ab-4430-9a9e-dc7b5367b0c2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/app.v1+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BearerTokenComponent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ais-consents": {
            "post": {
                "tags": [
                    "Consent"
                ],
                "summary": "Create Account Access Consent",
                "operationId": "createConsent",
                "parameters": [
                    {
                        "name": "x-transaction-ID",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Unique identification assigned by the initiating party to unambiguously identify the consent.This identification is passed on, unchanged, throughout the entire end-to-end chain."
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Access token to be sent to Payit. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Indicates the Payit version used. \\n For Payit AISP version 1 use 'application/app.v1+json' value",
                            "example": "application/app.v1+json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAccessConsentPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/app.v1+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAccessConsentResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/eligible-banks": {
            "get": {
                "tags": [
                    "Eligible Banks"
                ],
                "summary": "Get All Eligible Banks",
                "operationId": "getEligibleBanks",
                "parameters": [
                    {
                        "name": "SortCode",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "If supplied it will provide the list the banks for a given sortcode. e.g. 123456. Most will only have a single bank for a sortcode but some e.g. HSBC will have multiple bank ids for the provided sortcode. This may also return no banks if the sortcode is unknown or not for a bank that is supported. If not supplied all eligible banks will be returned",
                            "example": 500000
                        }
                    },
                    {
                        "name": "BrandId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Access token to be sent to Payit. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Indicates the Payit version used. \\n For Payit AISP version 1 use 'application/app.v1+json' value",
                            "example": "application/app.v1+json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/app.v1+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EligibleBanksComponent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Retrieve Accounts",
                "operationId": "getAccounts",
                "parameters": [
                    {
                        "name": "x-transaction-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-consent-payit-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "A consent id that was returned by a previous use of the endpoint AIS Consents."
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Indicates the Payit version used. \\n To include Parties Ensure For Payit AISP version 2 or upwards E.g. 'application/app.v2+json' value",
                            "example": "application/app.v1+json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/app.v1+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BearerTokenComponent": {
                "required": [
                    "token_type",
                    "expires_in",
                    "ext_expires_in",
                    "expires_on",
                    "not_before",
                    "resource",
                    "access_token"
                ],
                "type": "object",
                "properties": {
                    "token_type": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "string"
                    },
                    "ext_expires_in": {
                        "type": "string"
                    },
                    "expires_on": {
                        "type": "string"
                    },
                    "not_before": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "access_token": {
                        "type": "string"
                    }
                }
            },
            "AccountAccessConsentPayload": {
                "required": [
                    "Data"
                ],
                "type": "object",
                "properties": {
                    "Data": {
                        "$ref": "#/components/schemas/AccountAccessConsentPayloadData"
                    }
                }
            },
            "AccountAccessConsentPayloadData": {
                "required": [
                    "BankId",
                    "BrandId",
                    "CompanyId",
                    "Permissions",
                    "RedirectUrl"
                ],
                "type": "object",
                "properties": {
                    "CompanyId": {
                        "pattern": "^\\S{1,36}$",
                        "type": "string"
                    },
                    "BrandId": {
                        "pattern": "^\\S{1,36}$",
                        "type": "string"
                    },
                    "BankId": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "RedirectUrl": {
                        "maxLength": 2000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Payit will redirect the user to this URL, which is a confirmation page in your application. The same url must be provided during onboarding.",
                        "example": "https://payment.tecstore.com/status"
                    },
                    "Permissions": {
                        "type": "array",
                        "example": [
                            "ReadAccountsBasic",
                            "ReadAccountsDetail"
                        ],
                        "items": {
                            "type": "string",
                            "example": "[\"ReadAccountsBasic\",\"ReadAccountsDetail\"]",
                            "enum": [
                                "ReadAccountsBasic",
                                "ReadAccountsDetail",
                                "ReadBalances",
                                "ReadBeneficiariesBasic",
                                "ReadBeneficiariesDetail",
                                "ReadDirectDebits",
                                "ReadOffers",
                                "ReadPAN",
                                "ReadParty",
                                "ReadPartyPSU",
                                "ReadProducts",
                                "ReadScheduledPaymentsBasic",
                                "ReadScheduledPaymentsDetail",
                                "ReadStandingOrdersBasic",
                                "ReadStandingOrdersDetail",
                                "ReadStatementsBasic",
                                "ReadStatementsDetail",
                                "ReadTransactionsBasic",
                                "ReadTransactionsCredits",
                                "ReadTransactionsDebits",
                                "ReadTransactionsDetail"
                            ]
                        }
                    },
                    "TransactionFromDateTime": {
                        "type": "string",
                        "description": "Only needed when querying transactions. Specified start date and time for the transaction history query period. If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction. \nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                        "example": "2017-04-05T10:43:07+00:00"
                    },
                    "TransactionToDateTime": {
                        "type": "string",
                        "description": "Only needed when querying transactions. Specified end date and time for the transaction query period. If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction. \nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                        "example": "2017-04-05T10:43:07+00:00"
                    }
                }
            },
            "AccountAccessConsentResponse": {
                "required": [
                    "Data"
                ],
                "type": "object",
                "properties": {
                    "Data": {
                        "$ref": "#/components/schemas/AccountAccessConsentResponseData"
                    }
                }
            },
            "AccountAccessConsentResponseData": {
                "required": [
                    "ConsentPayitId",
                    "CreationDateTime",
                    "ResponseURL",
                    "Status"
                ],
                "type": "object",
                "properties": {
                    "ConsentPayitId": {
                        "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,40}$",
                        "type": "string"
                    },
                    "Status": {
                        "type": "string",
                        "enum": [
                            "Authorised",
                            "AwaitingAuthorisation",
                            "Revoked",
                            "Rejected"
                        ]
                    },
                    "CreationDateTime": {
                        "type": "string"
                    },
                    "ResponseURL": {
                        "maxLength": 2000,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "EligibleBank": {
                "required": [
                    "BankId",
                    "BankName",
                    "BankTemporarilyUnavailable"
                ],
                "type": "object",
                "properties": {
                    "BankId": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "BankName": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "BankTemporarilyUnavailable": {
                        "type": "boolean"
                    },
                    "LogoUrl": {
                        "maxLength": 2000,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "EligibleBanksComponent": {
                "required": [
                    "EligibleBanks",
                    "TermsLink"
                ],
                "type": "object",
                "properties": {
                    "TermsLink": {
                        "type": "string"
                    },
                    "EligibleBanks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EligibleBank"
                        }
                    }
                }
            },
            "AccountIdentifiers": {
                "required": [
                    "Iban",
                    "SCAN"
                ],
                "type": "object",
                "properties": {
                    "Iban": {
                        "$ref": "#/components/schemas/IBANIdentifier"
                    },
                    "SCAN": {
                        "$ref": "#/components/schemas/SCANIdentifier"
                    }
                }
            },
            "AccountParty": {
                "required": [
                    "Name",
                    "Parties"
                ],
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "description": "Name or Identifier of a Party to this account.",
                        "example": "Mr A N Other"
                    },
                    "Parties": {
                        "type": "string",
                        "description": "The role of the party. Roles are Roles are defined as HOLDER - A party that is legally responsible for the money of the account; AUTHORIZED_USER - A party that can operate the account, but it’s not legally the owner or responsible of the money of the account; OTHER - A party linked to the account that have a role that does not match any of the other documented roles, i.e a party with a role that is not an authorized user or a holder; UNKNOWN - can not determine anything about the role, except that the party is associated with the specified account.",
                        "example": "HOLDER"
                    }
                },
                "description": "Details of the Parties who have access to this account."
            },
            "AccountsResponse": {
                "required": [
                    "Accounts"
                ],
                "type": "object",
                "properties": {
                    "Accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountsResponseData"
                        }
                    }
                }
            },
            "AccountsResponseData": {
                "required": [
                    "AccountId",
                    "AccountSubType",
                    "AccountType",
                    "Identifiers",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "AccountId": {
                        "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,40}$",
                        "type": "string",
                        "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner."
                    },
                    "AccountType": {
                        "type": "string",
                        "example": "PERSONAL",
                        "enum": [
                            "BUSINESS",
                            "PERSONAL"
                        ]
                    },
                    "AccountSubType": {
                        "type": "string",
                        "description": "\" - UNDEFINED: Type undefined.\\n- CHECKING: Checking account.\\n- SAVINGS: Savings account.\\n- CREDIT_CARD: Credit card account.\"",
                        "example": "SAVINGS"
                    },
                    "Identifiers": {
                        "$ref": "#/components/schemas/AccountIdentifiers"
                    },
                    "Name": {
                        "type": "string",
                        "description": "Account name as seen in the bank. Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number.",
                        "example": "Mr A N Other"
                    },
                    "Parties": {
                        "type": "array",
                        "description": "Details of the Parties who have access to this account.",
                        "items": {
                            "$ref": "#/components/schemas/AccountParty"
                        }
                    }
                }
            },
            "IBANIdentifier": {
                "type": "object",
                "properties": {
                    "iban": {
                        "type": "string",
                        "description": "IBAN represents an international bank account number.",
                        "example": "SE6930000000011273547693"
                    },
                    "bic": {
                        "type": "string",
                        "description": "BIC bank number. This can be inferred from the IBAN, but some banks might require it for adding a beneficiary or will display it for existing accounts owned by the user.",
                        "example": "BARCGB22XXX"
                    }
                }
            },
            "SCANIdentifier": {
                "type": "object",
                "properties": {
                    "SortCode": {
                        "type": "string",
                        "example": "123456"
                    },
                    "AccountNumber": {
                        "type": "string",
                        "example": "12345678"
                    }
                }
            }
        }
    }
}