{
  "swagger": "2.0",
    "info": {
        "title": "Account and Transaction API Specification",
        "description": "Swagger for Account and Transaction API Specification",
		"termsOfService": "https://www.openbanking.org.uk/terms",
		"contact": {
		  "name": "Service Desk",
		  "email": "ServiceDesk@openbanking.org.uk"
		},
		"license": {
		  "name": "open-licence",
		  "url": "https://www.openbanking.org.uk/open-licence"
		},
        "version": "v3.1.2-RC1"
    },
  "basePath": "/open-banking/v3.1/aisp",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json; charset=utf-8",
    "application/jose+jwe"
  ],
  "produces": [
    "application/json; charset=utf-8",
    "application/jose+jwe"
  ],
  "paths": {
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Accounts",
        "operationId": "GetAccounts",
        "parameters": [
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Accounts",
        "operationId": "GetAccountsAccountId",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsAccountIdRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/account-access-consents": {
      "post": {
        "tags": [
          "Account Access"
        ],
        "summary": "Create Account Access Consents",
        "operationId": "CreateAccountAccessConsents",
        "parameters": [
          {
            "$ref": "#/parameters/OBReadConsent1Param"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/Authorization"
          }
        ],
        "responses": {
            "201": {
                "$ref": "#/responses/201AccountAccessConsentsCreated"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
		"security": [
          {
            "TPPOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/account-access-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Account Access"
        ],
        "summary": "Get Account Access Consents",
        "operationId": "GetAccountAccessConsentsConsentId",
        "parameters": [
          {
            "$ref": "#/parameters/ConsentId"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/Authorization"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountAccessConsentsConsentIdRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
		"security": [
          {
            "TPPOAuth2Security": [
              "accounts"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account Access"
        ],
        "summary": "Delete Account Access Consents",
        "operationId": "DeleteAccountAccessConsentsConsentId",
        "parameters": [
           {
            "$ref": "#/parameters/ConsentId"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/Authorization"
          }
        ],
        "responses": {
            "204": {
                "$ref": "#/responses/204AccountAccessConsentsConsentIdDeleted"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
		"security": [
          {
            "TPPOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get Balances",
        "operationId": "GetAccountsAccountIdBalances",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsAccountIdBalancesRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/party": {
      "get": {
        "tags": [
          "Parties"
        ],
		"summary": "Get Parties",
        "operationId": "GetAccountsAccountIdParty",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsAccountIdPartyRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/party": {
      "get": {
        "tags": [
          "Parties"
        ],
		"summary": "Get Parties",
        "operationId": "GetParty",
        "parameters": [
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200PartyRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
		"summary": "Get Transactions",
        "operationId": "GetAccountsAccountIdTransactions",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/parameters/FromBookingDateTimeParam"
          },
          {
            "$ref": "#/parameters/ToBookingDateTimeParam"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsAccountIdTransactionsRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/statements": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements",
        "operationId": "GetAccountsAccountIdStatements",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/parameters/FromStatementDateTimeParam"
          },
          {
            "$ref": "#/parameters/ToStatementDateTimeParam"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsAccountIdStatementsRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/statements/{StatementId}": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements",
        "operationId": "GetAccountsAccountIdStatementsStatementId",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/StatementId"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsAccountIdStatementsStatementIdRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },	
    "/accounts/{AccountId}/statements/{StatementId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Transactions",
        "operationId": "GetAccountsAccountIdStatementsStatementIdTransactions",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/StatementId"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/parameters/x-fapi-auth-date"
          }
        ],
        "responses": {
            "200": {
                "$ref": "#/responses/200AccountsAccountIdStatementsStatementIdTransactionsRead"
            },
            "400": {
                "$ref": "#/responses/400Error"
            },
            "401": {
                "$ref": "#/responses/401Error"
            },
            "403": {
                "$ref": "#/responses/403Error"
            },
            "404": {
                "$ref": "#/responses/404Error"
            },
            "405": {
                "$ref": "#/responses/405Error"
            },
            "406": {
                "$ref": "#/responses/406Error"
            },
            "429": {
                "$ref": "#/responses/429Error"
            },
            "500": {
                "$ref": "#/responses/500Error"
            }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    }
  },
  "parameters": {
    "FromBookingDateTimeParam": {
      "in": "query",
      "name": "fromBookingDateTime",
      "type": "string",
      "format": "date-time",
      "description": "The UTC ISO 8601 Date Time to filter transactions FROM\nNB Time component is optional - set to 00:00:00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component."
    },
    "ToBookingDateTimeParam": {
      "in": "query",
      "name": "toBookingDateTime",
      "type": "string",
      "format": "date-time",
      "description": "The UTC ISO 8601 Date Time to filter transactions TO\nNB Time component is optional - set to 00:00:00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component."
    },
    "FromStatementDateTimeParam": {
      "in": "query",
      "name": "fromStatementDateTime",
      "type": "string",
      "format": "date-time",
      "description": "The UTC ISO 8601 Date Time to filter statements FROM\nNB Time component is optional - set to 00:00:00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component."
    },
    "ToStatementDateTimeParam": {
      "in": "query",
      "name": "toStatementDateTime",
      "type": "string",
      "format": "date-time",
      "description": "The UTC ISO 8601 Date Time to filter statements TO\nNB Time component is optional - set to 00:00:00 for just Date.\nIf the Date Time contains a timezone, the ASPSP must ignore the timezone component."
    },
    "OBReadConsent1Param": {
      "name": "OBReadConsent1Param",
      "in": "body",
      "description": "Default",
      "required": true,
      "schema": {
        "$ref": "#/definitions/OBReadConsent1"
      }
    },
    "ConsentId": {
      "name": "ConsentId",
      "in": "path",
      "description": "ConsentId",
      "required": true,
      "type": "string"
    },
    "AccountId": {
      "name": "AccountId",
      "in": "path",
      "description": "AccountId",
      "required": true,
      "type": "string"
    },
    "StatementId": {
      "name": "StatementId",
      "in": "path",
      "description": "StatementId",
      "required": true,
      "type": "string"
    },
    "Authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "string",
      "required": true,
      "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750"
    },
    "x-fapi-customer-ip-address": {
      "in": "header",
      "name": "x-fapi-customer-ip-address",
      "type": "string",
      "required": false,
      "description": "The PSU's IP address if the PSU is currently logged in with the TPP."
    },
    "x-fapi-auth-date": {
      "in": "header",
      "name": "x-fapi-auth-date",
      "type": "string",
      "required": false,
      "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
      "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$"
    },
    "x-fapi-interaction-id": {
      "in": "header",
      "name": "x-fapi-interaction-id",
      "type": "string",
      "required": false,
      "description": "An RFC4122 UID used as a correlation id."
    }
  },
    "responses": {
        "201AccountAccessConsentsCreated": {
            "description": "Account Access Consents Created",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadConsentResponse1"
            }
        },
        "200AccountAccessConsentsConsentIdRead": {
            "description": "Account Access Consents Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadConsentResponse1"
            }
        },
        "204AccountAccessConsentsConsentIdDeleted": {
            "description": "Account Access Consents Deleted",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            }
        },
        "200AccountsRead": {
            "description": "Accounts Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadAccount4"
            }
        },
        "200AccountsAccountIdRead": {
            "description": "Accounts Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadAccount4"
            }
        },
        "200AccountsAccountIdBalancesRead": {
            "description": "Balances Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadBalance1"
            }
        },
        "200AccountsAccountIdTransactionsRead": {
            "description": "Transactions Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadTransaction5"
            }
        },
        "200AccountsAccountIdPartyRead": {
            "description": "Parties Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadParty2"
            }
        },
        "200PartyRead": {
            "description": "Parties Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadParty2"
            }
        },
        "200AccountsAccountIdStatementsRead": {
            "description": "Statements Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadStatement2"
            }
        },
        "200AccountsAccountIdStatementsStatementIdRead": {
            "description": "Statements Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadStatement2"
            }
        },
        "200AccountsAccountIdStatementsStatementIdTransactionsRead": {
            "description": "Transactions Read",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBReadTransaction5"
            }
        },
        "400Error": {
            "description": "Bad request",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBErrorResponse1"
            }
        },
        "401Error": {
            "description": "Unauthorized",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            }
        },
        "403Error": {
            "description": "Forbidden",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBErrorResponse1"
            }
        },
        "404Error": {
            "description": "Not found",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            }
        },
        "405Error": {
            "description": "Method Not Allowed",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            }
        },
        "406Error": {
            "description": "Not Acceptable",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            }
        },
        "415Error": {
            "description": "Unsupported Media Type",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            }
        },
        "429Error": {
            "description": "Too Many Requests",
            "headers": {
                "Retry-After": {
                    "description": "Number in seconds to wait",
                    "type": "integer"
                },
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            }
        },
        "500Error": {
            "description": "Internal Server Error",
            "headers": {
                "x-fapi-interaction-id": {
                    "type": "string",
                    "description": "An RFC4122 UID used as a correlation id."
                }
            },
            "schema": {
                "$ref": "#/definitions/OBErrorResponse1"
            }
        }
    },
    "definitions": {
        "AccountId": {
            "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
        },
        "ActiveOrHistoricCurrencyCode_0": {
            "description": "Identification of the currency in which the account is held. \nUsage: Currency should only be used in case one and the same account number covers several currencies\nand the initiating party needs to identify which currency needs to be used for settlement on the account.",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
        },
        "ActiveOrHistoricCurrencyCode_1": {
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "type": "string",
            "pattern": "^[A-Z]{3,3}$"
        },
        "AddressLine": {
            "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
        },
        "BookingDateTime": {
            "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        },
        "BuildingNumber": {
            "description": "Number that identifies the position of a building on a street.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
        },
        "CountryCode": {
            "description": "Nation with its own government, occupying a particular territory.",
            "type": "string",
            "pattern": "^[A-Z]{2,2}$"
        },
        "CountrySubDivision": {
            "description": "Identifies a subdivision of a country eg, state, region, county.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
        },
        "CreationDateTime": {
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        },
        "DateTime": {
            "description": "Date and time associated with the date time type.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        },
        "Description_0": {
            "description": "Specifies the description of the account type.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
        },
        "Description_1": {
            "description": "Description that may be available for the statement fee.",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
        },
        "Description_2": {
            "description": "Description that may be available for the statement interest.",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
        },
        "EmailAddress": {
            "description": "Address for electronic mail (e-mail).",
            "type": "string",
            "minLength": 1,
            "maxLength": 256
        },
        "EndDateTime": {
            "description": "Date and time at which the statement period ends.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        },
        "FullLegalName": {
            "description": "Specifies a character string with a maximum length of 350 characters.",
            "type": "string",
            "minLength": 1,
            "maxLength": 350
        },
        "ISODateTime": {
            "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        },
        "Identification_0": {
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
            "type": "string",
            "minLength": 1,
            "maxLength": 256
        },
        "Identification_2": {
            "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
        },
        "Links": {
            "type": "object",
            "description": "Links relevant to the payload",
            "properties": {
                "Self": {
                    "type": "string",
                    "format": "uri"
                },
                "First": {
                    "type": "string",
                    "format": "uri"
                },
                "Prev": {
                    "type": "string",
                    "format": "uri"
                },
                "Next": {
                    "type": "string",
                    "format": "uri"
                },
                "Last": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "additionalProperties": false,
            "required": [
                "Self"
            ]
        },
        "Meta": {
            "title": "MetaData",
            "type": "object",
            "description": "Meta Data relevant to the payload",
            "properties": {
                "TotalPages": {
                    "type": "integer",
                    "format": "int32"
                },
                "FirstAvailableDateTime": {
                    "$ref": "#/definitions/ISODateTime"
                },
                "LastAvailableDateTime": {
                    "$ref": "#/definitions/ISODateTime"
                }
            },
            "additionalProperties": false
        },
        "Name_0": {
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
        },
        "Name_1": {
            "description": "Name by which a party is known and which is usually used to identify that party.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
        },
        "Name_2": {
            "description": "Name by which an agent is known and which is usually used to identify that agent.",
            "type": "string",
            "minLength": 1,
            "maxLength": 140
        },
        "Nickname": {
            "description": "The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
        },
        "OBAccountStatus1Code": {
            "description": "Specifies the status of account resource in code form.",
            "type": "string",
            "enum": [
                "Deleted",
                "Disabled",
                "Enabled",
                "Pending",
                "ProForma"
            ]
        },
        "OBActiveCurrencyAndAmount_SimpleType": {
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "type": "string",
            "pattern": "^\\d{1,13}\\.\\d{1,5}$"
        },
        "OBActiveOrHistoricCurrencyAndAmount_3": {
            "type": "object",
            "required": [
                "Amount",
                "Currency"
            ],
            "description": "Amount of money associated with the statement benefit type.",
            "properties": {
                "Amount": {
                    "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                },
                "Currency": {
                    "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                }
            }
        },
        "OBActiveOrHistoricCurrencyAndAmount_4": {
            "type": "object",
            "required": [
                "Amount",
                "Currency"
            ],
            "description": "Amount of money associated with the statement fee type.",
            "properties": {
                "Amount": {
                    "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                },
                "Currency": {
                    "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                }
            }
        },
        "OBActiveOrHistoricCurrencyAndAmount_5": {
            "type": "object",
            "required": [
                "Amount",
                "Currency"
            ],
            "description": "Amount of money associated with the statement interest amount type.",
            "properties": {
                "Amount": {
                    "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                },
                "Currency": {
                    "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                }
            }
        },
        "OBActiveOrHistoricCurrencyAndAmount_6": {
            "type": "object",
            "required": [
                "Amount",
                "Currency"
            ],
            "description": "Amount of money associated with the amount type.",
            "properties": {
                "Amount": {
                    "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                },
                "Currency": {
                    "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                }
            }
        },
        "OBActiveOrHistoricCurrencyAndAmount_7": {
            "type": "object",
            "required": [
                "Amount",
                "Currency"
            ],
            "description": "Amount of money in the cash transaction entry.",
            "properties": {
                "Amount": {
                    "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                },
                "Currency": {
                    "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                }
            }
        },
        "OBActiveOrHistoricCurrencyAndAmount_8": {
            "type": "object",
            "required": [
                "Amount",
                "Currency"
            ],
            "description": "Transaction charges to be paid by the charge bearer.",
            "properties": {
                "Amount": {
                    "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                },
                "Currency": {
                    "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                }
            }
        },
        "OBAddressTypeCode": {
            "description": "Identifies the nature of the postal address.",
            "type": "string",
            "enum": [
                "Business",
                "Correspondence",
                "DeliveryTo",
                "MailTo",
                "POBox",
                "Postal",
                "Residential",
                "Statement"
            ]
        },
        "OBBalanceType1Code": {
            "description": "Balance type, in a coded form.",
            "type": "string",
            "enum": [
                "ClosingAvailable",
                "ClosingBooked",
                "ClosingCleared",
                "Expected",
                "ForwardAvailable",
                "Information",
                "InterimAvailable",
                "InterimBooked",
                "InterimCleared",
                "OpeningAvailable",
                "OpeningBooked",
                "OpeningCleared",
                "PreviouslyClosedBooked"
            ]
        },
        "OBBankTransactionCodeStructure1": {
            "type": "object",
            "required": [
                "Code",
                "SubCode"
            ],
            "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry.",
            "properties": {
                "Code": {
                    "description": "Specifies the family within a domain.",
                    "type": "string"
                },
                "SubCode": {
                    "description": "Specifies the sub-product family within a specific family.",
                    "type": "string"
                }
            }
        },
        "OBBranchAndFinancialInstitutionIdentification6_0": {
            "type": "object",
            "description": "Financial institution servicing an account for the creditor.",
            "properties": {
                "SchemeName": {
                    "$ref": "#/definitions/OBExternalFinancialInstitutionIdentification4Code"
                },
                "Identification": {
                    "$ref": "#/definitions/Identification_2"
                },
                "Name": {
                    "$ref": "#/definitions/Name_2"
                },
                "PostalAddress": {
                    "$ref": "#/definitions/OBPostalAddress6"
                }
            }
        },
        "OBBranchAndFinancialInstitutionIdentification6_1": {
            "type": "object",
            "description": "Financial institution servicing an account for the debtor.",
            "properties": {
                "SchemeName": {
                    "$ref": "#/definitions/OBExternalFinancialInstitutionIdentification4Code"
                },
                "Identification": {
                    "$ref": "#/definitions/Identification_2"
                },
                "Name": {
                    "$ref": "#/definitions/Name_2"
                },
                "PostalAddress": {
                    "$ref": "#/definitions/OBPostalAddress6"
                }
            }
        },
        "OBCashAccount6_0": {
            "type": "object",
            "description": "Unambiguous identification of the account of the creditor, in the case of a debit transaction.",
            "properties": {
                "SchemeName": {
                    "$ref": "#/definitions/OBExternalAccountIdentification4Code"
                },
                "Identification": {
                    "$ref": "#/definitions/Identification_0"
                },
                "Name": {
                    "$ref": "#/definitions/Name_0"
                },
                "SecondaryIdentification": {
                    "$ref": "#/definitions/SecondaryIdentification"
                }
            }
        },
        "OBCashAccount6_1": {
            "type": "object",
            "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction.",
            "properties": {
                "SchemeName": {
                    "$ref": "#/definitions/OBExternalAccountIdentification4Code"
                },
                "Identification": {
                    "$ref": "#/definitions/Identification_0"
                },
                "Name": {
                    "$ref": "#/definitions/Name_0"
                },
                "SecondaryIdentification": {
                    "$ref": "#/definitions/SecondaryIdentification"
                }
            }
        },
        "OBCreditDebitCode_0": {
            "description": "Indicates whether the amount is a credit or a debit. \nUsage: A zero amount is considered to be a credit amount.",
            "type": "string",
            "enum": [
                "Credit",
                "Debit"
            ]
        },
        "OBCreditDebitCode_1": {
            "description": "Indicates whether the transaction is a credit or a debit entry.",
            "type": "string",
            "enum": [
                "Credit",
                "Debit"
            ]
        },
        "OBCreditDebitCode_2": {
            "description": "Indicates whether the balance is a credit or a debit balance. \nUsage: A zero balance is considered to be a credit balance.",
            "type": "string",
            "enum": [
                "Credit",
                "Debit"
            ]
        },
        "OBCurrencyExchange5": {
            "type": "object",
            "required": [
                "SourceCurrency",
                "ExchangeRate"
            ],
            "description": "Set of elements used to provide details on the currency exchange.",
            "properties": {
                "SourceCurrency": {
                    "description": "Currency from which an amount is to be converted in a currency conversion.",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                },
                "TargetCurrency": {
                    "description": "Currency into which an amount is to be converted in a currency conversion.",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                },
                "UnitCurrency": {
                    "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                },
                "ExchangeRate": {
                    "description": "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
                    "type": "number"
                },
                "ContractIdentification": {
                    "description": "Unique identification to unambiguously identify the foreign exchange contract.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                },
                "QuotationDate": {
                    "description": "Date and time at which an exchange rate is quoted.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                    "type": "string",
                    "format": "date-time"
                },
                "InstructedAmount": {
                    "type": "object",
                    "required": [
                        "Amount",
                        "Currency"
                    ],
                    "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.",
                    "properties": {
                        "Amount": {
                            "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                        },
                        "Currency": {
                            "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                        }
                    }
                }
            }
        },
        "OBEntryStatus1Code": {
            "description": "Status of a transaction entry on the books of the account servicer.",
            "type": "string",
            "enum": [
                "Booked",
                "Pending"
            ]
        },
        "OBError1": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                    "type": "string",
                    "x-namespaced-enum": [
                        "UK.OBIE.Field.Expected",
                        "UK.OBIE.Field.Invalid",
                        "UK.OBIE.Field.InvalidDate",
                        "UK.OBIE.Field.Missing",
                        "UK.OBIE.Field.Unexpected",
                        "UK.OBIE.Header.Invalid",
                        "UK.OBIE.Header.Missing",
                        "UK.OBIE.Reauthenticate",
                        "UK.OBIE.Resource.ConsentMismatch",
                        "UK.OBIE.Resource.InvalidConsentStatus",
                        "UK.OBIE.Resource.InvalidFormat",
                        "UK.OBIE.Resource.NotFound",
                        "UK.OBIE.Rules.AfterCutOffDateTime",
                        "UK.OBIE.Rules.DuplicateReference",
                        "UK.OBIE.Signature.Invalid",
                        "UK.OBIE.Signature.InvalidClaim",
                        "UK.OBIE.Signature.Malformed",
                        "UK.OBIE.Signature.Missing",
                        "UK.OBIE.Signature.MissingClaim",
                        "UK.OBIE.Signature.Unexpected",
                        "UK.OBIE.UnexpectedError",
                        "UK.OBIE.Unsupported.AccountIdentifier",
                        "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
                        "UK.OBIE.Unsupported.Currency",
                        "UK.OBIE.Unsupported.Frequency",
                        "UK.OBIE.Unsupported.LocalInstrument",
                        "UK.OBIE.Unsupported.Scheme"
                    ]
                },
                "Message": {
                    "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                },
                "Path": {
                    "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                },
                "Url": {
                    "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc",
                    "type": "string"
                }
            },
            "required": [
                "ErrorCode",
                "Message"
            ],
            "additionalProperties": false,
            "minProperties": 1
        },
        "OBErrorResponse1": {
            "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
            "type": "object",
            "properties": {
                "Code": {
                    "description": "High level textual error code, to help categorize the errors.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40
                },
                "Id": {
                    "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40
                },
                "Message": {
                    "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                },
                "Errors": {
                    "items": {
                        "$ref": "#/definitions/OBError1"
                    },
                    "type": "array",
                    "minItems": 1
                }
            },
            "required": [
                "Code",
                "Message",
                "Errors"
            ],
            "additionalProperties": false
        },
        "OBExternalAccountIdentification4Code": {
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.BBAN",
                "UK.OBIE.IBAN",
                "UK.OBIE.PAN",
                "UK.OBIE.Paym",
                "UK.OBIE.SortCodeAccountNumber"
            ]
        },
        "OBExternalAccountRole1Code": {
            "description": "A party\ufffds role with respect to the related account.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.Administrator",
                "UK.OBIE.Beneficiary",
                "UK.OBIE.CustodianForMinor",
                "UK.OBIE.Granter",
                "UK.OBIE.LegalGuardian",
                "UK.OBIE.OtherParty",
                "UK.OBIE.PowerOfAttorney",
                "UK.OBIE.Principal",
                "UK.OBIE.Protector",
                "UK.OBIE.RegisteredShareholderName",
                "UK.OBIE.SecondaryOwner",
                "UK.OBIE.SeniorManagingOfficial",
                "UK.OBIE.Settlor",
                "UK.OBIE.SuccessorOnDeath"
            ]
        },
        "OBExternalAccountSubType1Code": {
            "description": "Specifies the sub type of account (product family group).",
            "type": "string",
            "enum": [
                "ChargeCard",
                "CreditCard",
                "CurrentAccount",
                "EMoney",
                "Loan",
                "Mortgage",
                "PrePaidCard",
                "Savings"
            ]
        },
        "OBExternalAccountType1Code": {
            "description": "Specifies the type of account (personal or business).",
            "type": "string",
            "enum": [
                "Business",
                "Personal"
            ]
        },
        "OBExternalFinancialInstitutionIdentification4Code": {
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.BICFI"
            ]
        },
        "OBExternalLegalStructureType1Code": {
            "description": "Legal standing of the party.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.CIC",
                "UK.OBIE.CIO",
                "UK.OBIE.Charity",
                "UK.OBIE.CoOp",
                "UK.OBIE.GeneralPartnership",
                "UK.OBIE.Individual",
                "UK.OBIE.LimitedLiabilityPartnership",
                "UK.OBIE.LimitedPartnership",
                "UK.OBIE.PrivateLimitedCompany",
                "UK.OBIE.PublicLimitedCompany",
                "UK.OBIE.ScottishLimitedPartnership",
                "UK.OBIE.Sole"
            ]
        },
        "OBExternalPartyType1Code": {
            "description": "Party type, in a coded form.",
            "type": "string",
            "enum": [
                "Delegate",
                "Joint",
                "Sole"
            ]
        },
        "OBExternalStatementAmountType1Code": {
            "description": "Amount type, in a coded form.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.ArrearsClosingBalance",
                "UK.OBIE.AvailableBalance",
                "UK.OBIE.AverageBalanceWhenInCredit",
                "UK.OBIE.AverageBalanceWhenInDebit",
                "UK.OBIE.AverageDailyBalance",
                "UK.OBIE.BalanceTransferClosingBalance",
                "UK.OBIE.CashClosingBalance",
                "UK.OBIE.ClosingBalance",
                "UK.OBIE.CreditLimit",
                "UK.OBIE.CurrentPayment",
                "UK.OBIE.DirectDebitPaymentDue",
                "UK.OBIE.FSCSInsurance",
                "UK.OBIE.MinimumPaymentDue",
                "UK.OBIE.PendingTransactionsBalance",
                "UK.OBIE.PreviousClosingBalance",
                "UK.OBIE.PreviousPayment",
                "UK.OBIE.PurchaseClosingBalance",
                "UK.OBIE.StartingBalance",
                "UK.OBIE.TotalAdjustments",
                "UK.OBIE.TotalCashAdvances",
                "UK.OBIE.TotalCharges",
                "UK.OBIE.TotalCredits",
                "UK.OBIE.TotalDebits",
                "UK.OBIE.TotalPurchases"
            ]
        },
        "OBExternalStatementBenefitType1Code": {
            "description": "Benefit type, in a coded form.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.Cashback",
                "UK.OBIE.Insurance",
                "UK.OBIE.TravelDiscount",
                "UK.OBIE.TravelInsurance"
            ]
        },
        "OBExternalStatementDateTimeType1Code": {
            "description": "Date time type, in a coded form.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.BalanceTransferPromoEnd",
                "UK.OBIE.DirectDebitDue",
                "UK.OBIE.LastPayment",
                "UK.OBIE.LastStatement",
                "UK.OBIE.NextStatement",
                "UK.OBIE.PaymentDue",
                "UK.OBIE.PurchasePromoEnd",
                "UK.OBIE.StatementAvailable"
            ]
        },
        "OBExternalStatementFeeFrequency1Code": {
            "description": "How frequently the fee is applied to the Account.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.ChargingPeriod",
                "UK.OBIE.PerTransactionAmount",
                "UK.OBIE.PerTransactionPercentage",
                "UK.OBIE.Quarterly",
                "UK.OBIE.StatementMonthly",
                "UK.OBIE.Weekly"
            ]
        },
        "OBExternalStatementFeeRateType1Code": {
            "description": "Description that may be available for the statement fee rate type.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.AER",
                "UK.OBIE.EAR"
            ]
        },
        "OBExternalStatementFeeType1Code": {
            "description": "Fee type, in a coded form.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.Annual",
                "UK.OBIE.BalanceTransfer",
                "UK.OBIE.CashAdvance",
                "UK.OBIE.CashTransaction",
                "UK.OBIE.ForeignCashTransaction",
                "UK.OBIE.ForeignTransaction",
                "UK.OBIE.Gambling",
                "UK.OBIE.LatePayment",
                "UK.OBIE.MoneyTransfer",
                "UK.OBIE.Monthly",
                "UK.OBIE.Overlimit",
                "UK.OBIE.PostalOrder",
                "UK.OBIE.PrizeEntry",
                "UK.OBIE.StatementCopy",
                "UK.OBIE.Total"
            ]
        },
        "OBExternalStatementInterestFrequency1Code": {
            "description": "Specifies the statement fee type requested",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.Daily",
                "UK.OBIE.HalfYearly",
                "UK.OBIE.Monthly",
                "UK.OBIE.PerStatementDate",
                "UK.OBIE.Quarterly",
                "UK.OBIE.Weekly",
                "UK.OBIE.Yearly"
            ]
        },
        "OBExternalStatementInterestRateType1Code": {
            "description": "Description that may be available for the statement Interest rate type.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.BOEBaseRate",
                "UK.OBIE.FixedRate",
                "UK.OBIE.Gross",
                "UK.OBIE.LoanProviderBaseRate",
                "UK.OBIE.Net"
            ]
        },
        "OBExternalStatementInterestType1Code": {
            "description": "Interest amount type, in a coded form.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.BalanceTransfer",
                "UK.OBIE.Cash",
                "UK.OBIE.EstimatedNext",
                "UK.OBIE.Purchase",
                "UK.OBIE.Total"
            ]
        },
        "OBExternalStatementRateType1Code": {
            "description": "Rate associated with the statement rate type.",
            "type": "string",
            "pattern": "^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$"
        },
        "OBExternalStatementType1Code": {
            "description": "Statement type, in a coded form.",
            "type": "string",
            "enum": [
                "AccountClosure",
                "AccountOpening",
                "Annual",
                "Interim",
                "RegularPeriodic"
            ]
        },
        "OBExternalStatementValueType1Code": {
            "description": "Value associated with the statement value type.",
            "type": "string",
            "x-namespaced-enum": [
                "UK.OBIE.AirMilesPoints",
                "UK.OBIE.AirMilesPointsBalance",
                "UK.OBIE.Credits",
                "UK.OBIE.Debits",
                "UK.OBIE.HotelPoints",
                "UK.OBIE.HotelPointsBalance",
                "UK.OBIE.RetailShoppingPoints",
                "UK.OBIE.RetailShoppingPointsBalance"
            ]
        },
        "OBMerchantDetails1": {
            "type": "object",
            "description": "Details of the merchant involved in the transaction.",
            "properties": {
                "MerchantName": {
                    "description": "Name by which the merchant is known.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 350
                },
                "MerchantCategoryCode": {
                    "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 4
                }
            }
        },
        "OBReadParty2": {
            "type": "object",
            "required": [
                "Data"
            ],
            "properties": {
                "Data": {
                    "type": "object",
                    "properties": {
                        "Party": {
                            "$ref": "#/definitions/OBParty2"
                        }
                    }
                },
                "Links": {
                    "$ref": "#/definitions/Links"
                },
                "Meta": {
                    "$ref": "#/definitions/Meta"
                }
            }
        },
        "OBParty2": {
            "type": "object",
            "required": [
                "PartyId"
            ],
            "properties": {
                "PartyId": {
                    "$ref": "#/definitions/PartyId"
                },
                "PartyNumber": {
                    "$ref": "#/definitions/PartyNumber"
                },
                "PartyType": {
                    "$ref": "#/definitions/OBExternalPartyType1Code"
                },
                "Name": {
                    "$ref": "#/definitions/Name_1"
                },
                "FullLegalName": {
                    "$ref": "#/definitions/FullLegalName"
                },
                "LegalStructure": {
                    "$ref": "#/definitions/OBExternalLegalStructureType1Code"
                },
                "BeneficialOwnership": {
                    "type": "boolean"
                },
                "AccountRole": {
                    "$ref": "#/definitions/OBExternalAccountRole1Code"
                },
                "EmailAddress": {
                    "$ref": "#/definitions/EmailAddress"
                },
                "Phone": {
                    "$ref": "#/definitions/PhoneNumber_0"
                },
                "Mobile": {
                    "$ref": "#/definitions/PhoneNumber_1"
                },
                "Relationships": {
                    "$ref": "#/definitions/OBPartyRelationships1"
                },
                "Address": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Postal address of a party.",
                        "required": [
                            "Country"
                        ],
                        "properties": {
                            "AddressType": {
                                "$ref": "#/definitions/OBAddressTypeCode"
                            },
                            "AddressLine": {
                                "type": "array",
                                "items": {
                                    "description": "Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 70
                                },
                                "minItems": 0,
                                "maxItems": 5
                            },
                            "StreetName": {
                                "$ref": "#/definitions/StreetName"
                            },
                            "BuildingNumber": {
                                "$ref": "#/definitions/BuildingNumber"
                            },
                            "PostCode": {
                                "$ref": "#/definitions/PostCode"
                            },
                            "TownName": {
                                "$ref": "#/definitions/TownName"
                            },
                            "CountrySubDivision": {
                                "$ref": "#/definitions/CountrySubDivision"
                            },
                            "Country": {
                                "$ref": "#/definitions/CountryCode"
                            }
                        }
                    }
                }
            }
        },
        "OBPartyRelationships1": {
            "type": "object",
            "description": "The Party's relationships with other resources.",
            "properties": {
                "Account": {
                    "type": "object",
                    "required": [
                        "Related",
                        "Id"
                    ],
                    "description": "Relationship to the Account resource.",
                    "properties": {
                        "Related": {
                            "description": "Absolute URI to the related resource.",
                            "type": "string",
                            "format": "uri"
                        },
                        "Id": {
                            "description": "Unique identification as assigned by the ASPSP to uniquely identify the related resource.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 40
                        }
                    }
                }
            }
        },
        "OBPostalAddress6": {
            "type": "object",
            "description": "Information that locates and identifies a specific address, as defined by postal services.",
            "properties": {
                "AddressType": {
                    "$ref": "#/definitions/OBAddressTypeCode"
                },
                "Department": {
                    "description": "Identification of a division of a large organisation or building.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 70
                },
                "SubDepartment": {
                    "description": "Identification of a sub-division of a large organisation or building.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 70
                },
                "StreetName": {
                    "$ref": "#/definitions/StreetName"
                },
                "BuildingNumber": {
                    "$ref": "#/definitions/BuildingNumber"
                },
                "PostCode": {
                    "$ref": "#/definitions/PostCode"
                },
                "TownName": {
                    "$ref": "#/definitions/TownName"
                },
                "CountrySubDivision": {
                    "description": "Identifies a subdivision of a country such as state, region, county.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                },
                "Country": {
                    "description": "Nation with its own government.",
                    "type": "string",
                    "pattern": "^[A-Z]{2,2}$"
                },
                "AddressLine": {
                    "type": "array",
                    "items": {
                        "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 70
                    },
                    "minItems": 0,
                    "maxItems": 7
                }
            }
        },
        "OBRate1_0": {
            "description": "Rate charged for Statement Fee (where it is charged in terms of a rate rather than an amount)",
            "type": "number"
        },
        "OBRate1_1": {
            "description": "field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.",
            "type": "number"
        },
        "OBReadAccount4": {
            "type": "object",
            "required": [
                "Data"
            ],
            "properties": {
                "Data": {
                    "type": "object",
                    "properties": {
                        "Account": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OBAccount4"
                            }
                        }
                    }
                },
                "Links": {
                    "$ref": "#/definitions/Links"
                },
                "Meta": {
                    "$ref": "#/definitions/Meta"
                }
            }
        },
        "OBAccount4": {
            "type": "object",
            "description": "Unambiguous identification of the account to which credit and debit entries are made.",
            "required": [
                "AccountId",
                "Currency",
                "AccountType",
                "AccountSubType"
            ],
            "properties": {
                "AccountId": {
                    "$ref": "#/definitions/AccountId"
                },
                "Status": {
                    "$ref": "#/definitions/OBAccountStatus1Code"
                },
                "StatusUpdateDateTime": {
                    "$ref": "#/definitions/StatusUpdateDateTime"
                },
                "Currency": {
                    "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_0"
                },
                "AccountType": {
                    "$ref": "#/definitions/OBExternalAccountType1Code"
                },
                "AccountSubType": {
                    "$ref": "#/definitions/OBExternalAccountSubType1Code"
                },
                "Description": {
                    "$ref": "#/definitions/Description_0"
                },
                "Nickname": {
                    "$ref": "#/definitions/Nickname"
                }
            }
        },
        "OBReadBalance1": {
            "type": "object",
            "required": [
                "Data"
            ],
            "properties": {
                "Data": {
                    "type": "object",
                    "required": [
                        "Balance"
                    ],
                    "properties": {
                        "Balance": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Set of elements used to define the balance details.",
                                "required": [
                                    "AccountId",
                                    "CreditDebitIndicator",
                                    "Type",
                                    "DateTime",
                                    "Amount"
                                ],
                                "properties": {
                                    "AccountId": {
                                        "$ref": "#/definitions/AccountId"
                                    },
                                    "CreditDebitIndicator": {
                                        "$ref": "#/definitions/OBCreditDebitCode_2"
                                    },
                                    "Type": {
                                        "$ref": "#/definitions/OBBalanceType1Code"
                                    },
                                    "DateTime": {
                                        "description": "Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "Amount": {
                                        "type": "object",
                                        "required": [
                                            "Amount",
                                            "Currency"
                                        ],
                                        "description": "Amount of money of the cash balance.",
                                        "properties": {
                                            "Amount": {
                                                "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                                            },
                                            "Currency": {
                                                "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                                            }
                                        }
                                    },
                                    "CreditLine": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "description": "Set of elements used to provide details on the credit line.",
                                            "required": [
                                                "Included"
                                            ],
                                            "properties": {
                                                "Included": {
                                                    "description": "Indicates whether or not the credit line is included in the balance of the account.\nUsage: If not present, credit line is not included in the balance amount of the account.",
                                                    "type": "boolean"
                                                },
                                                "Type": {
                                                    "description": "Limit type, in a coded form.",
                                                    "type": "string",
                                                    "enum": [
                                                        "Available",
                                                        "Credit",
                                                        "Emergency",
                                                        "Pre-Agreed",
                                                        "Temporary"
                                                    ]
                                                },
                                                "Amount": {
                                                    "type": "object",
                                                    "required": [
                                                        "Amount",
                                                        "Currency"
                                                    ],
                                                    "description": "Amount of money of the credit line.",
                                                    "properties": {
                                                        "Amount": {
                                                            "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                                                        },
                                                        "Currency": {
                                                            "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "minItems": 1
                        }
                    }
                },
                "Links": {
                    "$ref": "#/definitions/Links"
                },
                "Meta": {
                    "$ref": "#/definitions/Meta"
                }
            }
        },
        "OBRisk2": {
            "description": "The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info.",
            "type": "object",
            "properties": {},
            "additionalProperties": false
        },
        "OBReadConsent1": {
            "type": "object",
            "required": [
                "Data",
                "Risk"
            ],
            "properties": {
                "Data": {
                    "type": "object",
                    "required": [
                        "Permissions"
                    ],
                    "properties": {
                        "Permissions": {
                            "type": "array",
                            "items": {
                                "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
                                "type": "string",
                                "enum": [
                                    "ReadAccountsBasic",
                                    "ReadAccountsDetail",
                                    "ReadBalances",
                                    "ReadPAN",
                                    "ReadParty",
                                    "ReadPartyPSU",
                                    "ReadStatementsBasic",
                                    "ReadStatementsDetail",
                                    "ReadTransactionsBasic",
                                    "ReadTransactionsCredits",
                                    "ReadTransactionsDebits",
                                    "ReadTransactionsDetail"
                                ]
                            },
                            "minItems": 1
                        },
                        "ExpirationDateTime": {
                            "description": "Specified date and time the permissions will expire.\nIf this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                            "type": "string",
                            "format": "date-time"
                        },
                        "TransactionFromDateTime": {
                            "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                            "type": "string",
                            "format": "date-time"
                        },
                        "TransactionToDateTime": {
                            "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "Risk": {
                    "$ref": "#/definitions/OBRisk2"
                }
            }
        },
        "OBReadConsentResponse1": {
            "type": "object",
            "required": [
                "Data",
                "Risk"
            ],
            "properties": {
                "Data": {
                    "type": "object",
                    "required": [
                        "ConsentId",
                        "CreationDateTime",
                        "Status",
                        "StatusUpdateDateTime",
                        "Permissions"
                    ],
                    "properties": {
                        "ConsentId": {
                            "description": "Unique identification as assigned to identify the account access consent resource.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128
                        },
                        "CreationDateTime": {
                            "$ref": "#/definitions/CreationDateTime"
                        },
                        "Status": {
                            "description": "Specifies the status of consent resource in code form.",
                            "type": "string",
                            "enum": [
                                "Authorised",
                                "AwaitingAuthorisation",
                                "Rejected",
                                "Revoked"
                            ]
                        },
                        "StatusUpdateDateTime": {
                            "$ref": "#/definitions/StatusUpdateDateTime"
                        },
                        "Permissions": {
                            "type": "array",
                            "items": {
                                "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
                                "type": "string",
                                "enum": [
                                    "ReadAccountsBasic",
                                    "ReadAccountsDetail",
                                    "ReadBalances",
                                    "ReadPAN",
                                    "ReadParty",
                                    "ReadPartyPSU",
                                    "ReadStatementsBasic",
                                    "ReadStatementsDetail",
                                    "ReadTransactionsBasic",
                                    "ReadTransactionsCredits",
                                    "ReadTransactionsDebits",
                                    "ReadTransactionsDetail"
                                ]
                            },
                            "minItems": 1
                        },
                        "ExpirationDateTime": {
                            "description": "Specified date and time the permissions will expire.\nIf this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                            "type": "string",
                            "format": "date-time"
                        },
                        "TransactionFromDateTime": {
                            "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                            "type": "string",
                            "format": "date-time"
                        },
                        "TransactionToDateTime": {
                            "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "Risk": {
                    "$ref": "#/definitions/OBRisk2"
                },
                "Links": {
                    "$ref": "#/definitions/Links"
                },
                "Meta": {
                    "$ref": "#/definitions/Meta"
                }
            }
        },
        "OBReadStatement2": {
            "type": "object",
            "required": [
                "Data"
            ],
            "properties": {
                "Data": {
                    "$ref": "#/definitions/OBReadDataStatement2"
                },
                "Links": {
                    "$ref": "#/definitions/Links"
                },
                "Meta": {
                    "$ref": "#/definitions/Meta"
                }
            }
        },
        "OBReadDataStatement2": {
            "type": "object",
            "properties": {
                "Statement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OBStatement2"
                    }
                }
            }
        },
        "OBStatement2": {
            "type": "object",
            "description": "Provides further details on a statement resource.",
            "required": [
                "AccountId",
                "Type",
                "StartDateTime",
                "EndDateTime",
                "CreationDateTime"
            ],
            "properties": {
                "AccountId": {
                    "$ref": "#/definitions/AccountId"
                },
                "StatementId": {
                    "$ref": "#/definitions/StatementId"
                },
                "StatementReference": {
                    "$ref": "#/definitions/StatementReference"
                },
                "Type": {
                    "$ref": "#/definitions/OBExternalStatementType1Code"
                },
                "StartDateTime": {
                    "$ref": "#/definitions/StartDateTime"
                },
                "EndDateTime": {
                    "$ref": "#/definitions/EndDateTime"
                },
                "CreationDateTime": {
                    "$ref": "#/definitions/CreationDateTime"
                },
                "StatementDescription": {
                    "type": "array",
                    "items": {
                        "description": "Other descriptions that may be available for the statement resource.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 500
                    }
                },
                "StatementBenefit": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Set of elements used to provide details of a benefit or reward amount for the statement resource.",
                        "required": [
                            "Type",
                            "Amount"
                        ],
                        "properties": {
                            "Type": {
                                "$ref": "#/definitions/OBExternalStatementBenefitType1Code"
                            },
                            "Amount": {
                                "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount_3"
                            }
                        }
                    }
                },
                "StatementFee": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Set of elements used to provide details of a fee for the statement resource.",
                        "required": [
                            "CreditDebitIndicator",
                            "Type",
                            "Amount"
                        ],
                        "properties": {
                            "Description": {
                                "$ref": "#/definitions/Description_1"
                            },
                            "CreditDebitIndicator": {
                                "$ref": "#/definitions/OBCreditDebitCode_0"
                            },
                            "Type": {
                                "$ref": "#/definitions/OBExternalStatementFeeType1Code"
                            },
                            "Rate": {
                                "$ref": "#/definitions/OBRate1_0"
                            },
                            "RateType": {
                                "$ref": "#/definitions/OBExternalStatementFeeRateType1Code"
                            },
                            "Frequency": {
                                "$ref": "#/definitions/OBExternalStatementFeeFrequency1Code"
                            },
                            "Amount": {
                                "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount_4"
                            }
                        }
                    }
                },
                "StatementInterest": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Set of elements used to provide details of a generic interest amount related to the statement resource.",
                        "required": [
                            "CreditDebitIndicator",
                            "Type",
                            "Amount"
                        ],
                        "properties": {
                            "Description": {
                                "$ref": "#/definitions/Description_2"
                            },
                            "CreditDebitIndicator": {
                                "$ref": "#/definitions/OBCreditDebitCode_0"
                            },
                            "Type": {
                                "$ref": "#/definitions/OBExternalStatementInterestType1Code"
                            },
                            "Rate": {
                                "$ref": "#/definitions/OBRate1_1"
                            },
                            "RateType": {
                                "$ref": "#/definitions/OBExternalStatementInterestRateType1Code"
                            },
                            "Frequency": {
                                "$ref": "#/definitions/OBExternalStatementInterestFrequency1Code"
                            },
                            "Amount": {
                                "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount_5"
                            }
                        }
                    }
                },
                "StatementAmount": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Set of elements used to provide details of a generic amount for the statement resource.",
                        "required": [
                            "CreditDebitIndicator",
                            "Type",
                            "Amount"
                        ],
                        "properties": {
                            "CreditDebitIndicator": {
                                "$ref": "#/definitions/OBCreditDebitCode_0"
                            },
                            "Type": {
                                "$ref": "#/definitions/OBExternalStatementAmountType1Code"
                            },
                            "Amount": {
                                "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount_6"
                            }
                        }
                    }
                },
                "StatementDateTime": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Set of elements used to provide details of a generic date time for the statement resource.",
                        "required": [
                            "DateTime",
                            "Type"
                        ],
                        "properties": {
                            "DateTime": {
                                "$ref": "#/definitions/DateTime"
                            },
                            "Type": {
                                "$ref": "#/definitions/OBExternalStatementDateTimeType1Code"
                            }
                        }
                    }
                },
                "StatementRate": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Set of elements used to provide details of a generic rate related to the statement resource.",
                        "required": [
                            "Rate",
                            "Type"
                        ],
                        "properties": {
                            "Rate": {
                                "$ref": "#/definitions/OBExternalStatementRateType1Code"
                            },
                            "Type": {
                                "$ref": "#/definitions/Type_0"
                            }
                        }
                    }
                },
                "StatementValue": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Set of elements used to provide details of a generic number value related to the statement resource.",
                        "required": [
                            "Value",
                            "Type"
                        ],
                        "properties": {
                            "Value": {
                                "$ref": "#/definitions/OBExternalStatementValueType1Code"
                            },
                            "Type": {
                                "$ref": "#/definitions/Type_1"
                            }
                        }
                    }
                }
            }
        },
        "OBReadTransaction5": {
            "type": "object",
            "required": [
                "Data"
            ],
            "properties": {
                "Data": {
                    "$ref": "#/definitions/OBReadDataTransaction5"
                },
                "Links": {
                    "$ref": "#/definitions/Links"
                },
                "Meta": {
                    "$ref": "#/definitions/Meta"
                }
            }
        },
        "OBReadDataTransaction5": {
            "type": "object",
            "properties": {
                "Transaction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OBTransaction5"
                    }
                }
            }
        },
        "OBTransaction5": {
            "type": "object",
            "description": "Provides further details on an entry in the report.",
            "required": [
                "AccountId",
                "CreditDebitIndicator",
                "Status",
                "BookingDateTime",
                "Amount"
            ],
            "properties": {
                "AccountId": {
                    "$ref": "#/definitions/AccountId"
                },
                "TransactionId": {
                    "$ref": "#/definitions/TransactionId"
                },
                "TransactionReference": {
                    "$ref": "#/definitions/TransactionReference"
                },
                "StatementReference": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StatementReference"
                    }
                },
                "CreditDebitIndicator": {
                    "$ref": "#/definitions/OBCreditDebitCode_1"
                },
                "Status": {
                    "$ref": "#/definitions/OBEntryStatus1Code"
                },
                "BookingDateTime": {
                    "$ref": "#/definitions/BookingDateTime"
                },
                "ValueDateTime": {
                    "$ref": "#/definitions/ValueDateTime"
                },
                "TransactionInformation": {
                    "$ref": "#/definitions/TransactionInformation"
                },
                "AddressLine": {
                    "$ref": "#/definitions/AddressLine"
                },
                "Amount": {
                    "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount_7"
                },
                "ChargeAmount": {
                    "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount_8"
                },
                "CurrencyExchange": {
                    "$ref": "#/definitions/OBCurrencyExchange5"
                },
                "BankTransactionCode": {
                    "$ref": "#/definitions/OBBankTransactionCodeStructure1"
                },
                "ProprietaryBankTransactionCode": {
                    "$ref": "#/definitions/ProprietaryBankTransactionCodeStructure1"
                },
                "Balance": {
                    "$ref": "#/definitions/OBTransactionCashBalance"
                },
                "MerchantDetails": {
                    "$ref": "#/definitions/OBMerchantDetails1"
                },
                "CreditorAgent": {
                    "$ref": "#/definitions/OBBranchAndFinancialInstitutionIdentification6_0"
                },
                "CreditorAccount": {
                    "$ref": "#/definitions/OBCashAccount6_0"
                },
                "DebtorAgent": {
                    "$ref": "#/definitions/OBBranchAndFinancialInstitutionIdentification6_1"
                },
                "DebtorAccount": {
                    "$ref": "#/definitions/OBCashAccount6_1"
                },
                "CardInstrument": {
                    "$ref": "#/definitions/OBTransactionCardInstrument1"
                },
                "SupplementaryData": {
                    "$ref": "#/definitions/OBSupplementaryData1"
                }
            }
        },
        "OBSupplementaryData1": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
        },
        "OBTransactionCardInstrument1": {
            "type": "object",
            "required": [
                "CardSchemeName"
            ],
            "description": "Set of elements to describe the card instrument used in the transaction.",
            "properties": {
                "CardSchemeName": {
                    "description": "Name of the card scheme.",
                    "type": "string",
                    "enum": [
                        "AmericanExpress",
                        "Diners",
                        "Discover",
                        "MasterCard",
                        "VISA"
                    ]
                },
                "AuthorisationType": {
                    "description": "The card authorisation type.",
                    "type": "string",
                    "enum": [
                        "ConsumerDevice",
                        "Contactless",
                        "None",
                        "PIN"
                    ]
                },
                "Name": {
                    "description": "Name of the cardholder using the card instrument.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 70
                },
                "Identification": {
                    "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 34
                }
            }
        },
        "OBTransactionCashBalance": {
            "type": "object",
            "required": [
                "CreditDebitIndicator",
                "Type",
                "Amount"
            ],
            "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.",
            "properties": {
                "CreditDebitIndicator": {
                    "$ref": "#/definitions/OBCreditDebitCode_2"
                },
                "Type": {
                    "$ref": "#/definitions/OBBalanceType1Code"
                },
                "Amount": {
                    "type": "object",
                    "required": [
                        "Amount",
                        "Currency"
                    ],
                    "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
                    "properties": {
                        "Amount": {
                            "$ref": "#/definitions/OBActiveCurrencyAndAmount_SimpleType"
                        },
                        "Currency": {
                            "$ref": "#/definitions/ActiveOrHistoricCurrencyCode_1"
                        }
                    }
                }
            }
        },
        "PartyId": {
            "description": "A unique and immutable identifier used to identify the customer resource. This identifier has no meaning to the account owner.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
        },
        "PartyNumber": {
            "description": "Number assigned by an agent to identify its customer.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
        },
        "PhoneNumber_0": {
            "description": "Collection of information that identifies a phone number, as defined by telecom services.",
            "type": "string",
            "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}"
        },
        "PhoneNumber_1": {
            "description": "Collection of information that identifies a mobile phone number, as defined by telecom services.",
            "type": "string",
            "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}"
        },
        "PostCode": {
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
        },
        "ProprietaryBankTransactionCodeStructure1": {
            "type": "object",
            "required": [
                "Code"
            ],
            "description": "Set of elements to fully identify a proprietary bank transaction code.",
            "properties": {
                "Code": {
                    "description": "Proprietary bank transaction code to identify the underlying transaction.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                },
                "Issuer": {
                    "description": "Identification of the issuer of the proprietary bank transaction code.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                }
            }
        },
        "SecondaryIdentification": {
            "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
            "type": "string",
            "minLength": 1,
            "maxLength": 34
        },
        "StartDateTime": {
            "description": "Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        },
        "StatementId": {
            "description": "Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
        },
        "StatementReference": {
            "description": "Unique reference for the statement. This reference may be optionally populated if available.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
        },
        "StatusUpdateDateTime": {
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        },
        "StreetName": {
            "description": "Name of a street or thoroughfare.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
        },
        "TownName": {
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
        },
        "TransactionId": {
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
            "type": "string",
            "minLength": 1,
            "maxLength": 210
        },
        "TransactionInformation": {
            "description": "Further details of the transaction. \nThis is the transaction narrative, which is unstructured text.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
        },
        "TransactionReference": {
            "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
        },
        "Type_0": {
            "description": "Statement rate type, in a coded form.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
        },
        "Type_1": {
            "description": "Statement value type, in a coded form.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
        },
        "ValueDateTime": {
            "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "type": "string",
            "format": "date-time"
        }
    },
  "securityDefinitions": {
    "TPPOAuth2Security": {
        "type": "oauth2",
        "flow": "application",
        "tokenUrl": "https://authserver.example/token",
        "scopes": {
        "accounts": "Ability to read Accounts information"
        },
        "description": "TPP client credential authorisation flow with the ASPSP"
    },
    "PSUOAuth2Security": {
        "type": "oauth2",
        "flow": "accessCode",
        "tokenUrl": "https://authserver.example/token",
        "authorizationUrl": "https://authserver.example/authorization",
        "scopes": {
            "accounts": "Ability to read Accounts information"
        },
        "description": "OAuth flow, it is required when the PSU needs to perform SCA with the ASPSP when a TPP wants to access an ASPSP resource owned by the PSU"
    }
  }
}