{
  "openapi": "3.0.1",
  "info": {
    "title": "Account Information Service (AIS)",
    "description": "Access NewDay customersâ€™ account and transaction information securely.",
    "version": "1.0"
  },
  "x-pub-settings": {
    "pub-ready": true,
    "team": "",
    "tags": [
      "Open Banking",
      "Issuer Bank"
    ],
    "commitDate": 1739207354000
  },
  "servers": [
    {
      "url": "https://api.newdaycards.com/open-banking/v3.1/aisp",
      "description": "Production"
    },
    {
      "url": "https://api.newdaycards.com/sandbox/open-banking/v3.1/aisp",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/account-access-consents": {
      "post": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Create Account Access Consents",
        "description": "Creates an account access consent resource and responds with a unique ConsentId to refer to the resource.",
        "operationId": "CreateAccountAccessConsents",
        "parameters": [
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account Access Consents Created",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "ConsentId": "urn-alphabank-intent-88379",
                    "CreationDateTime": "2017-05-02T00:00:00.0000000+00:00",
                    "ExpirationDateTime": "2019-08-02T00:00:00.0000000+00:00",
                    "Permissions": [
                      "ReadAccountsDetail",
                      "ReadStatementsDetail",
                      "ReadPartyPSU",
                      "ReadParty",
                      "ReadOffers",
                      "ReadTransactionsDebits",
                      "ReadProducts",
                      "ReadBalances",
                      "ReadTransactionsDetail"
                    ],
                    "Status": "AwaitingAuthorisation",
                    "StatusUpdateDateTime": "2017-05-02T00:00:00.0000000+00:00",
                    "TransactionFromDateTime": "2017-05-03T00:00:00.0000000+00:00",
                    "TransactionToDateTime": "2017-12-03T00:00:00.0000000+00:00"
                  }
                }
              },
              "Links": {
                "example": {
                  "Self": "https://api.newdaycards.com/open-banking/v3.1/account-access-consents/urn-alphabank-intent-88379"
                }
              },
              "Meta": {
                "example": {
                  "TotalPages": 1
                }
              },
              "Risk": {}
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "example": {
                  "Code": "415 Unsupported Media Type",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "Content-Type Header is missing.",
                      "Path": "Content-Type"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/account-access-consents/{consentId}": {
      "get": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Get Account Access Consents",
        "description": "Retrieves an account access consent linked to a unique consentId.",
        "operationId": "GetAccountAccessConsentsConsentId",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account Access Consents Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "ConsentId": "urn-alphabank-intent-88379",
                    "CreationDateTime": "2017-05-02T00:00:00.0000000+00:00",
                    "Status": "AwaitingAuthorisation",
                    "StatusUpdateDateTime": "2017-05-02T00:00:00.0000000+00:00",
                    "Permissions": [
                      "ReadAccountsDetail",
                      "ReadStatementsDetail",
                      "ReadPartyPSU",
                      "ReadParty",
                      "ReadOffers",
                      "ReadTransactionsDebits",
                      "ReadProducts",
                      "ReadBalances",
                      "ReadTransactionsDetail"
                    ],
                    "ExpirationDateTime": "2019-08-02T00:00:00.0000000+00:00",
                    "TransactionFromDateTime": "2017-05-03T00:00:00.0000000+00:00",
                    "TransactionToDateTime": "2017-12-03T00:00:00.0000000+00:00"
                  }
                }
              },
              "Links": {
                "example": {
                  "Self": "https://api.newdaycards.com/open-banking/v3.1/account-access-consents/urn-alphabank-intent-88379"
                }
              },
              "Meta": {
                "example": {
                  "TotalPages": 1
                }
              },
              "Risk": {}
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "Account Access Consents"
        ],
        "summary": "Delete Account Access Consents",
        "description": "Deletes an account access consent linked to a unique consentId.",
        "operationId": "DeleteAccountAccessConsentsConsentId",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account Access Consents Deleted",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/account-access-consents/%7BconsentId%7D',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Account By AccountId",
        "description": "Retrieve a list of all authorised accounts that the PSU has granted access too.",
        "operationId": "GetAccountsAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Account": [
                      {
                        "AccountId": "904000",
                        "Currency": "GBP",
                        "AccountType": "Personal",
                        "AccountSubType": "CreditCard",
                        "Description": "Odin",
                        "Nickname": "Odin",
                        "Account": [
                          {
                            "SchemeName": "SortCodeAccountNumber",
                            "Identification": "88091000000009",
                            "Name": "Odin",
                            "SecondaryIdentification": "880919"
                          }
                        ],
                        "Servicer": {
                          "SchemeName": "Odin",
                          "Identification": "Odin"
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "Code": "404 Not Found",
                  "Errors": [
                    {
                      "ErrorCode": "404 Not Found",
                      "Message": "Not Found"
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Accounts",
        "description": "Retrieve a list of all authorised accounts that the PSU has granted access too.",
        "operationId": "GetAccounts",
        "parameters": [
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Account": [
                      {
                        "AccountId": "904000",
                        "Currency": "GBP",
                        "AccountType": "Personal",
                        "AccountSubType": "CreditCard",
                        "Description": "Odin",
                        "Nickname": "Odin",
                        "Account": [
                          {
                            "SchemeName": "SortCodeAccountNumber",
                            "Identification": "88091000000009",
                            "Name": "Odin",
                            "SecondaryIdentification": "880919"
                          }
                        ],
                        "Servicer": {
                          "SchemeName": "Odin",
                          "Identification": "Odin"
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "Code": "404 Not Found",
                  "Errors": [
                    {
                      "ErrorCode": "404 Not Found",
                      "Message": "Not Found"
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get Balance By AccountId",
        "description": "Retrieve the account balance information resources for the AccountId.",
        "operationId": "GetBalanceAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Balance Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Balance": [
                      {
                        "AccountId": "904000",
                        "CreditDebitIndicator": "Credit",
                        "Type": "InterimAvailable",
                        "DateTime": "2019-01-30T16:00:10.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "CreditLine": [
                          {
                            "Included": true,
                            "Type": "Pre-Agreed",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/balances"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/balances \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/balances\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/balances\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/balances',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get Balances",
        "description": "Retrieve a list of balances for all authorised accounts that the PSU has granted access too.",
        "operationId": "GetBalances",
        "parameters": [
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Balances Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Balance": [
                      {
                        "AccountId": "904000",
                        "CreditDebitIndicator": "Credit",
                        "Type": "InterimAvailable",
                        "DateTime": "2019-01-30T16:00:10.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "CreditLine": [
                          {
                            "Included": true,
                            "Type": "Pre-Agreed",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/balances"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/balances \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/balances\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/balances\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/balances',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/statements": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements",
        "description": "Retrieve a list of statements for all authorised accounts that the PSU has granted access too.",
        "operationId": "GetStatements",
        "parameters": [
          {
            "name": "fromStatementDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements FROM NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toStatementDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements TO NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statements Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Statement": [
                      {
                        "AccountId": "904000",
                        "StatementId": "8sfhke-sifhkeug-00001",
                        "Type": "RegularPeriodic",
                        "StartDateTime": "2018-01-01T00:00:00.0000000+00:00",
                        "EndDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "CreationDateTime": "2018-02-01T00:00:00.0000000+00:00",
                        "StatementDescription": [
                          "2017/01 Statement"
                        ],
                        "StatementInterest": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "Total",
                            "RateType": "0",
                            "Frequency": "0",
                            "Amount": {
                              "Amount": "19.00",
                              "Currency": "GBP"
                            }
                          }
                        ],
                        "StatementDateTime": [
                          {
                            "DateTime": "2018-02-01T00:00:00.0000000+00:00",
                            "Type": "PaymentDue"
                          }
                        ],
                        "StatementAmount": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "ClosingBalance",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "PreviousClosingBalance",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "AvailableBalance",
                            "Amount": {
                              "Amount": "2100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "CreditLimit",
                            "Amount": {
                              "Amount": "2300.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "MinimumPaymentDue",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCharges",
                            "Amount": {
                              "Amount": "10.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "TotalDebits",
                            "Amount": {
                              "Amount": "15.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCredits",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      },
                      {
                        "AccountId": "904000",
                        "StatementId": "8sfhke-sifhkeug-00002",
                        "Type": "RegularPeriodic",
                        "StartDateTime": "2018-02-01T00:00:00.0000000+00:00",
                        "EndDateTime": "2018-02-28T23:59:59.0000000+00:00",
                        "CreationDateTime": "2018-03-01T00:00:00.0000000+00:00",
                        "StatementDescription": [
                          "2017/02 Statement"
                        ],
                        "StatementInterest": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "Total",
                            "RateType": "0",
                            "Frequency": "0",
                            "Amount": {
                              "Amount": "19.00",
                              "Currency": "GBP"
                            }
                          }
                        ],
                        "StatementDateTime": [
                          {
                            "DateTime": "2018-03-01T00:00:00.0000000+00:00",
                            "Type": "PaymentDue"
                          }
                        ],
                        "StatementAmount": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "ClosingBalance",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "PreviousClosingBalance",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "AvailableBalance",
                            "Amount": {
                              "Amount": "2100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "CreditLimit",
                            "Amount": {
                              "Amount": "2300.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "MinimumPaymentDue",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCharges",
                            "Amount": {
                              "Amount": "10.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "TotalDebits",
                            "Amount": {
                              "Amount": "15.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCredits",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      },
                      {
                        "AccountId": "904000",
                        "StatementId": "8sfhke-sifhkeug-00003",
                        "Type": "RegularPeriodic",
                        "StartDateTime": "2018-03-01T00:00:00.0000000+00:00",
                        "EndDateTime": "2018-03-31T23:59:59.0000000+00:00",
                        "CreationDateTime": "2018-04-01T00:00:00.0000000+00:00",
                        "StatementDescription": [
                          "2017/03 Statement"
                        ],
                        "StatementInterest": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "Total",
                            "RateType": "0",
                            "Frequency": "0",
                            "Amount": {
                              "Amount": "19.00",
                              "Currency": "GBP"
                            }
                          }
                        ],
                        "StatementDateTime": [
                          {
                            "DateTime": "2018-04-01T00:00:00.0000000+00:00",
                            "Type": "PaymentDue"
                          }
                        ],
                        "StatementAmount": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "ClosingBalance",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "PreviousClosingBalance",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "AvailableBalance",
                            "Amount": {
                              "Amount": "2100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "CreditLimit",
                            "Amount": {
                              "Amount": "2300.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "MinimumPaymentDue",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCharges",
                            "Amount": {
                              "Amount": "10.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "TotalDebits",
                            "Amount": {
                              "Amount": "15.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCredits",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/statements",
                    "First": "https://api.newdaycards.com/open-banking/v3.1/aisp/statements",
                    "Next": "https://api.newdaycards.com/open-banking/v3.1/aisp/statements?pg=2",
                    "Last": "https://api.newdaycards.com/open-banking/v3.1/aisp/statements?pg=3"
                  },
                  "Meta": {
                    "TotalPages": 3
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.newdaycards.com/open-banking/v3.1/aisp/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE' \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/statements',\n  qs: {\n    fromStatementDateTime: 'SOME_STRING_VALUE',\n    toStatementDateTime: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/statements": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements for AccountId",
        "description": "Retrieve the statement information resources for the AccountId.",
        "operationId": "GetAccountsAccountIdStatements",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromStatementDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements FROM NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toStatementDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements TO NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statements Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Statement": [
                      {
                        "AccountId": "904000",
                        "StatementId": "8sfhke-sifhkeug-00001",
                        "Type": "RegularPeriodic",
                        "StartDateTime": "2018-01-01T00:00:00.0000000+00:00",
                        "EndDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "CreationDateTime": "2018-02-01T00:00:00.0000000+00:00",
                        "StatementDescription": [
                          "2017/01 Statement"
                        ],
                        "StatementInterest": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "Total",
                            "RateType": "0",
                            "Frequency": "0",
                            "Amount": {
                              "Amount": "19.00",
                              "Currency": "GBP"
                            }
                          }
                        ],
                        "StatementDateTime": [
                          {
                            "DateTime": "2018-02-01T00:00:00.0000000+00:00",
                            "Type": "PaymentDue"
                          }
                        ],
                        "StatementAmount": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "ClosingBalance",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "PreviousClosingBalance",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "AvailableBalance",
                            "Amount": {
                              "Amount": "2100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "CreditLimit",
                            "Amount": {
                              "Amount": "2300.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "MinimumPaymentDue",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCharges",
                            "Amount": {
                              "Amount": "10.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "TotalDebits",
                            "Amount": {
                              "Amount": "15.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCredits",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      },
                      {
                        "AccountId": "904000",
                        "StatementId": "8sfhke-sifhkeug-00002",
                        "Type": "RegularPeriodic",
                        "StartDateTime": "2018-02-01T00:00:00.0000000+00:00",
                        "EndDateTime": "2018-02-28T23:59:59.0000000+00:00",
                        "CreationDateTime": "2018-03-01T00:00:00.0000000+00:00",
                        "StatementDescription": [
                          "2017/02 Statement"
                        ],
                        "StatementInterest": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "Total",
                            "RateType": "0",
                            "Frequency": "0",
                            "Amount": {
                              "Amount": "19.00",
                              "Currency": "GBP"
                            }
                          }
                        ],
                        "StatementDateTime": [
                          {
                            "DateTime": "2018-03-01T00:00:00.0000000+00:00",
                            "Type": "PaymentDue"
                          }
                        ],
                        "StatementAmount": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "ClosingBalance",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "PreviousClosingBalance",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "AvailableBalance",
                            "Amount": {
                              "Amount": "2100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "CreditLimit",
                            "Amount": {
                              "Amount": "2300.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "MinimumPaymentDue",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCharges",
                            "Amount": {
                              "Amount": "10.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "TotalDebits",
                            "Amount": {
                              "Amount": "15.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCredits",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      },
                      {
                        "AccountId": "904000",
                        "StatementId": "8sfhke-sifhkeug-00003",
                        "Type": "RegularPeriodic",
                        "StartDateTime": "2018-03-01T00:00:00.0000000+00:00",
                        "EndDateTime": "2018-03-31T23:59:59.0000000+00:00",
                        "CreationDateTime": "2018-04-01T00:00:00.0000000+00:00",
                        "StatementDescription": [
                          "2017/03 Statement"
                        ],
                        "StatementInterest": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "Total",
                            "RateType": "0",
                            "Frequency": "0",
                            "Amount": {
                              "Amount": "19.00",
                              "Currency": "GBP"
                            }
                          }
                        ],
                        "StatementDateTime": [
                          {
                            "DateTime": "2018-04-01T00:00:00.0000000+00:00",
                            "Type": "PaymentDue"
                          }
                        ],
                        "StatementAmount": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "ClosingBalance",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "PreviousClosingBalance",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "AvailableBalance",
                            "Amount": {
                              "Amount": "2100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "CreditLimit",
                            "Amount": {
                              "Amount": "2300.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "MinimumPaymentDue",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCharges",
                            "Amount": {
                              "Amount": "10.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "TotalDebits",
                            "Amount": {
                              "Amount": "15.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCredits",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements",
                    "First": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements",
                    "Next": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements?pg=2",
                    "Last": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements?pg=5"
                  },
                  "Meta": {
                    "TotalPages": 5
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Errors": [
                    {
                      "ErrorCode": "400 Bad Request",
                      "Message": "Bad Request"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE' \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements',\n  qs: {\n    fromStatementDateTime: 'SOME_STRING_VALUE',\n    toStatementDateTime: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/statements/{statementId}": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statement for AccountId by StatementId",
        "description": "Retrieve the statement information resources for the AccountId and StatementId.",
        "operationId": "GetAccountsAccountIdStatementsStatementId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statements Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Statement": [
                      {
                        "AccountId": "904000",
                        "StatementId": "8sfhke-sifhkeug-00001",
                        "Type": "RegularPeriodic",
                        "StartDateTime": "2018-01-01T00:00:00.0000000+00:00",
                        "EndDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "CreationDateTime": "2018-02-01T00:00:00.0000000+00:00",
                        "StatementDescription": [
                          "2017/01 Statement"
                        ],
                        "StatementInterest": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "Total",
                            "RateType": "0",
                            "Frequency": "0",
                            "Amount": {
                              "Amount": "19.00",
                              "Currency": "GBP"
                            }
                          }
                        ],
                        "StatementDateTime": [
                          {
                            "DateTime": "2018-02-01T00:00:00.0000000+00:00",
                            "Type": "PaymentDue"
                          }
                        ],
                        "StatementAmount": [
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "ClosingBalance",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "PreviousClosingBalance",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "AvailableBalance",
                            "Amount": {
                              "Amount": "2100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "CreditLimit",
                            "Amount": {
                              "Amount": "2300.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "MinimumPaymentDue",
                            "Amount": {
                              "Amount": "100.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCharges",
                            "Amount": {
                              "Amount": "10.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Debit",
                            "Type": "TotalDebits",
                            "Amount": {
                              "Amount": "15.00",
                              "Currency": "GBP"
                            }
                          },
                          {
                            "CreditDebitIndicator": "Credit",
                            "Type": "TotalCredits",
                            "Amount": {
                              "Amount": "200.00",
                              "Currency": "GBP"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements/8sfhke-sifhkeug-00001",
                    "First": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements/8sfhke-sifhkeug-00001",
                    "Last": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements/8sfhke-sifhkeug-00001"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Errors": [
                    {
                      "ErrorCode": "400 Bad Request",
                      "Message": "Bad Request"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/party": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get Party By AccountId",
        "description": "Retrieve a list of authorised parties linked to a specific account that the PSU has granted access too.",
        "operationId": "GetPartyAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Party Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Party": {
                      "PartyId": "65",
                      "PartyNumber": "1001",
                      "PartyType": "Delegate",
                      "Name": "Odin",
                      "EmailAddress": "odin@odin.com",
                      "Phone": "+44-123456789",
                      "Mobile": "+44-123456789",
                      "Address": [
                        {
                          "Country": "GB"
                        }
                      ]
                    }
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/party \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/party\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/party\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/party',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/offers": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Get Offers for Account",
        "description": "Retrieve offers linked to a specified authorised account.",
        "operationId": "GetAccountsAccountIdOffers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Authorised Account Id for which to return offers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Offer": [
                      {
                        "AccountId": "904000",
                        "OfferId": "Offer1",
                        "OfferType": "BalanceTransfer",
                        "Description": "Balance transfer offer up to Â£2000",
                        "Amount": {
                          "Amount": "2000.00",
                          "Currency": "GBP"
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/offers"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/offers \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/offers\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/offers\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/offers',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/offers": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Get Offers",
        "description": "Retrieve offers for all authorised accounts.. Description: Retrieve a list of all authorised offers that the PSU has granted access too.",
        "operationId": "GetOffers",
        "parameters": [
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Offer": [
                      {
                        "AccountId": "904000",
                        "OfferId": "Offer1",
                        "OfferType": "BalanceTransfer",
                        "Description": "Balance transfer offer up to Â£2000",
                        "Amount": {
                          "Amount": "2000.00",
                          "Currency": "GBP"
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/offers"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/offers \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/offers\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/offers\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/offers',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/party": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get Party",
        "description": "Retrieve a list of all authorised parties that the PSU has granted access too.",
        "operationId": "GetParty",
        "parameters": [
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Party": {
                      "PartyId": "65",
                      "PartyNumber": "1001",
                      "PartyType": "Delegate",
                      "Name": "Odin",
                      "EmailAddress": "odin@odin.com",
                      "Phone": "+44-123456789",
                      "Mobile": "+44-123456789",
                      "Address": [
                        {
                          "Country": "GB"
                        }
                      ]
                    }
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/party"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/party \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/party\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/party\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/party',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Products",
        "description": "Retrieve a list of products for all authorised accounts that the PSU has granted access too.",
        "operationId": "GetProducts",
        "parameters": [
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Product": [
                      {
                        "ProductName": "065B Product",
                        "ProductId": "061B",
                        "AccountId": "904000",
                        "ProductType": "Other",
                        "MarketingStateId": "EAR2",
                        "OtherProductType": {
                          "Name": "Credit Card",
                          "Description": "NewDay Credit Card"
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/products"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "Code": "404 Not Found",
                  "Errors": [
                    {
                      "ErrorCode": "404 Not Found",
                      "Message": "Not Found"
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/products \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/products\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/products\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/products',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/product": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Product By AccountId",
        "description": "Retrieve the account product information for a specific authorised AccountId.",
        "operationId": "GetProductAccountid",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Product": [
                      {
                        "ProductName": "065B Product",
                        "ProductId": "061B",
                        "AccountId": "904000",
                        "ProductType": "Other",
                        "MarketingStateId": "EAR2",
                        "OtherProductType": {
                          "Name": "Credit Card",
                          "Description": "NewDay Credit Card"
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/product"
                  },
                  "Meta": {
                    "TotalPages": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "Code": "404 Not Found",
                  "Errors": [
                    {
                      "ErrorCode": "404 Not Found",
                      "Message": "Not Found"
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/product \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/product\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/product\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/product',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Transactions",
        "description": "Retrieve a list of all authorised transactions that the PSU has granted access too.",
        "operationId": "GetTransactions",
        "parameters": [
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements FROM NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements TO NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Transaction": [
                      {
                        "AccountId": "904000",
                        "TransactionId": "1",
                        "TransactionReference": "Ref 1",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2018-01-01T00:00:00.0000000+00:00",
                        "ValueDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      },
                      {
                        "AccountId": "904000",
                        "TransactionId": "2",
                        "TransactionReference": "Ref 2",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2018-01-02T00:00:00.0000000+00:00",
                        "ValueDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      },
                      {
                        "AccountId": "904000",
                        "TransactionId": "3",
                        "TransactionReference": "Ref 3",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2018-01-03T00:00:00.0000000+00:00",
                        "ValueDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/transactions",
                    "First": "https://api.newdaycards.com/open-banking/v3.1/aisp/transactions",
                    "Next": "https://api.newdaycards.com/open-banking/v3.1/aisp/transactions?pg=2",
                    "Last": "https://api.newdaycards.com/open-banking/v3.1/aisp/transactions?pg=4"
                  },
                  "Meta": {
                    "TotalPages": 4
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.newdaycards.com/open-banking/v3.1/aisp/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE' \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/transactions',\n  qs: {\n    fromBookingDateTime: 'SOME_STRING_VALUE',\n    toBookingDateTime: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Transactions By AccountId",
        "description": "Retrieve a list of authorised transactions linked to a specific account that the PSU has granted access too.",
        "operationId": "GetTransactionsAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromBookingDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements FROM NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toBookingDateTime",
            "in": "query",
            "description": "The UTC ISO 8601 Date Time to filter statements TO NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Transaction": [
                      {
                        "AccountId": "904000",
                        "TransactionId": "1",
                        "TransactionReference": "Ref 1",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2018-01-01T00:00:00.0000000+00:00",
                        "ValueDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      },
                      {
                        "AccountId": "904000",
                        "TransactionId": "2",
                        "TransactionReference": "Ref 2",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2018-01-02T00:00:00.0000000+00:00",
                        "ValueDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      },
                      {
                        "AccountId": "904000",
                        "TransactionId": "3",
                        "TransactionReference": "Ref 3",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2018-01-03T00:00:00.0000000+00:00",
                        "ValueDateTime": "2018-01-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/transactions",
                    "First": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/transactions",
                    "Next": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/transactions?pg=2",
                    "Last": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/transactions?pg=4"
                  },
                  "Meta": {
                    "TotalPages": 4
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE' \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/transactions',\n  qs: {\n    fromBookingDateTime: 'SOME_STRING_VALUE',\n    toBookingDateTime: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/statements/{statementId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Statement Transactions",
        "description": "Retrieve a list of authorised account transactions linked to a specific statement that the PSU has granted access too.",
        "operationId": "GetStatementTransactions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions Read",
            "content": {
              "application/json": {
                "example": {
                  "Data": {
                    "Transaction": [
                      {
                        "AccountId": "904000",
                        "TransactionId": "1",
                        "TransactionReference": "Ref 1",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2017-08-03T00:00:00.0000000+00:00",
                        "ValueDateTime": "2017-08-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      },
                      {
                        "AccountId": "904000",
                        "TransactionId": "2",
                        "TransactionReference": "Ref 2",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2017-08-03T00:00:00.0000000+00:00",
                        "ValueDateTime": "2017-08-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      },
                      {
                        "AccountId": "904000",
                        "TransactionId": "3",
                        "TransactionReference": "Ref 3",
                        "CreditDebitIndicator": "Credit",
                        "Status": "Booked",
                        "BookingDateTime": "2017-08-03T00:00:00.0000000+00:00",
                        "ValueDateTime": "2017-08-31T23:59:59.0000000+00:00",
                        "Amount": {
                          "Amount": "100.00",
                          "Currency": "GBP"
                        },
                        "BankTransactionCode": {
                          "Code": "ReceivedCreditTransfer",
                          "SubCode": "DomesticCreditTransfer"
                        },
                        "ProprietaryBankTransactionCode": {
                          "Code": "Transfer",
                          "Issuer": "AlphaBank"
                        },
                        "TransactionInformation": "Cash from Aubrey",
                        "Balance": {
                          "CreditDebitIndicator": "Credit",
                          "Type": "InterimBooked",
                          "Amount": {
                            "Amount": "100.00",
                            "Currency": "GBP"
                          }
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements/8sfhke-sifhkeug-00001/transactions",
                    "First": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements/8sfhke-sifhkeug-00001/transactions",
                    "Next": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements/8sfhke-sifhkeug-00001/transactions?pg=2",
                    "Last": "https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/904000/statements/8sfhke-sifhkeug-00001/transactions?pg=4"
                  },
                  "Meta": {
                    "TotalPages": 4
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Message": "Validation failed.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Field.Missing",
                      "Message": "Data Field is missing."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "Code": "500 Internal Server Error",
                  "Errors": [
                    {
                      "ErrorCode": "500 Internal Server Error",
                      "Message": "Value cannot be null.\r\nParameter name: instance"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{AccountId}/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Get Direct Debits",
        "description": "Get Direct Debits",
        "operationId": "GetAccountsAccountIdDirectDebits",
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "description": "AccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Direct Debits Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdDirect-debitsGet200ApplicationJsonResponse"
                },
                "example": {
                  "Data": {
                    "DirectDebit": [
                      {
                        "AccountId": "string",
                        "DirectDebitId": "string",
                        "MandateIdentification": "string",
                        "DirectDebitStatusCode": "Active",
                        "Name": "string",
                        "PreviousPaymentDateTime": "string",
                        "Frequency": "string",
                        "PreviousPaymentAmount": {
                          "Amount": "string",
                          "Currency": "string"
                        }
                      }
                    ]
                  },
                  "Links": {
                    "Self": "string",
                    "First": "string",
                    "Prev": "string",
                    "Next": "string",
                    "Last": "string"
                  },
                  "Meta": {
                    "TotalPages": 0,
                    "FirstAvailableDateTime": "string",
                    "LastAvailableDateTime": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdDirect-debitsGet400ApplicationJsonResponse"
                },
                "example": {
                  "Code": "string",
                  "Id": "string",
                  "Message": "string",
                  "Errors": [
                    {
                      "ErrorCode": "string",
                      "Message": "string",
                      "Path": "string",
                      "Url": "string"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdDirect-debitsGet403ApplicationJsonResponse"
                },
                "example": {
                  "Code": "string",
                  "Id": "string",
                  "Message": "string",
                  "Errors": [
                    {
                      "ErrorCode": "string",
                      "Message": "string",
                      "Path": "string",
                      "Url": "string"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdDirect-debitsGet500ApplicationJsonResponse"
                },
                "example": {
                  "Code": "string",
                  "Id": "string",
                  "Message": "string",
                  "Errors": [
                    {
                      "ErrorCode": "string",
                      "Message": "string",
                      "Path": "string",
                      "Url": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/direct-debits \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-auth-date: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/direct-debits\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-auth-date\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/direct-debits\");\nxhr.setRequestHeader(\"x-fapi-auth-date\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/direct-debits',\n  headers: {\n    'x-fapi-auth-date': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{AccountId}/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Get Standing Orders",
        "description": "Get Standing Orders",
        "operationId": "GetAccountsAccountIdStandingOrders",
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "description": "AccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Standing Orders Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdStanding-ordersGet200ApplicationJsonResponse"
                },
                "example": {
                  "Data": {
                    "StandingOrder": [
                      {
                        "AccountId": "string",
                        "StandingOrderId": "string",
                        "Frequency": "string",
                        "Reference": "string",
                        "FirstPaymentDateTime": "string",
                        "NextPaymentDateTime": "string",
                        "LastPaymentDateTime": "string",
                        "FinalPaymentDateTime": "string",
                        "NumberOfPayments": "string",
                        "StandingOrderStatusCode": "Active",
                        "FirstPaymentAmount": {
                          "Amount": "string",
                          "Currency": "string"
                        },
                        "NextPaymentAmount": {
                          "Amount": "string",
                          "Currency": "string"
                        },
                        "LastPaymentAmount": {
                          "Amount": "string",
                          "Currency": "string"
                        },
                        "FinalPaymentAmount": {
                          "Amount": "string",
                          "Currency": "string"
                        },
                        "CreditorAgent": {
                          "SchemeName": "string",
                          "Identification": "string"
                        },
                        "CreditorAccount": {
                          "SchemeName": "string",
                          "Identification": "string",
                          "Name": "string",
                          "SecondaryIdentification": "string"
                        },
                        "SupplementaryData": {}
                      }
                    ]
                  },
                  "Links": {
                    "Self": "string",
                    "First": "string",
                    "Prev": "string",
                    "Next": "string",
                    "Last": "string"
                  },
                  "Meta": {
                    "TotalPages": 0,
                    "FirstAvailableDateTime": "string",
                    "LastAvailableDateTime": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdStanding-ordersGet400ApplicationJsonResponse"
                },
                "example": {
                  "Code": "string",
                  "Id": "string",
                  "Message": "string",
                  "Errors": [
                    {
                      "ErrorCode": "string",
                      "Message": "string",
                      "Path": "string",
                      "Url": "string"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdStanding-ordersGet403ApplicationJsonResponse"
                },
                "example": {
                  "Code": "string",
                  "Id": "string",
                  "Message": "string",
                  "Errors": [
                    {
                      "ErrorCode": "string",
                      "Message": "string",
                      "Path": "string",
                      "Url": "string"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsAccountIdStanding-ordersGet500ApplicationJsonResponse"
                },
                "example": {
                  "Code": "string",
                  "Id": "string",
                  "Message": "string",
                  "Errors": [
                    {
                      "ErrorCode": "string",
                      "Message": "string",
                      "Path": "string",
                      "Url": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/standing-orders \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-auth-date: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/standing-orders\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-auth-date\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/standing-orders\");\nxhr.setRequestHeader(\"x-fapi-auth-date\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BAccountId%7D/standing-orders',\n  headers: {\n    'x-fapi-auth-date': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/accounts/{accountId}/statements/{statementId}/file": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statement PDF for AccountId by StatementId",
        "description": "Retrieve the statement PDF file for the AccountId and StatementId.",
        "operationId": "GetAccountsAccountIdStatementsStatementIdFile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id Example: 3915150005108536",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statementId",
            "in": "path",
            "description": "Statement Id Example: 3915150005108536-20220426",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-financial-id",
            "in": "header",
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-last-logged-time",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP.  All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:  Sun, 10 Sep 2017 19:43:31 UTC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-customer-user-agent",
            "in": "header",
            "description": "Indicates the user-agent that the PSU is using.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statements PDF File Generated",
            "content": {
              "application/pdf": {
                "example": ""
              },
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "Code": "400 Bad Request",
                  "Errors": [
                    {
                      "ErrorCode": "400 Bad Request",
                      "Message": "Bad Request"
                    }
                  ]
                }
              },
              "application/pdf": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/pdf": {},
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "Code": "403 Forbidden",
                  "Message": "Missing header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Missing",
                      "Message": "x-fapi-financial-id Header is Missing.",
                      "Path": "x-fapi-financial-id"
                    }
                  ]
                }
              },
              "application/pdf": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/pdf": {},
              "application/json": {}
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/pdf": {},
              "application/json": {}
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "example": {
                  "Code": "406 Not Acceptable",
                  "Message": "Invalid header.",
                  "Errors": [
                    {
                      "ErrorCode": "UK.OBIE.Header.Invalid",
                      "Message": "Accept Header is invalid.",
                      "Path": "Accept"
                    }
                  ]
                }
              },
              "application/pdf": {}
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/pdf": {},
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/pdf": {},
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file \\\n  --header 'Authorization: SOME_STRING_VALUE' \\\n  --header 'x-customer-user-agent: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \\\n  --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \\\n  --header 'x-fapi-financial-id: SOME_STRING_VALUE' \\\n  --header 'x-fapi-interaction-id: SOME_STRING_VALUE'"
          },
          {
            "lang": "Csharp + Restsharp",
            "source": "var client = new RestClient(\"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nrequest.AddHeader(\"Authorization\", \"SOME_STRING_VALUE\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Javascript + Xhr",
            "source": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file\");\nxhr.setRequestHeader(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"x-customer-user-agent\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.newdaycards.com/open-banking/v3.1/aisp/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file',\n  headers: {\n    'x-fapi-financial-id': 'SOME_STRING_VALUE',\n    'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',\n    'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',\n    'x-fapi-interaction-id': 'SOME_STRING_VALUE',\n    'x-customer-user-agent': 'SOME_STRING_VALUE',\n    Authorization: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccountsAccountIdDirect-debitsGet200ApplicationJsonResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "DirectDebit": {
                "type": "array",
                "items": {
                  "required": [
                    "AccountId",
                    "MandateIdentification",
                    "Name"
                  ],
                  "type": "object",
                  "properties": {
                    "AccountId": {
                      "maxLength": 40,
                      "minLength": 1,
                      "type": "string",
                      "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner."
                    },
                    "DirectDebitId": {
                      "maxLength": 40,
                      "minLength": 1,
                      "type": "string",
                      "description": "A unique and immutable identifier used to identify the direct debit resource. This identifier has no meaning to the account owner."
                    },
                    "MandateIdentification": {
                      "maxLength": 35,
                      "minLength": 1,
                      "type": "string",
                      "description": "Direct Debit reference. For AUDDIS service users provide Core Reference. For non AUDDIS service users provide Core reference if possible or last used reference."
                    },
                    "DirectDebitStatusCode": {
                      "enum": [
                        "Active",
                        "Inactive"
                      ],
                      "type": "string",
                      "description": "Specifies the status of the direct debit in code form."
                    },
                    "Name": {
                      "maxLength": 70,
                      "minLength": 1,
                      "type": "string",
                      "description": "Name of Service User."
                    },
                    "PreviousPaymentDateTime": {
                      "type": "string",
                      "description": "Date of most recent direct debit collection.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                      "format": "date-time"
                    },
                    "Frequency": {
                      "type": "string",
                      "description": "Regularity with which direct debit instructions are to be created and processed.",
                      "x-namespaced-enum": [
                        "UK.OBIE.Annual",
                        "UK.OBIE.Daily",
                        "UK.OBIE.Fortnightly",
                        "UK.OBIE.HalfYearly",
                        "UK.OBIE.Monthly",
                        "UK.OBIE.NotKnown",
                        "UK.OBIE.Quarterly",
                        "UK.OBIE.Weekly"
                      ]
                    },
                    "PreviousPaymentAmount": {
                      "required": [
                        "Amount",
                        "Currency"
                      ],
                      "type": "object",
                      "properties": {
                        "Amount": {
                          "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
                          "type": "string",
                          "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
                        },
                        "Currency": {
                          "pattern": "^[A-Z]{3,3}$",
                          "type": "string",
                          "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
                        }
                      },
                      "description": "The amount of the most recent direct debit collection."
                    }
                  },
                  "description": "Account to or from which a cash entry is made."
                }
              }
            }
          },
          "Links": {
            "required": [
              "Self"
            ],
            "type": "object",
            "properties": {
              "Self": {
                "type": "string",
                "format": "uri"
              },
              "First": {
                "type": "string",
                "format": "uri"
              },
              "Prev": {
                "type": "string",
                "format": "uri"
              },
              "Next": {
                "type": "string",
                "format": "uri"
              },
              "Last": {
                "type": "string",
                "format": "uri"
              }
            },
            "additionalProperties": false,
            "description": "Links relevant to the payload"
          },
          "Meta": {
            "title": "MetaData",
            "type": "object",
            "properties": {
              "TotalPages": {
                "type": "integer",
                "format": "int32"
              },
              "FirstAvailableDateTime": {
                "type": "string",
                "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                "format": "date-time"
              },
              "LastAvailableDateTime": {
                "type": "string",
                "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                "format": "date-time"
              }
            },
            "additionalProperties": false,
            "description": "Meta Data relevant to the payload"
          }
        },
        "additionalProperties": false
      },
      "AccountsAccountIdDirect-debitsGet400ApplicationJsonResponse": {
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "minProperties": 1,
              "required": [
                "ErrorCode",
                "Message"
              ],
              "type": "object",
              "properties": {
                "ErrorCode": {
                  "type": "string",
                  "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                  "x-namespaced-enum": [
                    "UK.OBIE.Field.Expected",
                    "UK.OBIE.Field.Invalid",
                    "UK.OBIE.Field.InvalidDate",
                    "UK.OBIE.Field.Missing",
                    "UK.OBIE.Field.Unexpected",
                    "UK.OBIE.Header.Invalid",
                    "UK.OBIE.Header.Missing",
                    "UK.OBIE.Reauthenticate",
                    "UK.OBIE.Resource.ConsentMismatch",
                    "UK.OBIE.Resource.InvalidConsentStatus",
                    "UK.OBIE.Resource.InvalidFormat",
                    "UK.OBIE.Resource.NotFound",
                    "UK.OBIE.Rules.AfterCutOffDateTime",
                    "UK.OBIE.Rules.DuplicateReference",
                    "UK.OBIE.Signature.Invalid",
                    "UK.OBIE.Signature.InvalidClaim",
                    "UK.OBIE.Signature.Malformed",
                    "UK.OBIE.Signature.Missing",
                    "UK.OBIE.Signature.MissingClaim",
                    "UK.OBIE.Signature.Unexpected",
                    "UK.OBIE.UnexpectedError",
                    "UK.OBIE.Unsupported.AccountIdentifier",
                    "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
                    "UK.OBIE.Unsupported.Currency",
                    "UK.OBIE.Unsupported.Frequency",
                    "UK.OBIE.Unsupported.LocalInstrument",
                    "UK.OBIE.Unsupported.Scheme"
                  ]
                },
                "Message": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field"
                },
                "Path": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency"
                },
                "Url": {
                  "type": "string",
                  "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false,
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      },
      "AccountsAccountIdDirect-debitsGet403ApplicationJsonResponse": {
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "minProperties": 1,
              "required": [
                "ErrorCode",
                "Message"
              ],
              "type": "object",
              "properties": {
                "ErrorCode": {
                  "type": "string",
                  "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                  "x-namespaced-enum": [
                    "UK.OBIE.Field.Expected",
                    "UK.OBIE.Field.Invalid",
                    "UK.OBIE.Field.InvalidDate",
                    "UK.OBIE.Field.Missing",
                    "UK.OBIE.Field.Unexpected",
                    "UK.OBIE.Header.Invalid",
                    "UK.OBIE.Header.Missing",
                    "UK.OBIE.Reauthenticate",
                    "UK.OBIE.Resource.ConsentMismatch",
                    "UK.OBIE.Resource.InvalidConsentStatus",
                    "UK.OBIE.Resource.InvalidFormat",
                    "UK.OBIE.Resource.NotFound",
                    "UK.OBIE.Rules.AfterCutOffDateTime",
                    "UK.OBIE.Rules.DuplicateReference",
                    "UK.OBIE.Signature.Invalid",
                    "UK.OBIE.Signature.InvalidClaim",
                    "UK.OBIE.Signature.Malformed",
                    "UK.OBIE.Signature.Missing",
                    "UK.OBIE.Signature.MissingClaim",
                    "UK.OBIE.Signature.Unexpected",
                    "UK.OBIE.UnexpectedError",
                    "UK.OBIE.Unsupported.AccountIdentifier",
                    "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
                    "UK.OBIE.Unsupported.Currency",
                    "UK.OBIE.Unsupported.Frequency",
                    "UK.OBIE.Unsupported.LocalInstrument",
                    "UK.OBIE.Unsupported.Scheme"
                  ]
                },
                "Message": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field"
                },
                "Path": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency"
                },
                "Url": {
                  "type": "string",
                  "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false,
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      },
      "AccountsAccountIdDirect-debitsGet500ApplicationJsonResponse": {
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "minProperties": 1,
              "required": [
                "ErrorCode",
                "Message"
              ],
              "type": "object",
              "properties": {
                "ErrorCode": {
                  "type": "string",
                  "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                  "x-namespaced-enum": [
                    "UK.OBIE.Field.Expected",
                    "UK.OBIE.Field.Invalid",
                    "UK.OBIE.Field.InvalidDate",
                    "UK.OBIE.Field.Missing",
                    "UK.OBIE.Field.Unexpected",
                    "UK.OBIE.Header.Invalid",
                    "UK.OBIE.Header.Missing",
                    "UK.OBIE.Reauthenticate",
                    "UK.OBIE.Resource.ConsentMismatch",
                    "UK.OBIE.Resource.InvalidConsentStatus",
                    "UK.OBIE.Resource.InvalidFormat",
                    "UK.OBIE.Resource.NotFound",
                    "UK.OBIE.Rules.AfterCutOffDateTime",
                    "UK.OBIE.Rules.DuplicateReference",
                    "UK.OBIE.Signature.Invalid",
                    "UK.OBIE.Signature.InvalidClaim",
                    "UK.OBIE.Signature.Malformed",
                    "UK.OBIE.Signature.Missing",
                    "UK.OBIE.Signature.MissingClaim",
                    "UK.OBIE.Signature.Unexpected",
                    "UK.OBIE.UnexpectedError",
                    "UK.OBIE.Unsupported.AccountIdentifier",
                    "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
                    "UK.OBIE.Unsupported.Currency",
                    "UK.OBIE.Unsupported.Frequency",
                    "UK.OBIE.Unsupported.LocalInstrument",
                    "UK.OBIE.Unsupported.Scheme"
                  ]
                },
                "Message": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field"
                },
                "Path": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency"
                },
                "Url": {
                  "type": "string",
                  "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false,
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      },
      "AccountsAccountIdStanding-ordersGet200ApplicationJsonResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "StandingOrder": {
                "type": "array",
                "items": {
                  "required": [
                    "AccountId",
                    "Frequency"
                  ],
                  "type": "object",
                  "properties": {
                    "AccountId": {
                      "maxLength": 40,
                      "minLength": 1,
                      "type": "string",
                      "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner."
                    },
                    "StandingOrderId": {
                      "maxLength": 40,
                      "minLength": 1,
                      "type": "string",
                      "description": "A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner."
                    },
                    "Frequency": {
                      "pattern": "^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$",
                      "type": "string",
                      "description": "Individual Definitions:\nNotKnown - Not Known\nEvryDay - Every day\nEvryWorkgDay - Every working day\nIntrvlDay - An interval specified in number of calendar days (02 to 31)\nIntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)\nWkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)\nIntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-05 to -01, 01 to 31)\nQtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)\nENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.\nSCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.\nRECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.\nIndividual Patterns:\nNotKnown (ScheduleCode)\nEvryDay (ScheduleCode)\nEvryWorkgDay (ScheduleCode)\nIntrvlDay:NoOfDay (ScheduleCode + NoOfDay)\nIntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)\nWkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)\nIntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\nQtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\nNotKnown\nEvryDay\nEvryWorkgDay\nIntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1])\nIntrvlWkDay:0[1-9]:0[1-7]\nWkInMnthDay:0[1-5]:0[1-7]\nIntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])\nQtrDay:(ENGLISH|SCOTTISH|RECEIVED)\nFull Regular Expression:\n^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$"
                    },
                    "Reference": {
                      "maxLength": 35,
                      "minLength": 1,
                      "type": "string",
                      "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification."
                    },
                    "FirstPaymentDateTime": {
                      "type": "string",
                      "description": "The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                      "format": "date-time"
                    },
                    "NextPaymentDateTime": {
                      "type": "string",
                      "description": "The date on which the next payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                      "format": "date-time"
                    },
                    "LastPaymentDateTime": {
                      "type": "string",
                      "description": "The date on which the last (most recent) payment for a Standing Order schedule was made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                      "format": "date-time"
                    },
                    "FinalPaymentDateTime": {
                      "type": "string",
                      "description": "The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                      "format": "date-time"
                    },
                    "NumberOfPayments": {
                      "maxLength": 35,
                      "minLength": 1,
                      "type": "string",
                      "description": "Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date."
                    },
                    "StandingOrderStatusCode": {
                      "enum": [
                        "Active",
                        "Inactive"
                      ],
                      "type": "string",
                      "description": "Specifies the status of the standing order in code form."
                    },
                    "FirstPaymentAmount": {
                      "required": [
                        "Amount",
                        "Currency"
                      ],
                      "type": "object",
                      "properties": {
                        "Amount": {
                          "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
                          "type": "string",
                          "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
                        },
                        "Currency": {
                          "pattern": "^[A-Z]{3,3}$",
                          "type": "string",
                          "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
                        }
                      },
                      "description": "The amount of the first Standing Order"
                    },
                    "NextPaymentAmount": {
                      "required": [
                        "Amount",
                        "Currency"
                      ],
                      "type": "object",
                      "properties": {
                        "Amount": {
                          "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
                          "type": "string",
                          "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
                        },
                        "Currency": {
                          "pattern": "^[A-Z]{3,3}$",
                          "type": "string",
                          "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
                        }
                      },
                      "description": "The amount of the next Standing Order."
                    },
                    "LastPaymentAmount": {
                      "required": [
                        "Amount",
                        "Currency"
                      ],
                      "type": "object",
                      "properties": {
                        "Amount": {
                          "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
                          "type": "string",
                          "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
                        },
                        "Currency": {
                          "pattern": "^[A-Z]{3,3}$",
                          "type": "string",
                          "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
                        }
                      },
                      "description": "The amount of the last (most recent) Standing Order instruction."
                    },
                    "FinalPaymentAmount": {
                      "required": [
                        "Amount",
                        "Currency"
                      ],
                      "type": "object",
                      "properties": {
                        "Amount": {
                          "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
                          "type": "string",
                          "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
                        },
                        "Currency": {
                          "pattern": "^[A-Z]{3,3}$",
                          "type": "string",
                          "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
                        }
                      },
                      "description": "The amount of the final Standing Order"
                    },
                    "CreditorAgent": {
                      "required": [
                        "SchemeName",
                        "Identification"
                      ],
                      "type": "object",
                      "properties": {
                        "SchemeName": {
                          "type": "string",
                          "description": "Name of the identification scheme, in a coded form as published in an external list.",
                          "x-namespaced-enum": [
                            "UK.OBIE.BICFI"
                          ]
                        },
                        "Identification": {
                          "maxLength": 35,
                          "minLength": 1,
                          "type": "string",
                          "description": "Unique and unambiguous identification of the servicing institution."
                        }
                      },
                      "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\nThis is the servicer of the beneficiary account."
                    },
                    "CreditorAccount": {
                      "required": [
                        "SchemeName",
                        "Identification"
                      ],
                      "type": "object",
                      "properties": {
                        "SchemeName": {
                          "type": "string",
                          "description": "Name of the identification scheme, in a coded form as published in an external list.",
                          "x-namespaced-enum": [
                            "UK.OBIE.BBAN",
                            "UK.OBIE.IBAN",
                            "UK.OBIE.PAN",
                            "UK.OBIE.Paym",
                            "UK.OBIE.SortCodeAccountNumber"
                          ]
                        },
                        "Identification": {
                          "maxLength": 256,
                          "minLength": 1,
                          "type": "string",
                          "description": "Beneficiary account identification."
                        },
                        "Name": {
                          "maxLength": 350,
                          "minLength": 1,
                          "type": "string",
                          "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account."
                        },
                        "SecondaryIdentification": {
                          "maxLength": 34,
                          "minLength": 1,
                          "type": "string",
                          "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination)."
                        }
                      },
                      "description": "Provides the details to identify the beneficiary account."
                    },
                    "SupplementaryData": {
                      "type": "object",
                      "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "Links": {
            "required": [
              "Self"
            ],
            "type": "object",
            "properties": {
              "Self": {
                "type": "string",
                "format": "uri"
              },
              "First": {
                "type": "string",
                "format": "uri"
              },
              "Prev": {
                "type": "string",
                "format": "uri"
              },
              "Next": {
                "type": "string",
                "format": "uri"
              },
              "Last": {
                "type": "string",
                "format": "uri"
              }
            },
            "additionalProperties": false,
            "description": "Links relevant to the payload"
          },
          "Meta": {
            "title": "MetaData",
            "type": "object",
            "properties": {
              "TotalPages": {
                "type": "integer",
                "format": "int32"
              },
              "FirstAvailableDateTime": {
                "type": "string",
                "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                "format": "date-time"
              },
              "LastAvailableDateTime": {
                "type": "string",
                "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                "format": "date-time"
              }
            },
            "additionalProperties": false,
            "description": "Meta Data relevant to the payload"
          }
        },
        "additionalProperties": false
      },
      "AccountsAccountIdStanding-ordersGet400ApplicationJsonResponse": {
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "minProperties": 1,
              "required": [
                "ErrorCode",
                "Message"
              ],
              "type": "object",
              "properties": {
                "ErrorCode": {
                  "type": "string",
                  "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                  "x-namespaced-enum": [
                    "UK.OBIE.Field.Expected",
                    "UK.OBIE.Field.Invalid",
                    "UK.OBIE.Field.InvalidDate",
                    "UK.OBIE.Field.Missing",
                    "UK.OBIE.Field.Unexpected",
                    "UK.OBIE.Header.Invalid",
                    "UK.OBIE.Header.Missing",
                    "UK.OBIE.Reauthenticate",
                    "UK.OBIE.Resource.ConsentMismatch",
                    "UK.OBIE.Resource.InvalidConsentStatus",
                    "UK.OBIE.Resource.InvalidFormat",
                    "UK.OBIE.Resource.NotFound",
                    "UK.OBIE.Rules.AfterCutOffDateTime",
                    "UK.OBIE.Rules.DuplicateReference",
                    "UK.OBIE.Signature.Invalid",
                    "UK.OBIE.Signature.InvalidClaim",
                    "UK.OBIE.Signature.Malformed",
                    "UK.OBIE.Signature.Missing",
                    "UK.OBIE.Signature.MissingClaim",
                    "UK.OBIE.Signature.Unexpected",
                    "UK.OBIE.UnexpectedError",
                    "UK.OBIE.Unsupported.AccountIdentifier",
                    "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
                    "UK.OBIE.Unsupported.Currency",
                    "UK.OBIE.Unsupported.Frequency",
                    "UK.OBIE.Unsupported.LocalInstrument",
                    "UK.OBIE.Unsupported.Scheme"
                  ]
                },
                "Message": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field"
                },
                "Path": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency"
                },
                "Url": {
                  "type": "string",
                  "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false,
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      },
      "AccountsAccountIdStanding-ordersGet403ApplicationJsonResponse": {
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "minProperties": 1,
              "required": [
                "ErrorCode",
                "Message"
              ],
              "type": "object",
              "properties": {
                "ErrorCode": {
                  "type": "string",
                  "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                  "x-namespaced-enum": [
                    "UK.OBIE.Field.Expected",
                    "UK.OBIE.Field.Invalid",
                    "UK.OBIE.Field.InvalidDate",
                    "UK.OBIE.Field.Missing",
                    "UK.OBIE.Field.Unexpected",
                    "UK.OBIE.Header.Invalid",
                    "UK.OBIE.Header.Missing",
                    "UK.OBIE.Reauthenticate",
                    "UK.OBIE.Resource.ConsentMismatch",
                    "UK.OBIE.Resource.InvalidConsentStatus",
                    "UK.OBIE.Resource.InvalidFormat",
                    "UK.OBIE.Resource.NotFound",
                    "UK.OBIE.Rules.AfterCutOffDateTime",
                    "UK.OBIE.Rules.DuplicateReference",
                    "UK.OBIE.Signature.Invalid",
                    "UK.OBIE.Signature.InvalidClaim",
                    "UK.OBIE.Signature.Malformed",
                    "UK.OBIE.Signature.Missing",
                    "UK.OBIE.Signature.MissingClaim",
                    "UK.OBIE.Signature.Unexpected",
                    "UK.OBIE.UnexpectedError",
                    "UK.OBIE.Unsupported.AccountIdentifier",
                    "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
                    "UK.OBIE.Unsupported.Currency",
                    "UK.OBIE.Unsupported.Frequency",
                    "UK.OBIE.Unsupported.LocalInstrument",
                    "UK.OBIE.Unsupported.Scheme"
                  ]
                },
                "Message": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field"
                },
                "Path": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency"
                },
                "Url": {
                  "type": "string",
                  "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false,
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      },
      "AccountsAccountIdStanding-ordersGet500ApplicationJsonResponse": {
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "minProperties": 1,
              "required": [
                "ErrorCode",
                "Message"
              ],
              "type": "object",
              "properties": {
                "ErrorCode": {
                  "type": "string",
                  "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                  "x-namespaced-enum": [
                    "UK.OBIE.Field.Expected",
                    "UK.OBIE.Field.Invalid",
                    "UK.OBIE.Field.InvalidDate",
                    "UK.OBIE.Field.Missing",
                    "UK.OBIE.Field.Unexpected",
                    "UK.OBIE.Header.Invalid",
                    "UK.OBIE.Header.Missing",
                    "UK.OBIE.Reauthenticate",
                    "UK.OBIE.Resource.ConsentMismatch",
                    "UK.OBIE.Resource.InvalidConsentStatus",
                    "UK.OBIE.Resource.InvalidFormat",
                    "UK.OBIE.Resource.NotFound",
                    "UK.OBIE.Rules.AfterCutOffDateTime",
                    "UK.OBIE.Rules.DuplicateReference",
                    "UK.OBIE.Signature.Invalid",
                    "UK.OBIE.Signature.InvalidClaim",
                    "UK.OBIE.Signature.Malformed",
                    "UK.OBIE.Signature.Missing",
                    "UK.OBIE.Signature.MissingClaim",
                    "UK.OBIE.Signature.Unexpected",
                    "UK.OBIE.UnexpectedError",
                    "UK.OBIE.Unsupported.AccountIdentifier",
                    "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
                    "UK.OBIE.Unsupported.Currency",
                    "UK.OBIE.Unsupported.Frequency",
                    "UK.OBIE.Unsupported.LocalInstrument",
                    "UK.OBIE.Unsupported.Scheme"
                  ]
                },
                "Message": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field"
                },
                "Path": {
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string",
                  "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency"
                },
                "Url": {
                  "type": "string",
                  "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false,
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      }
    }
  }
}