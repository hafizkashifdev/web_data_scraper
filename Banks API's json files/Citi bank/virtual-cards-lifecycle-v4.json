{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Virtual Cards Life Cycle Management",
    "description": "Create, modify or cancel a Virtual Card Account.",
    "x-ibm-name": "vca-life-cycle-management"
  },
  "host": "$(catalog.host)",
  "schemes": [
    "https"
  ],
  "description": "Using this API we can create, modify, cancel virtual cards",
  "paths": {
    "/create": {
      "post": {
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Create a virtual card and set its associated spending controls, custom reference data and payment beneficiaries. It allows you to place a a virtual card account creation request for secure purchasing, with increased transaction-Level controls, limit card number use by MCC, amounts, dates and even specific suppliers.<br/><br/>Note: In a Create VCA Request call for a Mastercard program, you must specify at least one instance of whichever velocity control the purchase template that is setup in the VCA application contains. Other controls are optional in the API request to Citi, even if they are included in the purchase template that is setup in the VCA application. If you indicate that you would like to use an optional control by sending the enable flag as TRUE, you have to specify all parameters listed in the control section unless otherwise specified, else, the API request will be rejected.",
        "summary": "Create Virtual Card Accounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Oauth token",
            "type": "string",
            "required": true
          },
          {
            "name": "country",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "country of the Client"
          },
          {
            "name": "region",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "region of the client(Apac/EMEA/NAM)"
          },
          {
            "name": "req-sys-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Unique id to identify the particular request.<br> `Format`: UUID <br> `Example`: 123d837e-958a-4e9f-bc97-4843ec948123"
          },
          {
            "name": "request-body",
            "in": "body",
            "required": true,
            "description": "Request body description",
            "schema": {
              "$ref": "#/definitions/Vca-Create-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Virtual Card response",
            "schema": {
              "$ref": "#/definitions/Vca-Create-Response"
            }
          },
          "400": {
            "description": "Invalid Create Virtual Card request",
            "schema": {
              "$ref": "#/definitions/Vca-Create-Failure-Response"
            }
          },
          "401": {
            "description": "Unauthorized Create Virtual Card request",
            "schema": {
              "$ref": "#/definitions/Vca-Create-Failure-Response"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/Vca-Create-Failure-Response"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Vca-Create-Failure-Response"
            }
          }
        }
      }
    },
    "/modify": {
      "post": {
        "operationId": "modify",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Virtual Card Accounts",
        "description": "Modify a virtual card and set its associated spending controls, custom reference data and payment beneficiaries.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Oauth token",
            "type": "string",
            "required": true
          },
          {
            "name": "country",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "country of the Client"
          },
          {
            "name": "region",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "region of the client(Apac/EMEA/NAM)"
          },
          {
            "name": "req-sys-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Unique id to identify the particular request.<br> `Format`: UUID <br> `Example`: 123d837e-958a-4e9f-bc97-4843ec948123"
          },
          {
            "name": "request-body",
            "in": "body",
            "required": true,
            "description": "Request body description",
            "schema": {
              "$ref": "#/definitions/Vca-Modify-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modify Virtual Card response",
            "schema": {
              "$ref": "#/definitions/Vca-Modify-Response"
            }
          },
          "400": {
            "description": "Invalid Modify Virtual Card request",
            "schema": {
              "$ref": "#/definitions/Vca-Modify-Failure-Response"
            }
          },
          "401": {
            "description": "Unauthorized Modify Virtual Card request",
            "schema": {
              "$ref": "#/definitions/Vca-Modify-Failure-Response"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/Vca-Modify-Failure-Response"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Vca-Modify-Failure-Response"
            }
          }
        }
      }
    },
    "/cancel": {
      "post": {
        "operationId": "cancel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Cancel Virtual Card Accounts",
        "description": "Cancel a virtual card when it is no longer needed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Oauth token",
            "type": "string",
            "required": true
          },
          {
            "name": "country",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "country of the Client"
          },
          {
            "name": "region",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "region of the client(Apac/EMEA/NAM)"
          },
          {
            "name": "req-sys-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client Unique id to identify the particular request.<br> `Format`: UUID <br> `Example`: 123d837e-958a-4e9f-bc97-4843ec948123"
          },
          {
            "name": "request-body",
            "in": "body",
            "required": true,
            "description": "Request body description",
            "schema": {
              "$ref": "#/definitions/Vca-Cancel-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancel Virtual Card response",
            "schema": {
              "$ref": "#/definitions/Vca-Cancel-Response"
            }
          },
          "400": {
            "description": "Invalid Cancel Virtual Card request",
            "schema": {
              "$ref": "#/definitions/Vca-Cancel-Failure-Response"
            }
          },
          "401": {
            "description": "Unauthorized Virtual Card request",
            "schema": {
              "$ref": "#/definitions/Vca-Cancel-Failure-Response"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/Vca-Cancel-Failure-Response"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Vca-Cancel-Failure-Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Vca-Cancel-Request": {
      "type": "object",
      "title": "VcaCancelRequest",
      "required": [
        "vcaIds",
        "programId",
        "messageId"
      ],
      "properties": {
        "vcaIds": {
          "type": "array",
          "description": "Unique Identifier for each Virtual card request.",
          "items": {
            "type": "string"
          }
        },
        "virtualCardAccountNumber": {
          "type": "string",
          "description": "The virtual card account number for which the modifications are requested."
        },
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration."
        }
      }
    },
    "Error-Message": {
      "type": "object",
      "title": "ErrorMessage",
      "properties": {
        "errorCode": {
          "type": "string",
          "enum": [
            "EVB0014",
            "EVB0010",
            "EVB0017",
            "EVB0018",
            "EVB0020",
            "EVB0030",
            "EVB0033",
            "EVB0042",
            "EVB0044",
            "EVB0037",
            "EVB0032",
            "EVB0040",
            "EVB0045",
            "EVB0046",
            "EVB0050",
            "EVB0053",
            "EVB0060",
            "EVB0061",
            "EVB0062",
            "EVB0063",
            "EVB0065",
            "EVB0066",
            "EVB0070",
            "EVB0071",
            "EVB0099",
            "EVB0104",
            "EVB0106",
            "EVB0107",
            "EVB0110",
            "EVB0113",
            "EVB0114",
            "EVB0112",
            "EVB0120",
            "EVB0121",
            "EVB0124",
            "EVB0125",
            "EVB0126",
            "EVB0133",
            "EVB0136",
            "EVB0137",
            "EVB0138",
            "EVB0140",
            "EVB0141",
            "EVB0143",
            "EVB0151",
            "EVB0163",
            "EVB0170",
            "EVB0201",
            "EVB0202",
            "EVB0213",
            "EVB0214",
            "EVB0215",
            "EVB0216",
            "EVB0222",
            "EVB0224",
            "EVB0241",
            "EVB0243",
            "EVB0245",
            "EVB0251",
            "EVB0252",
            "EVB0244",
            "EVB0246",
            "EVB0247",
            "EVB0248",
            "EVB0250",
            "EVB0253",
            "EVB0254",
            "EVB0255",
            "EVB0256",
            "EVB0257",
            "EVB0258",
            "EVB0025",
            "EVB0261",
            "EVB0262",
            "EVB0264",
            "EVB0265",
            "EVB0267",
            "EVB0270",
            "EVB0271",
            "EVB0272",
            "EVB0273",
            "EVB0290",
            "EVB0350",
            "EVB0351",
            "EVB0352",
            "EVB0353",
            "EVB0354",
            "EVB0355",
            "EVB0356",
            "EVB0357",
            "EVB0358",
            "EVB0359",
            "EVB0360",
            "EVB0361",
            "EVB0362",
            "EVB0363",
            "EVB0364",
            "EVB0365",
            "EVB0366",
            "EVB0367",
            "EVB0368",
            "EVB0369",
            "EVB0370",
            "EVB0371",
            "EVB0372",
            "EVB0373",
            "EVB0374",
            "EVB0375",
            "EVB0378",
            "EVB0381",
            "EVB0401",
            "EVB0404",
            "EVB0430",
            "EVB0431",
            "EVB0432",
            "EVB0435",
            "EVB0436",
            "EVB0437",
            "EVB0438",
            "EVB0406",
            "EVB0440",
            "EVB0441",
            "EVB0530",
            "EVB0607",
            "EVB0211",
            "EVB0212",
            "EVB0219",
            "EVB0230",
            "EVB0231",
            "EVB0281",
            "EVB1185",
            "EVB1300",
            "EVB1301",
            "EVB1302",
            "EVB1303",
            "EVB1304",
            "EVB1305",
            "EVB1306",
            "EVB1307",
            "EVB1308",
            "EVB1309",
            "EVB1310",
            "EVB1311",
            "EVB1312",
            "EVB0260",
            "EVB1314",
            "EVB1315",
            "EVB0162",
            "EVB0236",
            "EVB0903",
            "EVB0902",
            "EVB0611",
            "EVB0612",
            "EVB0618",
            "EVB0619",
            "EVB0616",
            "EVB0237",
            "EVB0217",
            "EVB0238",
            "EVB0218",
            "EVB0600",
            "EVB0232",
            "EVB0235",
            "EVB0233",
            "EVB0011",
            "ERS0087",
            "GRC0001",
            "GRC0002",
            "GRC0003",
            "GRC0004",
            "GRC0005",
            "GRC0006",
            "GRC0007",
            "GRC0009",
            "GRC0011",
            "GRC0012",
            "GRC0014"
          ]
        },
        "errorDescription": {
          "type": "string",
          "description": "The error description that corresponds to error code when there is any error occurred while retrieving the trsansaction.\n\n\n\n  * `EVB0010` - vcaId size must be between 1 and 19 digits\n\n  * `EVB0014` - vcaId value must be a numeric\n  * `EVB0017` - vcaID is empty or null\n  * `EVB0018` - No previously approved vcaID is present\n  * `EVB0020` - vcaID and programId combination is not present\n  * `EVB0030` - FundingSourceId cannot be modified\n  * `EVB0033` - FundingSourceId cannot be null\n  * `EVB0042` -  FundingSourceName cannot be null\n  * `EVB0044` - Funding source Id|Funding source Name|Template Id is not required for cancel request\n  * `EVB0037` - fundingSourceId is mandatory\n  * `EVB0032` - fundingSourceId value must be a numeric\n  * `EVB0040` - fundingSourceName is mandatory\n  * `EVB0045` - Funding source Id|Funding source Name|Template Id|PaymentBeneficiaryId cannot be modified\n  * `EVB0046` - FundingSourceName cannot be modified\n  * `EVB0050` - paymentBeneficiaryId cannot be modified\n  * `EVB0053` - paymentBeneficiaryEmails must be alphanumeric and have value with proper email \n    format: \\\".\\\" and \\\"@\\\"\n  * `EVB0060` - expiryDate is mandatory\n  * `EVB0061` - expiryDate length exceeds max length allowed of: 6 characters\n  * `EVB0062` - TimeZone is mandatory if any of the following controls are set to true: Validity Period, Aging Velocity (MasterCard only), Curfew Control, Time of Day Control\n  * `EVB0063` - timeZone field has an invalid UTC offset time zone format\n  * `EVB0065` - currencyCode cannot be null\n  * `EVB0066` - ClientId and programId combination is not valid\n  * `EVB0070` - templateId cannot be modified\n  * `EVB0071` - templateId cannot be null\n  * `EVB0099` - currencyCode length allowed is:  3 digits\n  * `EVB0104` - currencyType must have value which matches regex: M|B|m|b\n  * `EVB0106` - minAmount is mandatory if enableAmountRangeControl is true\n  * `EVB0107` - maxAmount is mandatory if enableAmountRangeControl is true\n  * `EVB0110` - startTime value must have valid format: HH:MM - H (0,1,2) | H (0-9) : M (0-9) | M (0-9)\n  * `EVB0113` - startTime is mandatory if CurfewControl is true\n  * `EVB0114` - endTime is mandatory if CurfewControl is true\n  * `EVB0112` - endTime value must have valid format: HH:MM - H (0,1,2) | H (0-9) : M (0-9) | M (0-9)\n  * `EVB0120` - validityEndDate value must have valid format: YYYY-MM-DD\n  * `EVB0121` - validityStartDate value must have valid format: YYYY-MM-DD\n  * `EVB0124` - timeZone is mandatory if Validity Period control is set to true\n  * `EVB0125` - validityStartDate is mandatory if ValidityPeriodControl is true\n  * `EVB0126` - validityEndDate is mandatory if ValidityPeriodControl is true\n  * `EVB0133` - VelocityControlType-periodType is mandatory.\n  * `EVB0136` - currencyType is mandatory\n  * `EVB0137` - spendVelocityControl-cumulativeSpendLimit is mandatory\n  * `EVB0138` - spendVelocityControl-maxAuth is mandatory\n  * `EVB0140` - periodType length exceeds max length allowed of: 1 character\n  * `EVB0141` - periodType is mandatory if enablespendvelocity is true\n  * `EVB0143` - periodType is mandatory \n  * `EVB0151` - Cannot add any new controls to a previosuly created VCA\n  * `EVB0163` - authorizationHoldDays is mandatory if agingVelocityControl is true\n  * `EVB0170` - amountLimit is mandatory if TransactionLimitControl is true\n  * `EVB0201` - We were unable to process your request. Please try again, or contact Citi support if you have any further questions or comments.\n  * `EVB0202` - We were unable to process your request. Please try again, or contact Citi support if you have any further questions or comments\n  * `EVB0213` - virtualCardAccountNumber is Invalid\n  * `EVB0214` - Validity Period Control must be set to true and validityStartDate and validityEndDate are mandatory if periodType = 3\n  * `EVB0215` - Validity Period Control must be set to true and validityStartDate and  validityEndDate are mandatory if periodType = C\n  * `EVB0216` - VcaId Should be a Valid Long Value\n  * `EVB0222` - messageId cannot be null\n  * `EVB0224` - messageId size must be between 28 and 36 characters\n  * `EVB0241` - Transaction Not Found for the respective client id and message id on grace.\n  * `EVB0243` - Program Id is not present\n  * `EVB0245` - currencyCode value must be numeric [0-9]\n  * `EVB0251` - ExpiryDate is not required\n  * `EVB0252` - messageId should be alphanumeric without special characters\n  * `EVB0254` - FundingSourceName size must be between 1 and 100 characters\n  * `EVB0244` - TemplateId Should be a Valid Long Value\n  * `EVB0246` - paymentBeneficiaryId cannot be null\n  * `EVB0247` - paymentBeneficiaryId size must be between 1 and 19 digits\n  * `EVB0248` - paymentBeneficiaryId Should be a Valid Long Value\n  * `EVB0250` - FundingSourceName is not required\n  * `EVB0253` - mccGrouping should not contain multiple values\n  * `EVB0255` - customReference size should be between 1 and 29\n  * `EVB0256` - customReferenceValue should be between 1 and 100 characters\n  * `EVB0257` - vcaId should not be null or empty\n  * `EVB0258` - customReferenceLabel should be between 1 and 50 characters\n  * `EVB00259`- expiryDate must have format: MMYYYY\n  * `EVB0261` - cardAcceptorId length exceeds max length allowed of 15 character\n  * `EVB0262` - weekdaysEffective is mandatory if enableCurfewControl is true\n  * `EVB0264` - spendVelocityControl is Mandatory \n  * `EVB0265` - mccGrouping cannot be null or empty\n  * `EVB0267` - ProgramId should be alphanumeric without special characters\n  * `EVB0270` - Not allowed to modify when control indicator is disabled \n  * `EVB0271` - ExpiryDate field cannot be NULL\n  * `EVB0272` - Both Aging and Spend Velocity Control cannot be enabled\n  * `EVB0273` - Either Aging or Spend Velocity Control should be enabled\n  * `EVB0290` - Bulk Cancellation is not Allowed for visa\n  * `EVB0350` - virtualCardAccountNumber length should be 16 characters\n  * `EVB0351` - virtualCardAccountNumber is Mandatory\n  * `EVB0352` - FundingSourceId is Invalid. FundingSourceId value should be a valid long value and size must be between 1 and 19 digits\n  * `EVB0352` - FundingSourceId is Invalid. FundingSourceId value should be alphanumeric and size must be between 1 and 19 digits\n  * `EVB0353` - customReferenceValue should be between 1 and 80 characters\n  * `EVB0354` - AmountRangeControl-minAmount length exceed max length allowed is:  14 characters\n  * `EVB0355` - AmountRangeControl-maxAmount length exceed max length allowed is:  14 characters\n  * `EVB0356` - minAmount & maxAmount values must be a numeric positive value with a maximum of 2 decimals digits\n  * `EVB0357` - ProgramId must be numeric\n  * `EVB0358` - programId value must be between 1 and 19 digits\n  * `EVB0359` - programId value must be between 1 and 25 digits\n  * `EVB0360` - Invalid JSON input\n  * `EVB0361` - Invalid JSON input\n  * `EVB0362` - Invalid maxAuth format. maxAuth value cannot exceed 8 digits\n  * `EVB0363` - cumulativeSpendLimit max field length is 12 digits with 10 digits to the left of the decimal and 2 digits to the right of the decimal\n  * `EVB0364` - transactionLimitControl-amount value must be a numeric positive value with a maximum of 2 decimals digits\n  * `EVB0365` - periodType is mandatory if enableSpendVelocity is true\n  * `EVB0366` - resetDay value must an integer between 1-28\n  * `EVB0367` - startTime is mandatory if Time Of Day Control is true\n  * `EVB0368` - \\\"weekdayEffective must have value which matches regex: SUN|MON|TUE|WED|THU|FRI|SAT\\\"\n  * `EVB0369` - cumulativeSpendLimit is mandatory if Aging Velocity Control is set to true\n  * `EVB0370` - countryCodes is required if Geography Control is set to true\n  * `EVB0371` - allowed field is required if Geography Control is set to true\n  * `EVB0372` - merchantId is mandatory if Merchant ID Control is true\n  * `EVB0373` - merchantId length exceeds max length allowed of 15 characters\n  * `EVB0374` - acquirerId is mandatory if Merchant ID Control is true\n  * `EVB0375` - acquirerId length exceeds max length allowed of 15 characters\n  * `EVB0378` - allowed field is required if Merchant ID Control is set to true\n  * `EVB0381` - AmountRangeControl-minAmount is greater than maxAmount\n  * `EVB0401` - The value is not present in the predefined list for custom field named field name\n  * `EVB0404` - The value has non numeric characters for custom field named: [field]\n  * `EVB0430` - The Amount must be greater than or equal to the Cumulative Limit\n  * `EVB0431` - The Amount must be less than the max amount range\n  * `EVB0432` - The Amount Range Control was missing from the request\n  * `EVB0435` - There was a problem retrieving the RCN Data with rcnId : [rcnID]\n  * `EVB0436` - There was a problem assigning rules to your VCN Request\n  * `EVB0437` - Invalid date {date given}.[valid date format YYYY-MM-DD] \n  * `EVB0438` - From date should be before to date.\n  * `EVB0406` - The Validity Control was missing from the request\n  * `EVB0440` - There was a problem retrieving the RCN Data with rcnId:\n  * `EVB0441` - An invalid velocity control field exists in the request. field name:\n  * `EVB0442` - There was a problem getting the Card Image Data\n  * `EVB0443` - There was a problem retrieving the RCN Data with rcnId : \n  * `EVB0427` - There was a problem getting the DataSources for the given issuer  \n  * `EVB0445` - There was a problem getting the issuer id for the company id provided.  \n  * `EVB0446` - There was a problem getting RCN details.  \n  * `EVB0447` - There was a problem getting the custom data fields for the given request id \n  * `EVB0448` - There was a problem getting the supplier email address by a supplier id  \n  * `EVB0448` - There was a problem getting the supplier email address by a supplier id \n  * `EVB0449` - There was a problem getting the suppliers for the company ID provided  \n  * `EVB0450` -  The Merchant Amount Control was missing from the request \n  * `EVB0439` - An invalid geography control field exists in the request. field name: \n  * `EVB0452` - Negate is the only supported attribute; Merchant and Acquirer details should be specified in Supplier Setup  \n  * `EVB0453` - The purchase request rules must have unique rule names  \n  * `EVB0454` - Invalid or inactive supplier.  \n  * `EVB0455` - An invalid travel control field exists in the request. field name:  \n  * `EVB0456` - An invalid time of day control field exists in the request. field name:  \n  * `EVB0457` - An invalid transaction limit control field exists in the request. field name:\n  * `EVB0426` - An invalid validity control field exists in the request. field name:  \n  * `EVB0441` - An invalid velocity control field exists in the request. field name:  \n  * `EVB0458` - Only one Merchant Id control is allowed \n  * `EVB0459` - The specified supplier has not been configured to use the Merchant ID control\n  * `EVB0460` - Cannot have multiple velocity controls in the request with the same period.  \n  * `EVB0461` - A request submitter is not valid user  \n  * `EVB0462` - There was not a Purchase Template with the given Id, Id:  \n  * `EVB0444` - The request's Purchase Template is not associated with the active auto approve purchase group \n  * `EVB0464` - There was a problem saving the custom data fields for the allocate vcn request \n  * `EVB0465` - There was a problem getting the Travel Agency Detail for the request \n  * `EVB0466` - There was a problem getting the Tolerances for the given corpId  \n  * `EVB0470` - There was a problem getting the Template CDF to get the order \n  * `EVB0468` - There was a problem getting the Air Detail for the request  \n  * `EVB0469` - There was a problem getting the Vehicle Rental Detail for the request  \n  * `EVB0472` - There was a problem getting the companies for the given issuer id and corp number \n  * `EVB0471` - There was a problem getting the supplier by a supplier name  \n  * `EVB0477` - There was a problem getting the Lodging Summary for the request  \n  * `EVB0473` - There was a problem getting the VCN Request \n  * `EVB0474` - There was a problem getting the Rail Detail for the request  \n  * `EVB0475` - There was a problem getting the CDF to get the order \n  * `EVB0476` - There was a problem getting the real cards for the company entered  \n  * `EVB0524` - Date range should be same month. \n  * `EVB0478` -  There was a problem in deleting a vcn.  \n  * `EVB0479` - The maximum number of records has been exceeded. \n  * `EVB0480` - There was a problem TRYING TO Sync Card Currency  \n  * `EVB0481` -  There was a problem saving the custom data fields for the update request \n  * `EVB0482` - There was a problem saving the vcn request  \n  * `EVB0483` - There was a problem updating the vcn request  \n  * `EVB0484` -  Invalid Expiry Date Requested  \n  * `EVB0485` -  Unable to correctly analyze a purchase request which did not have required controls present: \n  * `EVB0528` - There was a problem allocating the vcn \n  * `EVB0486` - Purchase Request(s) could not be approved  \n  * `EVB0487` - Purchase Request(s) could not be canceled  \n  * `EVB0513` - Message ID is not unique. \n  * `EVB0516` - Request could not be processed successfully. \n  * `EVB0515` - Invalid Buyer \n  * `EVB0516` - Request could not be processed successfully. \n  * `EVB0517` - Invalid Web Service Method \n  * `EVB0518` - Proxy number provided in the request is not active. \n  * `EVB0519` - Invalid visa account number \n  * `EVB0520` - Proxy number length should be between 1 and 19 \n  * `EVB0521` - Proxy number contains invalid characters \n  * `EVB0522` - Start Date should not be more than 10 characters \n  * `EVB0523` - Start Date is invalid. Valid date format is YYYY-MM-DD \n  * `EVB0525` - End Date is mandatory \n  * `EVB0526` - End Date should not be more than 10 characters \n  * `EVB0527` - End Date is invalid. Valid date format is YYYY-MM-DD \n  * `EVB0528` - End Date cannot be a past date \n  * `EVB0529` - Rule Code is not valid \n  * `EVB516`  - cumulativeSpendLimit value must be numeric \n  * `EVB517`  - cumulativeSpendLimit value must be numeric \n  * `EVB0530` - Sequence number should contain only numbers. \n  * `EVB0531` - OverrideCode contains invalid characters \n  * `EVB0532` - OverrideCode should not be more than 33 characters. \n  * `EVB0531` - OverrideValue contains invalid characters \n  * `EVB0533` - OverrideValue should not be more than 10 characters \n  * `EVB0559` - End Date should not be less than Start Date \n  * `EVB0535` - Sequence number should be within 0 to 999 range. \n  * `EVB0536` - Rule Code is mandatory. Please provide valid rule code \n  * `EVB0537` - Rule Code cannot contain special characters. Please provide valid rule code \n  * `EVB0538` - Override code is mandatory \n  * `EVB0539` - Override Value is mandatory \n  * `EVB0540` - Action is mandatory. Action code should be A/U/D. \n  * `EVB0560` - Invalid Action. Action code should be A/U/D. \n  * `EVB0542` - Request could not be processed successfully. Failed to generate Token. \n  * `EVB0543` - Add payment control could not be processed successfully. \n  * `EVB0544` - Account number should be blank.\n  * `EVB0545` - Atlease one requisition rule is mandaotry. \n  * `EVB0546` - Atlease one override rule is mandatory. \n  * `EVB0547` - No Requisition card details found. \n  * `EVB0548` - equence number is mandatory \n  * `EVB0549` - Account Number is Mandatory \n  * `EVB0550` - Number of cards count should be 1. \n  * `EVB0551` - Start Date is Mandatory. \n  * `EVB0552` - The number of accounts you have requested exceeds the maximum allowed limit \n  * `EVB0553` - Overrides rule size exceeds maximum Limit \n  * `EVB0554` - The pseudo account type set for the SUA proxy is not matching the pseudo account type set up for the buyer. \n  * `EVB0555` - Currency code passed in the request is not configured as one of the allowed currency for the buyer. \n  * `EVB0556` - The startRange and endRange overrides are mandatory for the Other MCG rule. \n  * `EVB0557` - Rules can have a maximum of 25 override values \n  * `EVB0558` - Atleast one RequisitionDetail is mandatory \n  * `EVB0607` - At least one spend control is mandatory \n  * `EVB0211` - validityStartDate invalid format. MM value must be less than or equal to 12  and DD value must be less than or equal to 31 \n  * `EVB0212` - validityEndDate invalid format. MM value must be less than or equal to 12   and DD value must be less than or equal to 31 \n * `EVB0219` - expiryDate month and year cannot be a past or current date \n  * `EVB0230` - Invalid countryCode format. countryCode value cannot exceed 3 characters \n  * `EVB0231` - maxAuth is mandatory if enableSpendVelocityControl is set to True \n  * `EVB0281` - maxAuth must be a valid long value with a maximum of 10 digits \n  * `EVB1185` - max size supported for purchaseRequestIds is : 50 \n  * `ERS0087` - Duplicate message id provided for VCA creation. Please call getVCADetails with original create message id to get vca details. \n * `GRC0001` - We have encountered an error and couldn't receive your request. Please try again, or contact Citi support if you have any further questions or comments \n  * `GRC0002` - Client ID is missing in the request header \n  * `GRC0003` - Contry code is not available in the request \n  * `GRC0004` - Region ID is not available in the request \n  * `GRC0005` - We have encountered an error and couldn't receive your request. Please try again, or contact Citi support if you have any further questions or comments \n  * `GRC0006` - We have encountered an error and couldn't receive your request. Please try again, or contact Citi support if you have any further questions or comments \n  * `GRC0007` - Client requested MediaType is not supported. \n  * `GRC0009` - We have encountered an error and couldn't receive your request. Please try again, or contact Citi support if you have any further questions or comments \n  * `GRC0011` - Client ID and/or Country and/or region id is missing in Client Onboard Configuration setup. Contact Citi support. \n  * `GRC0012` - Necessary header value is missing \n  * `GRC0003` - Invalid JSON Input \n  * `GRC0014` - We have encountered an error and couldn't receive your request. Please try again, or contact Citi support if you have any further questions or comments\n  * `EVB1300` - Amount range control is included in the request, but this control is not configured within   the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1301` - Curfew control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1302` - Geography control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1303` - Merchant amount control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1304` - Merchant ID control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1305` - Time of day control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1306` - Transaction limit control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1307` - Validity period control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1308` - Aging velocity control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1309` - Velocity control is included in the request, but this control is not configured within the Virtual Card Purchase Template that is included in the request. Please configure this control in the Purchase Template \n  * `EVB1310` - Invalid mccRange range format. In mccRange the min value must be less than the max value.(eg: 1111-9999).\n  * `EVB1311` - mccgAllowed is required if the mccGrouping or mccRange field is populated\n  * `EVB1312` - Invalid acquirerId format. acquirerId must be an numeric value\n  * `EVB0260` - cardAccepterId is required if merchantIdControl is enabled\n  * `EVB1314` - Invalid cardAccepterId format. cardAccepterId must be an alphanumeric value\n  * `EVB1315` - Invalid mccRange range format. mccRange should consist of a min and max four-digit MCC value with the format: XXXX-XXXX\n  * `EVB0162` - currencyType must have value which matches regex: M|B|m|b\n  * `EVB0236` - Invalid contryCode, countryCode doesn\u2019t exist\n  * `EVB0605` - fundingSourceId length should be between 1 and 19\n  * `EVB0903` -\tAtleast one Spend velocity control is required, When enableSpendVelocity is true\n  * `EVB0902` -\tFor VISA, Only one Spend velocity control should be present\n  * `EVB0611` -\tInvalid periodType value. periodType can contain a value of either 1, 2, or 3\n  * `EVB0612` -\tresetDay is mandatory if periodType = 1\n  * `EVB0618` -\tAmount Range Control minAmount field length is 12 digits with 10 digits to the left of the decimal and 2 digits to the right of the decimal\n  * `EVB0619` -\tAmount Range Control maxAmount field length is 12 digits with 10 digits to the left of the decimal and 2 digits to the right of the decimal\n  * `EVB0616` -\tvalidityPeriodControl is Mandatory\n  * `EVB0237` -\tThe date specified in validityStartDate does not exist\n  * `EVB0217` -\tvalidityStartDate cannot be a past date\n  * `EVB0238` -\tThe date specified in validityEndDate does not exist\n  * `EVB0218` -\tvalidityEndDate cannot be a past date\n  * `EVB0600` -\tvalidityStartDate should be before validityEndDate\n  * `EVB0232` -\tweekdayEffective is mandatory if TimeOfDayControl is true\n  * `EVB0235` -\tstartTime value cannot exceed there questedend Timevalue\n  * `EVB0233` -\tendTime is mandatory if TimeOfDayControl is true\n  * `EVB0011` -\tvcaId have value which matches regex:[0-9]\n"
        }
      }
    },
    "Vca-Cancel-Response": {
      "type": "object",
      "title": "VcaCancelResponse",
      "properties": {
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration."
        },
        "vcaResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vca-Response"
          }
        }
      }
    },
    "Vca-Response": {
      "type": "object",
      "title": "VcaResponse",
      "properties": {
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "vcaId": {
          "type": "number",
          "description": "A reference number that uniquely identifies the virtual card account."
        }
      }
    },
    "Vca-Cancel-Failure-Response": {
      "type": "object",
      "title": "VcaCancelFailureResponse",
      "properties": {
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration."
        },
        "vcaResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vca-Failure-Response"
          }
        }
      }
    },
    "Vca-Failure-Response": {
      "type": "object",
      "title": "VcaFailureResponse",
      "properties": {
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "vcaId": {
          "type": "number",
          "description": "A reference number that uniquely identifies the virtual card account."
        },
        "errorMessage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error-Message"
          }
        }
      }
    },
    "Custom-Reference": {
      "type": "object",
      "title": "CustomReference",
      "properties": {
        "customReferenceValue": {
          "type": "string",
          "description": "Specifies the label of a custom reference field.Mastercard: All field labels included in the template used for this virtual card account request should be included."
        },
        "customReferenceLabel": {
          "type": "string",
          "description": "Specifies the value of a custom reference field. Mastercard: If the template used for this VCA request identifies a given custom reference field as required, then the value provided in this field cannot be blank."
        }
      }
    },
    "Time-Of-Day": {
      "type": "object",
      "title": "TimeOfDay",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Specifies the start time from which the virtual card account can be used on the particular day specified in weekDaysEffective."
        },
        "endTime": {
          "type": "string",
          "description": "Specifies the end time until which the virtual card account can be used on the particular day specified in weekDaysEffective."
        },
        "weekdayEffective": {
          "type": "string",
          "description": "Specifies the day applicable to the start and end times defined."
        }
      }
    },
    "Merchant-Id-Response": {
      "type": "object",
      "title": "MerchantIdResponse",
      "properties": {
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in merchantId and acquirerId are allowed or disallowed. True = values provided in merchantId and acquirerId are allowed, False = values provided in merchantId and acquirerId are not allowed"
        },
        "merchantIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Merchant-Id"
          }
        }
      }
    },
    "Merchant-Id": {
      "type": "object",
      "title": "MerchantId",
      "properties": {
        "cardAcceptorId": {
          "type": "string",
          "description": "Specifies the Card Acceptor ID that should be allowed / disallowed when transacting with the virtual card.",
          "example": "123456"
        },
        "acquirerId": {
          "type": "string",
          "description": "Specifies the Acquirer ID that should be allowed disallowed when transacting with the virtual card.",
          "example": "123456"
        }
      }
    },
    "Merchant-Id-Request": {
      "type": "object",
      "title": "MerchantIdRequest",
      "properties": {
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in merchantId and acquirerId are allowed or disallowed. True = values provided in merchantId and acquirerId are allowed, False = values provided in merchantId and acquirerId are not allowed."
        },
        "merchantIds": {
          "type": "array",
          "description": "Specifies the Merchant ID that should be allowed / disallowed when transacting with the virtual card.",
          "items": {
            "$ref": "#/definitions/Merchant-Id"
          }
        }
      }
    },
    "Spend-Velocity-Response": {
      "type": "object",
      "title": "SpendVelocityResponse",
      "properties": {
        "maxAuth": {
          "type": "number",
          "format": "long",
          "description": "Limits the number of authorizations that can be made with a VCA. Should be set to 1, if a single-use VCA is created.Specify any value larger than one for a multi-use VCA. Mastercard: Set to 0, if unlimited authorizations should be allowed. (0 is not applicable for Visa)"
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account."
        },
        "periodType": {
          "type": "string",
          "description": "Period for which the control values are valid before they reset"
        },
        "availableBalance": {
          "type": "number",
          "description": "The remaining balance available to spend on the virtual card."
        },
        "periodEndDate": {
          "type": "string",
          "description": "End date of the current period based on the periodType selected."
        }
      }
    },
    "Spend-Velocity-Request": {
      "type": "object",
      "title": "SpendVelocityRequest",
      "properties": {
        "maxAuth": {
          "type": "number",
          "format": "long",
          "description": "Limits the number of authorizations that can be made with a VCA. Should be set to 1, if a single-use VCA is created.Specify any value larger than one for a multi-use VCA. Mastercard: Set to 0, if unlimited authorizations should be allowed. (0 is not applicable for Visa)"
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account."
        },
        "periodType": {
          "type": "string",
          "description": "Period for which the control values are valid before they reset"
        }
      }
    },
    "Curfew-Time": {
      "type": "object",
      "title": "CurfewTime",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Specifies the end time until which the virtual card account can be used on the particular day specified in weekDaysEffective."
        },
        "endTime": {
          "type": "string",
          "description": "Specifies the end time until which the virtual card account can be used on the particular day specified in weekDaysEffective."
        },
        "weekdaysEffective": {
          "type": "array",
          "description": "Specifies the day applicable to the start and end times defined.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Vca-Create-Request": {
      "type": "object",
      "title": "VcaCreateRequest",
      "required": [
        "programId",
        "messageId",
        "fundingSourceId",
        "timeZone",
        "customReference"
      ],
      "properties": {
        "fundingSourceId": {
          "type": "string",
          "description": "Unique identifier of the funding source to which the virtual card rolls up"
        },
        "fundingSourceName": {
          "type": "string",
          "description": "Descriptive name of the real card to which the virtual card rolls up"
        },
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system"
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration"
        },
        "mccGrouping": {
          "type": "array",
          "description": "Limits authorizations to defined Merchant Category Codes.",
          "items": {
            "type": "string"
          }
        },
        "mccRange": {
          "type": "array",
          "description": "Limits authorizations to a defined range of Merchant Category Codes.(eg: [0000-9999, 2000-2999])",
          "items": {
            "type": "string"
          }
        },
        "mccgAllowed": {
          "type": "boolean",
          "description": "Required if the mccGrouping field is populated with either a range of MCCs, or a MCCG (ex: AUTO, AIR).Specify whether the  mccGrouping are allowed or disallowed.If true is passed, the mccGrouping are allowed.If false is passed, then the mccGrouping field are disallowed",
          "example": true
        },
        "getCardImage": {
          "type": "boolean",
          "description": "* Specifies whether cardImage field needs to be included in the response or not.\n\n\n\n* True = cardImage field will be sent in the response\n\n* False = cardImage field will not be sent in the response.\n\n* `Optional field` if not included, cardImage will be sent in the response."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code in which VCA amounts are expressed.\nMastercard currencyCode is not required if currencyType = B\"\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\".\nValue \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "currencyType": {
          "type": "string",
          "description": "Mastercard Defines the type of the VCA currency.  - Value \"B\" stands for Billing Currency which indicates that the VCA currency is equal to the billing currency of the underlying funding source.  - Value \"M\" stands for Merchant Currency which indicates that Merchant transactions are limited to the VCA currency provided in the currencyCode field.\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\". - Value \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "timeZone": {
          "type": "string",
          "description": "Defines the time zone applicable for any date or time parameters within controls set for a VCA.If any of the following controls are used, timeZone is required:Validity Period Control,Aging Velocity Control (Mastercard only), Curfew Control and Time of Day Control.It sets the specific timeframe when the account and its controls will become active."
        },
        "paymentBeneficiaryId": {
          "type": "number",
          "description": "Uniquely identifies the payment beneficiary for which the virtual card is created"
        },
        "paymentBeneficiaryEmails": {
          "type": "array",
          "description": "Lists the email addresses to which the virtual card details should be sent to.In order for emails to get delivered, the following two settings must be enabled in the VCA system:1. Allow VCN details to be emailed to this supplier2. Allow VCN requestor to manually enter a new email address when requesting a VCN",
          "items": {
            "type": "string"
          }
        },
        "customReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Custom-Reference"
          }
        },
        "templateId": {
          "type": "number",
          "description": "Identifies the template that was setup in the VCA system and that should be used for this virtual card.The template setup in the VCA system defines which controls, custom data fields and MCC groupings can be used."
        },
        "expiryDate": {
          "type": "string",
          "description": "Expiry Date of the virtual card account. "
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account."
        },
        "enableSpendVelocityControl": {
          "type": "boolean",
          "description": "Limits the frequency and total cumulative amount of authorizations performed on the VCA within a specified period. Mastercard: The control is mandatory unless Aging Velcotiy Control is used. This control cannot be used in combination with the Aging Velocity Control.Visa: Spend Velocity Control is mandatory."
        },
        "spendVelocity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spend-Velocity-Request"
          }
        },
        "enableValidityPeriodControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a specific time period. "
        },
        "validityStartDate": {
          "type": "string",
          "description": "Identifies the date from which the virtual card account can be used for transactions."
        },
        "validityEndDate": {
          "type": "string",
          "description": "Identifies the date until which the virtual card account can be used for transactions."
        },
        "enableAmountRangeControl": {
          "type": "boolean",
          "description": "Approves a transaction only if the requested amount for authorization is equal to or greater than the Minimum Amount and less than or equal to the Maximum Amount."
        },
        "maxAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "minAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the minimum allowed transaction amount."
        },
        "enableTransactionLimitControl": {
          "type": "boolean",
          "description": "Limits individual transactions to a maximum amount."
        },
        "amountLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "enableCurfewControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a single time period for each day selected."
        },
        "curfewTime": {
          "$ref": "#/definitions/Curfew-Time"
        },
        "enableTimeOfDayControl": {
          "type": "boolean",
          "description": "Limits authorization request to defined time periods each day"
        },
        "timeOfDay": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Time-Of-Day"
          }
        },
        "enableAgingVelocityControl": {
          "type": "boolean",
          "description": "Sets a cumulative amount and keeps track of the current remaining balance. Allows the requester to 'age off' approved authorization requests that have not been cleared by the merchant after a defined number of days."
        },
        "authorizationHoldDays": {
          "type": "number",
          "format": "long",
          "description": "Identifies the number of days after which an authorization gets aged off if no matching clearing record was received."
        },
        "enableGeographyControl": {
          "type": "boolean",
          "description": "Limits authorization requests to a defined geographic location. \nThis is an optional control. If this control is not used, pass False or leave this section out from the request.\nIf value passed is True, all fields in this section are required."
        },
        "countryCodes": {
          "type": "array",
          "description": "Defines the merchant country in which the VCA can or cannot be used.",
          "items": {
            "type": "string"
          }
        },
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in countryCode are allowed or disallowed. True = values provided in countryCode are allowed False = values provided in countryCode are not allowed        "
        },
        "enableMerchantIdControl": {
          "type": "boolean",
          "description": "Limits authorizations to a particular merchant using the Merchant ID and Acquirer ID (Mastercard) or Card Acceptor ID (Visa)."
        },
        "merchantId": {
          "$ref": "#/definitions/Merchant-Id-Request"
        }
      }
    },
    "Vca-Create-Response": {
      "type": "object",
      "title": "VcaCreateResponse",
      "properties": {
        "vcaId": {
          "type": "string",
          "description": "A reference number that uniquely identifies the virtual card account."
        },
        "cardImage": {
          "type": "string",
          "description": "A visual representation of the virtual card account front and back."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code in which VCA amounts are expressed.\nMastercard currencyCode is not required if currencyType = B\"\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\".\nValue \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "timeZone": {
          "type": "string",
          "description": "Defines the time zone applicable for any date or time parameters within controls set for a VCA."
        },
        "virtualCardAccountNumber": {
          "type": "string",
          "description": "The virtual card account number to use for transactions."
        },
        "expiryDate": {
          "type": "string",
          "description": "Expiry Date of the virtual card account. "
        },
        "securityCode": {
          "type": "string",
          "description": "The security code (i.e. cvv) corresponding to the virtual card accunt."
        },
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration."
        },
        "mccGrouping": {
          "type": "array",
          "description": "Limits authorizations to defined Merchant Category Codes.",
          "items": {
            "type": "string"
          }
        },
        "mccRange": {
          "type": "array",
          "description": "Limits authorizations to a defined range of Merchant Category Codes.(eg: [0000-9999, 2000-2999])",
          "items": {
            "type": "string"
          }
        },
        "mccgAllowed": {
          "type": "boolean",
          "description": "Required if the mccGrouping field is populated with either a range of MCCs, or a MCCG (ex: AUTO, AIR).Specify whether the  mccGrouping are allowed or disallowed.If true is passed, the mccGrouping are allowed.If false is passed, then the mccGrouping field are disallowed",
          "example": true
        },
        "currencyType": {
          "type": "string",
          "description": "Mastercard Defines the type of the VCA currency.  - Value \"B\" stands for Billing Currency which indicates that the VCA currency is equal to the billing currency of the underlying funding source.  - Value \"M\" stands for Merchant Currency which indicates that Merchant transactions are limited to the VCA currency provided in the currencyCode field.\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\". - Value \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "paymentBeneficiaryId": {
          "type": "number",
          "description": "Uniquely identifies the payment beneficiary for which the virtual card is created."
        },
        "paymentBeneficiaryEmails": {
          "type": "array",
          "description": "Specifies up to five email addresses to which the virtual card account details should be delivered. Email addresses specified in the request will not override any default email addresses specified in the virtual card application.",
          "items": {
            "type": "string"
          }
        },
        "customReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Custom-Reference"
          }
        },
        "templateId": {
          "type": "number",
          "description": "Identifies the template that was setup in the VCA system and that should be used for this virtual card.The template setup in the VCA system defines which controls, custom data fields and MCC groupings can be used."
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account. "
        },
        "standInVca": {
          "type": "boolean",
          "description": "Indicates whether the VCA details returned are generated from the VCA platform, or a pre-generated VCA from Citi. If \u201ctrue\u201d is returned then the VCA returned is a pre-generated VCA from Citi. If the \u201cfalse\u201d is returned or if the field is not returned then the VCA returned is from the backend VCA platform. "
        },
        "warning": {
          "type": "array",
          "description": "Warning information regarding a non-fatal response condition that may be taken into account, but can be ignored",
          "example": "The VCA Details returned are for a pre-generated VCA from Citi, as the backend VCA platform is currently unavailable",
          "items": {
            "type": "string"
          }
        },
        "enableSpendVelocityControl": {
          "type": "boolean",
          "description": "Limits the frequency and total cumulative amount of authorizations performed on the VCA within a specified period."
        },
        "spendVelocity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spend-Velocity-Response"
          }
        },
        "enableValidityPeriodControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a specific time period. "
        },
        "validityStartDate": {
          "type": "string",
          "description": "Identifies the date from which the virtual card account can be used for transactions."
        },
        "validityEndDate": {
          "type": "string",
          "description": "Identifies the date until which the virtual card account can be used for transactions."
        },
        "enableAmountRangeControl": {
          "type": "boolean",
          "description": "Approves a transaction only if the requested amount for authorization is equal to or greater than the Minimum Amount and less than or equal to the Maximum Amount."
        },
        "maxAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "minAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the minimum allowed transaction amount."
        },
        "enableTransactionLimitControl": {
          "type": "boolean",
          "description": "Limits individual transactions to a maximum amount."
        },
        "amountLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "enableCurfewControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a single time period for each day selected."
        },
        "curfewTime": {
          "$ref": "#/definitions/Curfew-Time"
        },
        "enableTimeOfDayControl": {
          "type": "boolean",
          "description": "Limits authorization request to defined time periods each day. "
        },
        "timeOfDay": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Time-Of-Day"
          }
        },
        "enableAgingVelocityControl": {
          "type": "boolean",
          "description": "Sets a cumulative amount and keeps track of the current remaining balance. Allows the requester to age off approved authorization requests that have not been cleared by the merchant after a defined number of days."
        },
        "authorizationHoldDays": {
          "type": "number",
          "format": "long",
          "description": "Identifies the number of days after which an authorization gets aged off if no matching clearing record was received."
        },
        "enableGeographyControl": {
          "type": "boolean",
          "description": "Limits authorization requests to a defined geographic location. \nThis is an optional control. If this control is not used, pass False or leave this section out from the request.\nIf value passed is True, all fields in this section are required."
        },
        "countryCodes": {
          "type": "array",
          "description": "Defines the merchant country in which the VCA can or cannot be used.",
          "items": {
            "type": "string"
          }
        },
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in countryCode are allowed or disallowed.\n True = values provided in countryCode are allowed\n False = values provided in countryCode are not allowed"
        },
        "enableMerchantIdControl": {
          "type": "boolean",
          "description": "Limits authorizations to a particular merchant using the Merchant ID and Acquirer ID (Mastercard) or Card Acceptor ID (Visa)."
        },
        "merchantInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Merchant-Id-Response"
          }
        }
      }
    },
    "Vca-Modify-Request": {
      "type": "object",
      "title": "VcaModifyRequest",
      "required": [
        "vcaId",
        "programId",
        "messageId",
        "fundingSourceId",
        "customReference"
      ],
      "properties": {
        "vcaId": {
          "type": "number",
          "description": "A reference number that uniquely identifies the virtual card account. "
        },
        "fundingSourceId": {
          "type": "string",
          "description": "Unique identifier of the funding source to which the virtual card rolls up"
        },
        "fundingSourceName": {
          "type": "string",
          "description": "Descriptive name of the real card to which the virtual card rolls up"
        },
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system"
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration"
        },
        "mccGrouping": {
          "type": "array",
          "description": "Limits authorizations to defined Merchant Category Codes.",
          "items": {
            "type": "string"
          }
        },
        "mccRange": {
          "type": "array",
          "description": "Limits authorizations to a defined range of Merchant Category Codes.(eg: [0000-9999, 2000-2999])",
          "items": {
            "type": "string"
          }
        },
        "mccgAllowed": {
          "type": "boolean",
          "description": "Required if the mccGrouping field is populated with either a range of MCCs, or a MCCG (ex: AUTO, AIR).Specify whether the  mccGrouping are allowed or disallowed.If true is passed, the mccGrouping are allowed.If false is passed, then the mccGrouping field are disallowed",
          "example": true
        },
        "getCardImage": {
          "type": "boolean",
          "description": "* Specifies whether cardImage field needs to be included in the response or not.\n\n\n\n* True = cardImage field will be sent in the response\n\n* False = cardImage field will not be sent in the response.\n\n* `Optional field` if not included, cardImage will be sent in the response."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code in which VCA amounts are expressed.\nMastercard currencyCode is not required if currencyType = B\"\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\".\nValue \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "currencyType": {
          "type": "string",
          "description": "Mastercard Defines the type of the VCA currency.  - Value \"B\" stands for Billing Currency which indicates that the VCA currency is equal to the billing currency of the underlying funding source.  - Value \"M\" stands for Merchant Currency which indicates that Merchant transactions are limited to the VCA currency provided in the currencyCode field.\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\". - Value \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "timeZone": {
          "type": "string",
          "description": "Defines the time zone applicable for any date or time parameters within controls set for a VCA.If any of the following controls are used, timeZone is required:Validity Period Control,Aging Velocity Control (Mastercard only), Curfew Control and Time of Day Control.It sets the specific timeframe when the account and its controls will become active."
        },
        "paymentBeneficiaryId": {
          "type": "number",
          "description": "Uniquely identifies the payment beneficiary for which the virtual card is created"
        },
        "paymentBeneficiaryEmails": {
          "type": "array",
          "description": "Lists the email addresses to which the virtual card details should be sent to.In order for emails to get delivered, the following two settings must be enabled in the VCA system:1. Allow VCN details to be emailed to this supplier2. Allow VCN requestor to manually enter a new email address when requesting a VCN",
          "items": {
            "type": "string"
          }
        },
        "customReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Custom-Reference"
          }
        },
        "templateId": {
          "type": "number",
          "description": "Identifies the template that was setup in the VCA system and that should be used for this virtual card.The template setup in the VCA system defines which controls, custom data fields and MCC groupings can be used."
        },
        "expiryDate": {
          "type": "string",
          "description": "Expiry Date of the virtual card account. "
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account."
        },
        "maxAuth": {
          "type": "number",
          "format": "long",
          "description": "Limits the number of authorizations that can be made with a VCA. Should be set to 1, if a single-use VCA is created.Specify any value larger than one for a multi-use VCA. Mastercard: Set to 0, if unlimited authorizations should be allowed. (0 is not applicable for Visa)"
        },
        "modifySpendVelocityControl": {
          "type": "boolean",
          "description": "Limits the frequency and total cumulative amount of authorizations performed on the VCA within a specified period. Mastercard: The control is mandatory unless Aging Velcotiy Control is used. This control cannot be used in combination with the Aging Velocity Control.Visa: Spend Velocity Control is mandatory."
        },
        "spendVelocity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spend-Velocity-Request"
          }
        },
        "modifyValidityPeriodControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a specific time period. "
        },
        "validityStartDate": {
          "type": "string",
          "description": "Identifies the date from which the virtual card account can be used for transactions."
        },
        "validityEndDate": {
          "type": "string",
          "description": "Identifies the date until which the virtual card account can be used for transactions."
        },
        "modifyAmountRangeControl": {
          "type": "boolean",
          "description": "Approves a transaction only if the requested amount for authorization is equal to or greater than the Minimum Amount and less than or equal to the Maximum Amount."
        },
        "maxAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "minAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the minimum allowed transaction amount."
        },
        "modifyTransactionLimitControl": {
          "type": "boolean",
          "description": "Limits individual transactions to a maximum amount."
        },
        "amountLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "modifyCurfewControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a single time period for each day selected."
        },
        "curfewTime": {
          "$ref": "#/definitions/Curfew-Time"
        },
        "modifyTimeOfDayControl": {
          "type": "boolean",
          "description": "Limits authorization request to defined time periods each day"
        },
        "timeOfDay": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Time-Of-Day"
          }
        },
        "modifyAgingVelocityControl": {
          "type": "boolean",
          "description": "Sets a cumulative amount and keeps track of the current remaining balance. Allows the requester to 'age off' approved authorization requests that have not been cleared by the merchant after a defined number of days."
        },
        "authorizationHoldDays": {
          "type": "number",
          "format": "long",
          "description": "Identifies the number of days after which an authorization gets aged off if no matching clearing record was received."
        },
        "modifyGeographyControl": {
          "type": "boolean",
          "description": "Limits authorization requests to a defined geographic location."
        },
        "countryCodes": {
          "type": "array",
          "description": "Defines the merchant country in which the VCA can be used.",
          "items": {
            "type": "string"
          }
        },
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in countryCode are allowed or disallowed. True= values provided in countryCode are allowed False = values provided in countryCode are not allowed"
        },
        "modifyMerchantIdControl": {
          "type": "boolean",
          "description": "Limits authorizations to a particular merchant using the Merchant ID and Acquirer ID (Mastercard) or Card Acceptor ID (Visa)."
        },
        "merchantId": {
          "$ref": "#/definitions/Merchant-Id-Request"
        }
      }
    },
    "Vca-Modify-Response": {
      "type": "object",
      "title": "VcaModifyResponse",
      "properties": {
        "vcaId": {
          "type": "string",
          "description": "A reference number that uniquely identifies the virtual card account."
        },
        "cardImage": {
          "type": "string",
          "description": "A visual representation of the virtual card account front and back."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code in which VCA amounts are expressed.\nMastercard currencyCode is not required if currencyType = B\"\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\".\nValue \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "timeZone": {
          "type": "string",
          "description": "Defines the time zone applicable for any date or time parameters within controls set for a VCA."
        },
        "virtualCardAccountNumber": {
          "type": "string",
          "description": "The virtual card account number to use for transactions."
        },
        "expiryDate": {
          "type": "string",
          "description": "Expiry Date of the virtual card account. "
        },
        "securityCode": {
          "type": "string",
          "description": "The security code (i.e. cvv) corresponding to the virtual card accunt."
        },
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration."
        },
        "mccGrouping": {
          "type": "array",
          "description": "Limits authorizations to defined Merchant Category Codes.",
          "items": {
            "type": "string"
          }
        },
        "mccRange": {
          "type": "array",
          "description": "Limits authorizations to a defined range of Merchant Category Codes.(eg: [0000-9999, 2000-2999])",
          "items": {
            "type": "string"
          }
        },
        "mccgAllowed": {
          "type": "boolean",
          "description": "Required if the mccGrouping field is populated with either a range of MCCs, or a MCCG (ex: AUTO, AIR).Specify whether the  mccGrouping are allowed or disallowed.If true is passed, the mccGrouping are allowed.If false is passed, then the mccGrouping field are disallowed",
          "example": true
        },
        "currencyType": {
          "type": "string",
          "description": "Mastercard Defines the type of the VCA currency.  - Value \"B\" stands for Billing Currency which indicates that the VCA currency is equal to the billing currency of the underlying funding source.  - Value \"M\" stands for Merchant Currency which indicates that Merchant transactions are limited to the VCA currency provided in the currencyCode field.\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\". - Value \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "paymentBeneficiaryId": {
          "type": "number",
          "description": "Uniquely identifies the payment beneficiary for which the virtual card is created."
        },
        "paymentBeneficiaryEmails": {
          "type": "array",
          "description": "Specifies up to five email addresses to which the virtual card account details should be delivered. Email addresses specified in the request will not override any default email addresses specified in the virtual card application.",
          "items": {
            "type": "string"
          }
        },
        "customReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Custom-Reference"
          }
        },
        "templateId": {
          "type": "number",
          "description": "Identifies the template that was setup in the VCA system and that should be used for this virtual card.The template setup in the VCA system defines which controls, custom data fields and MCC groupings can be used."
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account. "
        },
        "modifySpendVelocityControl": {
          "type": "boolean",
          "description": "Limits the frequency and total cumulative amount of authorizations performed on the VCA within a specified period."
        },
        "spendVelocity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spend-Velocity-Response"
          }
        },
        "modifyValidityPeriodControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a specific time period. "
        },
        "validityStartDate": {
          "type": "string",
          "description": "Identifies the date from which the virtual card account can be used for transactions."
        },
        "validityEndDate": {
          "type": "string",
          "description": "Identifies the date until which the virtual card account can be used for transactions."
        },
        "modifyAmountRangeControl": {
          "type": "boolean",
          "description": "Approves a transaction only if the requested amount for authorization is equal to or greater than the Minimum Amount and less than or equal to the Maximum Amount."
        },
        "maxAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "minAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the minimum allowed transaction amount."
        },
        "modifyTransactionLimitControl": {
          "type": "boolean",
          "description": "Limits individual transactions to a maximum amount."
        },
        "amountLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "modifyCurfewControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a single time period for each day selected."
        },
        "curfewTime": {
          "$ref": "#/definitions/Curfew-Time"
        },
        "modifyTimeOfDayControl": {
          "type": "boolean",
          "description": "Limits authorization request to defined time periods each day. "
        },
        "timeOfDay": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Time-Of-Day"
          }
        },
        "modifyAgingVelocityControl": {
          "type": "boolean",
          "description": "Sets a cumulative amount and keeps track of the current remaining balance. Allows the requester to age off approved authorization requests that have not been cleared by the merchant after a defined number of days."
        },
        "authorizationHoldDays": {
          "type": "number",
          "format": "long",
          "description": "Identifies the number of days after which an authorization gets aged off if no matching clearing record was received."
        },
        "modifyGeographyControl": {
          "type": "boolean",
          "description": "Limits authorization requests to a defined geographic location. "
        },
        "countryCodes": {
          "type": "array",
          "description": "Defines the merchant country in which the VCA can be used.",
          "items": {
            "type": "string"
          }
        },
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in countryCode are allowed or disallowed. True= values provided in countryCode are allowed False = values provided in countryCode are not allowed"
        },
        "modifyMerchantIdControl": {
          "type": "boolean",
          "description": "Limits authorizations to a particular merchant using the Merchant ID and Acquirer ID (Mastercard) or Card Acceptor ID (Visa)."
        },
        "merchantInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Merchant-Id-Response"
          }
        }
      }
    },
    "Vca-Create-Failure-Response": {
      "type": "object",
      "title": "VcaCreateFailureResponse",
      "properties": {
        "vcaId": {
          "type": "string",
          "description": "A reference number that uniquely identifies the virtual card account."
        },
        "cardImage": {
          "type": "string",
          "description": "A visual representation of the virtual card account front and back."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code in which VCA amounts are expressed.\nMastercard currencyCode is not required if currencyType = B\"\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\".\nValue \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "timeZone": {
          "type": "string",
          "description": "Defines the time zone applicable for any date or time parameters within controls set for a VCA."
        },
        "virtualCardAccountNumber": {
          "type": "string",
          "description": "The virtual card account number to use for transactions."
        },
        "expiryDate": {
          "type": "string",
          "description": "Expiry Date of the virtual card account. "
        },
        "securityCode": {
          "type": "string",
          "description": "The security code (i.e. cvv) corresponding to the virtual card accunt."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error-Message"
          }
        },
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration."
        },
        "mccGrouping": {
          "type": "array",
          "description": "Limits authorizations to defined Merchant Category Codes.",
          "items": {
            "type": "string"
          }
        },
        "mccRange": {
          "type": "array",
          "description": "Limits authorizations to a defined range of Merchant Category Codes.(eg: [0000-9999, 2000-2999])",
          "items": {
            "type": "string"
          }
        },
        "mccgAllowed": {
          "type": "boolean",
          "description": "Required if the mccGrouping field is populated with either a range of MCCs, or a MCCG (ex: AUTO, AIR).Specify whether the  mccGrouping are allowed or disallowed.If true is passed, the mccGrouping are allowed.If false is passed, then the mccGrouping field are disallowed",
          "example": true
        },
        "currencyType": {
          "type": "string",
          "description": "Mastercard Defines the type of the VCA currency.  - Value \"B\" stands for Billing Currency which indicates that the VCA currency is equal to the billing currency of the underlying funding source.  - Value \"M\" stands for Merchant Currency which indicates that Merchant transactions are limited to the VCA currency provided in the currencyCode field.\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\". - Value \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "paymentBeneficiaryId": {
          "type": "number",
          "description": "Uniquely identifies the payment beneficiary for which the virtual card is created."
        },
        "paymentBeneficiaryEmails": {
          "type": "array",
          "description": "Specifies up to five email addresses to which the virtual card account details should be delivered. Email addresses specified in the request will not override any default email addresses specified in the virtual card application.",
          "items": {
            "type": "string"
          }
        },
        "customReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Custom-Reference"
          }
        },
        "templateId": {
          "type": "number",
          "description": "Identifies the template that was setup in the VCA system and that should be used for this virtual card.The template setup in the VCA system defines which controls, custom data fields and MCC groupings can be used."
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account. "
        },
        "enableSpendVelocityControl": {
          "type": "boolean",
          "description": "Limits the frequency and total cumulative amount of authorizations performed on the VCA within a specified period."
        },
        "spendVelocity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spend-Velocity-Response"
          }
        },
        "enableValidityPeriodControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a specific time period. "
        },
        "validityStartDate": {
          "type": "string",
          "description": "Identifies the date from which the virtual card account can be used for transactions."
        },
        "validityEndDate": {
          "type": "string",
          "description": "Identifies the date until which the virtual card account can be used for transactions."
        },
        "enableAmountRangeControl": {
          "type": "boolean",
          "description": "Approves a transaction only if the requested amount for authorization is equal to or greater than the Minimum Amount and less than or equal to the Maximum Amount."
        },
        "maxAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "minAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the minimum allowed transaction amount."
        },
        "enableTransactionLimitControl": {
          "type": "boolean",
          "description": "Limits individual transactions to a maximum amount."
        },
        "amountLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "enableCurfewControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a single time period for each day selected."
        },
        "curfewTime": {
          "$ref": "#/definitions/Curfew-Time"
        },
        "enableTimeOfDayControl": {
          "type": "boolean",
          "description": "Limits authorization request to defined time periods each day. "
        },
        "timeOfDay": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Time-Of-Day"
          }
        },
        "enableAgingVelocityControl": {
          "type": "boolean",
          "description": "Sets a cumulative amount and keeps track of the current remaining balance. Allows the requester to age off approved authorization requests that have not been cleared by the merchant after a defined number of days."
        },
        "authorizationHoldDays": {
          "type": "number",
          "format": "long",
          "description": "Identifies the number of days after which an authorization gets aged off if no matching clearing record was received."
        },
        "enableGeographyControl": {
          "type": "boolean",
          "description": "Limits authorization requests to a defined geographic location. \nThis is an optional control. If this control is not used, pass False or leave this section out from the request.\nIf value passed is True, all fields in this section are required."
        },
        "countryCodes": {
          "type": "array",
          "description": "Defines the merchant country in which the VCA can or cannot be used.",
          "items": {
            "type": "string"
          }
        },
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in countryCode are allowed or disallowed. True= values provided in countryCode are allowed False = values provided in countryCode are not allowed"
        },
        "enableMerchantIdControl": {
          "type": "boolean",
          "description": "Limits authorizations to a particular merchant using the Merchant ID and Acquirer ID (Mastercard) or Card Acceptor ID (Visa)."
        },
        "merchantInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Merchant-Id-Response"
          }
        }
      }
    },
    "Vca-Modify-Failure-Response": {
      "type": "object",
      "title": "VcaModifyFailureResponse",
      "properties": {
        "vcaId": {
          "type": "string",
          "description": "A reference number that uniquely identifies the virtual card account."
        },
        "cardImage": {
          "type": "string",
          "description": "A visual representation of the virtual card account front and back."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code in which VCA amounts are expressed.\nMastercard currencyCode is not required if currencyType = B\"\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\".\nValue \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "timeZone": {
          "type": "string",
          "description": "Defines the time zone applicable for any date or time parameters within controls set for a VCA."
        },
        "virtualCardAccountNumber": {
          "type": "string",
          "description": "The virtual card account number to use for transactions."
        },
        "expiryDate": {
          "type": "string",
          "description": "Expiry Date of the virtual card account. "
        },
        "securityCode": {
          "type": "string",
          "description": "The security code (i.e. cvv) corresponding to the virtual card accunt."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error-Message"
          }
        },
        "programId": {
          "type": "string",
          "description": "Unique ID of the company record defined in the virtual cards system."
        },
        "messageId": {
          "type": "string",
          "description": "Unique ID of the API message sent. The messageId will be provided back in the corresponding response. The ID can be used for investigation and troubleshooting. The ID must be unique per integration."
        },
        "mccGrouping": {
          "type": "array",
          "description": "Limits authorizations to defined Merchant Category Codes.",
          "items": {
            "type": "string"
          }
        },
        "mccRange": {
          "type": "array",
          "description": "Limits authorizations to a defined range of Merchant Category Codes.(eg: [0000-9999, 2000-2999])",
          "items": {
            "type": "string"
          }
        },
        "mccgAllowed": {
          "type": "boolean",
          "description": "Required if the mccGrouping field is populated with either a range of MCCs, or a MCCG (ex: AUTO, AIR).Specify whether the  mccGrouping are allowed or disallowed.If true is passed, the mccGrouping are allowed.If false is passed, then the mccGrouping field are disallowed",
          "example": true
        },
        "currencyType": {
          "type": "string",
          "description": "Mastercard Defines the type of the VCA currency.  - Value \"B\" stands for Billing Currency which indicates that the VCA currency is equal to the billing currency of the underlying funding source.  - Value \"M\" stands for Merchant Currency which indicates that Merchant transactions are limited to the VCA currency provided in the currencyCode field.\nVisa Specifies whether Merchant transactions are limited to the VCA currency provided in the currencyCode field. The only possibe value is \"M\". - Value \"M\" stands for Merchant Currency which indicates that merchant transactions are limited to the VCA currency specified in the currencyCpde field. If a currencyType is not provided, then the VCA can be used for any merchant transaction currency."
        },
        "paymentBeneficiaryId": {
          "type": "number",
          "description": "Uniquely identifies the payment beneficiary for which the virtual card is created."
        },
        "paymentBeneficiaryEmails": {
          "type": "array",
          "description": "Specifies up to five email addresses to which the virtual card account details should be delivered. Email addresses specified in the request will not override any default email addresses specified in the virtual card application.",
          "items": {
            "type": "string"
          }
        },
        "customReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Custom-Reference"
          }
        },
        "templateId": {
          "type": "number",
          "description": "Identifies the template that was setup in the VCA system and that should be used for this virtual card.The template setup in the VCA system defines which controls, custom data fields and MCC groupings can be used."
        },
        "cumulativeSpendLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Limits the overall amount spend on the virtual card account. "
        },
        "modifySpendVelocityControl": {
          "type": "boolean",
          "description": "Limits the frequency and total cumulative amount of authorizations performed on the VCA within a specified period."
        },
        "spendVelocity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spend-Velocity-Response"
          }
        },
        "modifyValidityPeriodControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a specific time period. "
        },
        "validityStartDate": {
          "type": "string",
          "description": "Identifies the date from which the virtual card account can be used for transactions."
        },
        "validityEndDate": {
          "type": "string",
          "description": "Identifies the date until which the virtual card account can be used for transactions."
        },
        "modifyAmountRangeControl": {
          "type": "boolean",
          "description": "Approves a transaction only if the requested amount for authorization is equal to or greater than the Minimum Amount and less than or equal to the Maximum Amount."
        },
        "maxAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "minAmount": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the minimum allowed transaction amount."
        },
        "modifyTransactionLimitControl": {
          "type": "boolean",
          "description": "Limits individual transactions to a maximum amount."
        },
        "amountLimit": {
          "type": "number",
          "format": "bigdecimal",
          "description": "Identifies the maximum allowed transaction amount."
        },
        "modifyCurfewControl": {
          "type": "boolean",
          "description": "Limits authorization activity to a single time period for each day selected."
        },
        "curfewTime": {
          "$ref": "#/definitions/Curfew-Time"
        },
        "modifyTimeOfDayControl": {
          "type": "boolean",
          "description": "Limits authorization request to defined time periods each day. "
        },
        "timeOfDay": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Time-Of-Day"
          }
        },
        "modifyAgingVelocityControl": {
          "type": "boolean",
          "description": "Sets a cumulative amount and keeps track of the current remaining balance. Allows the requester to age off approved authorization requests that have not been cleared by the merchant after a defined number of days."
        },
        "authorizationHoldDays": {
          "type": "number",
          "format": "long",
          "description": "Identifies the number of days after which an authorization gets aged off if no matching clearing record was received."
        },
        "modifyGeographyControl": {
          "type": "boolean",
          "description": "Limits authorization requests to a defined geographic location. "
        },
        "countryCodes": {
          "type": "array",
          "description": "Defines the merchant country in which the VCA can be used.",
          "items": {
            "type": "string"
          }
        },
        "allowed": {
          "type": "boolean",
          "description": "Indicate whether the values in countryCode are allowed or disallowed. True= values provided in countryCode are allowed False = values provided in countryCode are not allowed"
        },
        "modifyMerchantIdControl": {
          "type": "boolean",
          "description": "Limits authorizations to a particular merchant using the Merchant ID and Acquirer ID (Mastercard) or Card Acceptor ID (Visa)."
        },
        "merchantInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Merchant-Id-Response"
          }
        }
      }
    }
  },
  "x-ibm-configuration": {
    "enforced": true,
    "testable": true,
    "phase": "realized",
    "cors": {
      "enabled": false
    },
    "assembly": {
      "execute": [
        {
          "gatewayscript": {
            "title": "gatewayscript",
            "version": "1.0.0",
            "source": "var hm = require('header-metadata');\r\nvar client_id = apim.getvariable('client.app.id');\r\napim.setvariable('message.headers.x-citiportal-apim-client-id',client_id);\r\nif(apim.getvariable('oauth.miscinfo') !=null){\r\nvar oauthmiscinfo = apim.getvariable('oauth.miscinfo');\r\napim.setvariable(\"message.headers.ssoId\",oauthmiscinfo.substring(2));\r\nconsole.error(\"vminfo API failed with return code=\" + oauthmiscinfo.substring(2) );\r\napim.setvariable('message.headers.x-citiportal-apim-client-id',client_id);\r\napim.setvariable(\"message.headers.x-citiportal-loginid\",oauthmiscinfo.substring(2));  \r\n}"
          }
        },
        {
          "proxy": {
            "title": "proxy",
            "timeout": 60,
            "verb": "keep",
            "cache-response": "protocol",
            "cache-ttl": 900,
            "version": "1.0.0",
            "tls-profile": "icg-tts-ic",
            "target-url": "$(hostName)$(api.operation.path)"
          }
        },
        {
          "activity-log": {
            "title": "activity-log",
            "content": "header",
            "error-content": "header",
            "version": "1.0.0"
          }
        }
      ],
      "catch": []
    },
    "properties": {
      "hostName": {
        "value": "https://base-b-grace-engine-nam.cloudgsl.nam.nsroot.net/api/tts/cards/vca/v2",
        "description": "",
        "encoded": false
      }
    },
    "categories": [
      "ICG_COMMERCIAL_CARDS"
    ],
    "catalogs": {
      "External": {
        "properties": {
          "hostName": "https://base-b-grace-engine-nam.cloudgsl.nam.nsroot.net/api/tts/cards/vca/v2"
        }
      },
      "UAT2": {
        "properties": {
          "hostName": "https://base-b-grace-engine-uat2-icg-tts-grace-173707.apps.namicgswd22u.ecs.dyn.nsroot.net/api/tts/cards/vca/v2"
        }
      }
    }
  },
  "securityDefinitions": {
    "Client Credentials": {
      "type": "oauth2",
      "description": "",
      "flow": "application",
      "scopes": {
        "/api": ""
      },
      "tokenUrl": "https://example.com/api/oauth2/token"
    }
  },
  "security": [
    {
      "Client Credentials": [
        "/api"
      ]
    }
  ],
  "basePath": "/cards/vca/v2",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}