{
  "swagger": "2.0",
  "x-swagger-date": "2025-01-15T00:00:00+00:00",
  "info": {
    "title": "Transaction Detail",
    "version": "v3 December 05, 2024",
    "contact": {
      "name": "Wells Fargo Gateway Support",
      "url": "https://developer.wellsfargo.com/portal/support",
      "email": "gateway@wellsfargo.com",
      "x-termsAndConditions": "https://developer.wellsfargo.com/tac/"
    },
    "description": "The Transaction Detail API enables Wells Fargo Treasury Management customers to search for transactions from the current day through previous 180 days. With the included pagination feature, customers can retrieve high volumes of transactions in the API response. If searching for transactions from the last 7 days, an additional time range filter can be applied to limit results or to ensure that only the latest transactions are retrieved with each API call. Customers will be billed for each transaction in their search result. Optimize your requests for the transactions you need."
  },
  "host": "api.wellsfargo.com",
  "basePath": "/treasury/transaction-reporting/v3",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "description": "The authorization request header should use the Bearer authorization scheme and regenerate every 24 hours by calling the [Token API} followed by the access token. Example: 'Bearer c2ebc483a02985ca9ae6f5f17ef3f454'\n",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/transactions/search": {
      "post": {
        "summary": "Search for transactions",
        "description": "Request a list of transactions that match selected criteria.",
        "parameters": [
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/content_type"
          },
          {
            "$ref": "#/parameters/gateway_entity_id"
          },
          {
            "$ref": "#/parameters/client_request_id"
          },
          {
            "$ref": "#/parameters/ceo_company_id"
          },
          {
            "$ref": "#/parameters/connected_platforms_client"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactions_search_request"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/transactions_search_response"
            },
            "description": "OK or Successful operation",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Bad Request",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Authentication Failed",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "No authorization for the requested resource",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Requested resource cannot be found",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "405": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Requested method (e.g. GET/POST/PUT/DELETE) not available",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "408": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Request timed out",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Requests conflicts with another request",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "429": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Too Many Requests",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Internal Server Error",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Service Unavailable",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "504": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Response timeout",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "520": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Unknown error",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "unexpected error",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Search for transactions"
        ],
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "x-scope": "TM-Transaction-Search"
      }
    },
    "/transactions/report": {
      "post": {
        "summary": "Generate transaction reports",
        "description": "This resource lets you generate transaction reports for transactions that match specified filter criteria. Filters include <<\\*transaction_type\\*>>, transaction identifier, date, serial number, <<\\*check_number\\*>>, customer reference number, amount, WIRES data, ACH data and location.",
        "parameters": [
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/content_type"
          },
          {
            "$ref": "#/parameters/gateway_entity_id"
          },
          {
            "$ref": "#/parameters/client_request_id"
          },
          {
            "$ref": "#/parameters/ceo_company_id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactions_report_request"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/transactions_report_response"
            },
            "description": "OK or Successful operation",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Bad Request",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Authentication Failed",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "No authorization for the requested resource",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Requested resource cannot be found",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "405": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Requested method (e.g. GET/POST/PUT/DELETE) not available",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "408": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Request timed out",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Requests conflicts with another request",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "429": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Too Many Requests",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Internal Server Error",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Service Unavailable",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "504": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Response timeout",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "520": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "Unknown error",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/errors"
            },
            "description": "unexpected error",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Generate transaction reports"
        ],
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "x-scope": "TM-Transaction-Report"
      }
    }
  },
  "definitions": {
    "transactions_search_request": {
      "description": "Search for transactions using either a date or datetime range, along with additional filters to help limit search results.",
      "type": "object",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "description": "A list of bank accounts to search. Each bank account includes a <<\\*bank_id\\*>> and <<\\*account_number\\*>>. Note: You may include up to 50 accounts in your search.",
          "type": "array",
          "minItems": 1,
          "maxItems": 50,
          "items": {
            "required": [
              "account_number"
            ],
            "properties": {
              "bank_id": {
                "description": "The bank identifier. For U.S. bank accounts, the routing number is the bank ID. For multi-currency accounts, the bank ID may be the SWIFT BIC (Bank Identification Code) or the routing number.",
                "type": "string",
                "minLength": 8,
                "maxLength": 11
              },
              "account_number": {
                "description": "The bank account number",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              }
            }
          }
        },
        "previous_cursor": {
          "description": "Cursors are used for paginating through transactions. Include a <<\\*previous_cursor\\*>> value to request the previous page of transaction results.",
          "type": "string",
          "minLength": 37,
          "maxLength": 43
        },
        "next_cursor": {
          "description": "Cursors are used for paginating through records. Include a <<\\*next_cursor\\*>> value to request the next page of transaction results.",
          "type": "string",
          "minLength": 37,
          "maxLength": 43
        },
        "limit": {
          "description": "The maximum number of transactions per page to include in the response. Note: The default is used when the limit is not provided in the request.",
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 50
        },
        "date_range": {
          "$ref": "#/definitions/date_range_transactions"
        },
        "datetime_range": {
          "$ref": "#/definitions/datetime_range"
        },
        "processed_datetime_range": {
          "$ref": "#/definitions/processed_datetime_range"
        },
        "order_by": {
          "$ref": "#/definitions/order_by"
        },
        "bai_code_list": {
          "description": "A list of bai-type codes used to filter the search results.",
          "type": "array",
          "minItems": 1,
          "maxItems": 300,
          "items": {
            "required": [
              "bai_type_code"
            ],
            "properties": {
              "bai_type_code": {
                "description": "A bai code in the <<\\*bai_type_code\\*>> array.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "pattern": "^(0*[1-9][0-9]*)$"
              }
            }
          }
        },
        "check_number_list": {
          "description": "A list of check numbers you may include to help limit the search query. Up to 20 check numbers can be provided in a query. Duplicate check numbers in a query will be ignored. Note: Cannot be used at the same time as the <<\\*check_number_range\\*>> filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "check_number"
            ],
            "properties": {
              "check_number": {
                "description": "A check number in the <<\\*check_number_list\\*>> array.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "check_number_range": {
          "$ref": "#/definitions/check_number_range"
        },
        "serial_number_list": {
          "description": "A list of serial numbers you may include to filter the search results. Up to 20 serial numbers can be included in the list for each query. Duplicate serial numbers in a query will be ignored. Note: Cannot be used at the same time as the <<\\*serial_number_range\\*>> filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "serial_number"
            ],
            "properties": {
              "serial_number": {
                "description": "A serial number in the <<\\*serial_number_list\\*>> array.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "serial_number_range": {
          "$ref": "#/definitions/serial_number_range"
        },
        "customer_reference_number_list": {
          "description": "A list of customer reference numbers you may include to filter the search results. Duplicate customer reference numbers in a query will be ignored. Note - Cannot be used at the same time as the <<\\*customer_reference_number_range\\*>> filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "customer_reference_number"
            ],
            "properties": {
              "customer_reference_number": {
                "description": "A customer reference number in the <<\\*customer_reference_number_list\\*>> array.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "customer_reference_number_range": {
          "$ref": "#/definitions/customer_reference_number_range"
        },
        "location_number_list": {
          "description": "A list of location numbers you may include to filter the search results. Up to 20 locations can be provided in a query. Duplicate location numbers in the query will be ignored. Note: Cannot be used at the same time as the <<\\*location_number_range\\*>>filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "location_number"
            ],
            "properties": {
              "location_number": {
                "description": "A location number in the <<\\*location_number_list\\*>> array.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "location_number_range": {
          "$ref": "#/definitions/location_number_range"
        },
        "amount_range": {
          "$ref": "#/definitions/amount_range"
        },
        "bank_reference_list": {
          "description": "A bank reference list you may include to help filter search results. Note: Currently, only one <<\\*bank_reference\\*>> value can be provided in a query.",
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "required": [
              "bank_reference"
            ],
            "properties": {
              "bank_reference": {
                "description": "A bank reference number in the <<\\*bank_reference_list\\*>> array. Note: If your query provides a bank reference number, the following must also be specified - transaction_type = \u2018ATM\u2019, debit_credit_indicator = \u2018CREDIT\u2019",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "debit_credit_indicator": {
          "description": "Filter search results to either debit or credit transactions. Valid values are CREDIT, DEBIT, ALL.",
          "type": "string",
          "enum": [
            "DEBIT",
            "CREDIT",
            "ALL"
          ],
          "default": "ALL"
        },
        "transaction_type_list": {
          "description": "Limit search results to specific transaction types.",
          "type": "array",
          "minItems": 1,
          "items": {
            "required": [
              "transaction_type"
            ],
            "properties": {
              "transaction_type": {
                "description": "The transaction type. If <<\\*debit_credit_indicator\\*>> is provided, the combination of <<\\*debit_credit_indicator\\*>> and <<\\*transaction_type\\*>> must be valid. Note - If the transaction type is \u2018ACH\u2019, \u2018WIRE\u2019 or \u2018RTP\u2019, only current-day transaction information is available. Note - The bank_reference filter can only be used if transaction_type = \u2018ATM\u2019 and debit_credit_indicator = \u2019CREDIT\u2019.",
                "type": "string",
                "enum": [
                  "ACH",
                  "ADJUSTMENT",
                  "ARP",
                  "ATM",
                  "BOND",
                  "BROKER",
                  "CDA",
                  "CHECK",
                  "COMMERCIAL_LOAN",
                  "DEPOSIT",
                  "DTC",
                  "INTERNATIONAL",
                  "INVESTMENT",
                  "LOCKBOX",
                  "MISCELLANEOUS",
                  "NON_MONETARY",
                  "OTHER_CHECKS",
                  "OVERDRAFT",
                  "PAYABLE_THROUGH_DRAFT",
                  "RETURN",
                  "REVERSAL",
                  "RTP",
                  "SWEEP",
                  "WIRE",
                  "ZBA"
                ]
              }
            }
          }
        },
        "transaction_field_name": {
          "$ref": "#/definitions/transaction_field_name_search"
        },
        "transaction_field_value": {
          "description": "The value corresponding to the transaction field name. Note - This field can only be included in your query if the date range, <<\\*date_range\\*>> or <<\\*datetime_range\\*>> is filtered to the current date. *Required if using <<\\*transaction_field_name\\*>>.",
          "type": "string",
          "minLength": 3,
          "maxLength": 45
        }
      }
    },
    "transactions_search_response": {
      "description": "Results are sorted first by account_number, then transactions within each account number are sorted by posting date in descending order (most recent to least recent).",
      "type": "object",
      "properties": {
        "accounts": {
          "description": "An array of objects for each account provided in the search request. Each object includes account information and the number of transactions in the account that match the search criteria. Note: Any accounts provided in the request that are not authorized for the transaction search will be included in the <<\\*not_entitled_accounts\\*>> array.",
          "type": "array",
          "items": {
            "properties": {
              "bank_id": {
                "description": "The bank identifier. For U.S. bank accounts, the routing number is the bank ID. For multi-currency accounts, the bank ID may be the SWIFT BIC (Bank Identification Code) or the routing number.",
                "type": "string",
                "minLength": 8,
                "maxLength": 11
              },
              "account_number": {
                "description": "The account number.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "account_type": {
                "description": "The account type. Valid values are SAVINGS, DEMAND_DEPOSIT, GENERAL_LEDGER",
                "type": "string",
                "enum": [
                  "SAVINGS",
                  "DEMAND_DEPOSIT",
                  "GENERAL_LEDGER"
                ]
              },
              "account_name": {
                "description": "The name associated with the account",
                "type": "string",
                "minLength": 1,
                "maxLength": 72
              },
              "currency_code": {
                "description": "The currency of the account, expressed as the ISO 4217 alpha 3 currency code.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3
              },
              "transaction_count": {
                "description": "The number of transactions in the account that match the search criteria. If there are no matching transactions, the value for this field will be 0.",
                "type": "number",
                "format": "double"
              },
              "transactions": {
                "$ref": "#/definitions/transactions"
              }
            }
          }
        },
        "limit": {
          "description": "The maximum number of transactions per page. If no \u2018limit\u2019 is provided in the request, the default value is 50.",
          "type": "number"
        },
        "total_count": {
          "description": "The total number of transactions found based on the search criteria.",
          "type": "number"
        },
        "paging": {
          "description": "An object that includes all paging-related fields.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cursors": {
                "description": "Cursors are pointers that identify where you are in a result set, and provide a means to move between previous and next pages.",
                "type": "array",
                "items": {
                  "properties": {
                    "previous_cursor": {
                      "description": "A string that points to the previous page of records for pagination purposes.",
                      "type": "string",
                      "minLength": 37,
                      "maxLength": 43
                    },
                    "next_cursor": {
                      "description": "A string that points to the next page of records for pagination purposes.",
                      "type": "string",
                      "minLength": 37,
                      "maxLength": 43
                    }
                  }
                }
              }
            }
          }
        },
        "not_entitled_accounts": {
          "description": "Array of up to 20 account numbers provided in the request that are not authorized to be included in the search.",
          "type": "array",
          "items": {
            "properties": {
              "account_number": {
                "description": "An account number that is not authorized to be included in the search.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        }
      }
    },
    "transactions_report_request": {
      "description": "This resource lets you generate transaction reports for transactions that match specified filter criteria. Filters include <<\\*transaction_type\\*>>, transaction identifier, date, serial number, <<\\*check_number\\*>>, customer reference number, amount, WIRES data, ACH data and location.",
      "type": "object",
      "required": [
        "accounts",
        "date_range"
      ],
      "properties": {
        "accounts": {
          "description": "Includes the <<\\*bank_id\\*>> and <<\\*account_number\\*>>. The maximum number of accounts is one.",
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "required": [
              "account_number"
            ],
            "properties": {
              "bank_id": {
                "description": "The bank identifier. For U.S. bank accounts, the routing number is the bank ID. For multi-currency accounts, the bank ID may be the SWIFT BIC (Bank Identification Code) or the routing number.",
                "type": "string",
                "minLength": 8,
                "maxLength": 11
              },
              "account_number": {
                "description": "The account number",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              }
            }
          }
        },
        "date_range": {
          "$ref": "#/definitions/date_range_reports"
        },
        "bai_code_list": {
          "description": "A list of bai codes you may include to help ????.",
          "type": "array",
          "minItems": 1,
          "maxItems": 300,
          "items": {
            "required": [
              "bai_type_code"
            ],
            "properties": {
              "bai_type_code": {
                "description": "A bai code in the <<\\*bai_type_code\\*>> array.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "pattern": "^(0*[1-9][0-9]*)$"
              }
            }
          }
        },
        "check_number_list": {
          "description": "A list of check numbers to be included in the query. If you do not want a filter on check number, then do not include it in the request. The maximum number to be returned is 20.Duplicate check numbers will be filtered and the response will display only one. Note - Cannot be used at the same time as the <<\\*check_number_range\\*>> filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "check_number"
            ],
            "properties": {
              "check_number": {
                "description": "The check number or numbers in the <<\\*check_number_list\\*>>.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "check_number_range": {
          "$ref": "#/definitions/check_number_range"
        },
        "serial_number_list": {
          "description": "A list of serial numbers to be included in the query. If you do not want a filter on serial number, then do not include it in the request. The maximum number to be returned is 20. Duplicate numbers are filtered and the response will display only one. Note - Cannot be used at the same time as the <<\\*serial_number_range\\*>> filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "serial_number"
            ],
            "properties": {
              "serial_number": {
                "description": "A serial number in the <<\\*serial_number_list\\*>> array.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "serial_number_range": {
          "$ref": "#/definitions/serial_number_range"
        },
        "customer_reference_number_list": {
          "description": "A list of customer reference numbers to be included in the query. If you do not want a filter on customer reference number, then do not include it in the request. The maximum number to be returned is 20. Duplicate numbers are filtered the response will be display only one. Note - Cannot be used at the same time as the <<\\*customer_number_range\\*>> filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "customer_reference_number"
            ],
            "properties": {
              "customer_reference_number": {
                "description": "Number or numbers in the <<\\*customer_reference_number_list\\*>>.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "customer_reference_number_range": {
          "$ref": "#/definitions/customer_reference_number_range"
        },
        "location_number_list": {
          "description": "A list of location numbers to be included in the query. If you do not want a filter on location number, then do not include it in the request. The maximum number to be returned is 20. Duplicate numbers are filtered and the response will display only one. Note - Cannot be used at the same time as the <<\\*location_number_range\\*>> filter.",
          "type": "array",
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "required": [
              "location_number"
            ],
            "properties": {
              "location_number": {
                "description": "Number or numbers referenced in the <<\\*location_number_list\\*>>. Note - Avoid using leading zeros in the search string when searching based on location number.",
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              }
            }
          }
        },
        "location_number_range": {
          "$ref": "#/definitions/location_number_range"
        },
        "amount_range": {
          "$ref": "#/definitions/amount_range"
        },
        "debit_credit_indicator": {
          "description": "Based on the transaction type. Valid values are CREDIT, DEBIT, ALL. If no value is selected, the default is ALL. Note: Too many matches may result if only filtered by this object.",
          "type": "string",
          "enum": [
            "DEBIT",
            "CREDIT",
            "ALL"
          ]
        },
        "transaction_type_list": {
          "description": "A list of transaction types to be included in the query. If no filter on <<\\*transaction_type\\*>> is needed, do not include in the request.",
          "type": "array",
          "minItems": 1,
          "items": {
            "required": [
              "transaction_type"
            ],
            "properties": {
              "transaction_type": {
                "description": "The transaction type. Required fields <<\\*transaction_field_name\\*>> and <<\\*transaction_field_value\\*>>. Must be a valid combination with <<\\*debit_credit_indicator\\*>>, if supplied. Note - For ACH and WIRE, you can only retrieve transaction details for the current day.",
                "type": "string",
                "enum": [
                  "ACH",
                  "ADJUSTMENT",
                  "ARP",
                  "ATM",
                  "BOND",
                  "BROKER",
                  "CDA",
                  "CHECK",
                  "COMMERCIAL_LOAN",
                  "DEPOSIT",
                  "DTC",
                  "INTERNATIONAL",
                  "INVESTMENT",
                  "LOCKBOX",
                  "MISCELLANEOUS",
                  "NON_MONETARY",
                  "OTHER_CHECKS",
                  "OVERDRAFT",
                  "PAYABLE_THROUGH_DRAFT",
                  "RETURN",
                  "REVERSAL",
                  "SWEEP",
                  "WIRE",
                  "ZBA"
                ]
              }
            }
          }
        },
        "transaction_field_name": {
          "$ref": "#/definitions/transaction_field_name_report"
        },
        "transaction_field_value": {
          "description": "Only allowed if the date range is current day.  *Required if using the <<\\*transaction_field_name\\*>> filter.",
          "type": "string",
          "minLength": 3,
          "maxLength": 45
        },
        "report_type": {
          "description": "Type of report that will be returned. Valid value SUMMARY",
          "type": "string",
          "enum": [
            "SUMMARY"
          ]
        }
      }
    },
    "transactions_report_response": {
      "type": "object",
      "properties": {
        "accounts": {
          "description": "The set of accounts returned that match the search. The current limit of returned accounts is one.",
          "type": "array",
          "items": {
            "properties": {
              "bank_id": {
                "description": "The bank identifier. For U.S. bank accounts this is the Routing Number. For multi-currency accounts, the bank ID may be the SWIFT BIC (Bank Identification Code) or the routing number.",
                "type": "string",
                "minLength": 8,
                "maxLength": 11
              },
              "account_number": {
                "description": "The account number.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              },
              "account_type": {
                "description": "The account type. Valid values are SAVINGS, DIRECT_DEPOSIT, GENERAL_LEDGER",
                "type": "string",
                "enum": [
                  "SAVINGS",
                  "DIRECT_DEPOSIT",
                  "GENERAL_LEDGER"
                ]
              },
              "account_name": {
                "description": "The name on the account.",
                "type": "string",
                "minLength": 1,
                "maxLength": 72
              },
              "currency_code": {
                "description": "The currency the account is held in, expressed as the ISO 4217 alpha 3 currency code.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3
              },
              "debit_count": {
                "description": "The number of debit items posted to the account for the selected range.",
                "type": "number"
              },
              "debit_amount": {
                "description": "The amount of debit items posted to this account for the selected range.",
                "type": "number"
              },
              "credit_count": {
                "description": "The number of credit items posted to this account for the selected range.",
                "type": "number"
              },
              "credit_amount": {
                "description": "The amount of credit items posted to this account for the selected range.",
                "type": "number"
              },
              "posting_dates": {
                "$ref": "#/definitions/posting_dates"
              }
            }
          }
        }
      }
    },
    "date_range_transactions": {
      "description": "Requests must include either a <<\\*date_range\\*>> object or a <<\\*datetime_range\\*>> object or a <<\\*processed_datetime_range\\*>> object, but not all. The <<\\*date_range\\*>> filter enables you to search for transactions within a specified date range.\n  Note: The start date in the date range cannot be earlier than 180 days prior to today\u2019s date.",
      "type": "object",
      "required": [
        "start_posting_date",
        "end_posting_date"
      ],
      "properties": {
        "start_posting_date": {
          "description": "The start date of the date range. The <<\\*start_posting_date\\*>> value must be equal to or earlier than the <<\\*end_posting_date\\*>>. Note - The <<\\*start_posting_date\\*>> must be the current date if <<\\*transaction_type\\*>> is \u2018ACH\u2019,\u2018RTP\u2019 or \u2018WIRE\u2019 and a <<\\*transaction_field_name\\*>> and <<\\*transaction_field_value\\*>> are provided in the request.",
          "type": "string",
          "format": "YYYY-MM-DD",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "end_posting_date": {
          "description": "The end date of the date range. The <<\\*end_posting_date\\*>> value must be equal to or later than the <<\\*start_posting_date\\*>>. To limit searches to a single day, set <<\\*end_posting_date\\*>> and <<\\*start_posting_date\\*>> to the same value. Note - The <<\\*end_posting_date\\*>> must be the current date if <<\\*transaction_type\\*>> is \u2018ACH\u2019,\u2018RTP\u2019 or \u2018WIRE\u2019 and a <<\\*transaction_field_name\\*>> and <<\\*transaction_field_value\\*>> are provided in the request.",
          "type": "string",
          "format": "YYYY-MM-DD",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        }
      }
    },
    "date_range_reports": {
      "description": "Requests must include either a <<\\*date_range\\*>> object or a <<\\*datetime_range\\*>> object or a <<\\*processed_datetime_range\\*>> object, but not all. The <<\\*date_range\\*>> filter enables you to search for transactions within a specified date range.\n  Note: The start date in the date range cannot be earlier than 180 days prior to today\u2019s date.",
      "type": "object",
      "required": [
        "start_posting_date",
        "end_posting_date"
      ],
      "properties": {
        "start_posting_date": {
          "description": "The start date of the date range. The <<\\*start_posting_date\\*>> value must be equal to or earlier than the <<\\*end_posting_date\\*>>. Note - The <<\\*start_posting_date\\*>> must be the current date if <<\\*transaction_type\\*>> is \u2018ACH\u2019 or \u2018WIRE\u2019 and a <<\\*transaction_field_name\\*>> and <<\\*transaction_field_value\\*>> are provided in the request.",
          "type": "string",
          "format": "YYYY-MM-DD",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "end_posting_date": {
          "description": "The end date of the date range. The <<\\*end_posting_date\\*>> value must be equal to or later than the <<\\*start_posting_date\\*>>. To limit searches to a single day, set <<\\*end_posting_date\\*>> and <<\\*start_posting_date\\*>> to the same value. Note - The <<\\*end_posting_date\\*>> must be the current date if <<\\*transaction_type\\*>> is \u2018ACH\u2019 or \u2018WIRE\u2019 and a <<\\*transaction_field_name\\*>> and <<\\*transaction_field_value\\*>> are provided in the request.",
          "type": "string",
          "format": "YYYY-MM-DD",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        }
      }
    },
    "datetime_range": {
      "description": "Requests must include either a <<\\*date_range\\*>> object or a <<\\*datetime_range\\*>> object or a <<\\*processed_datetime_range\\*>> object, but not all. The <<\\*datetime_range\\*>> filter enables you to search for transactions that are timestamped within a specified range. This enables you to be more precise with your search than with the <<\\*date_range\\*>> filter. However, the time period for a <<\\*date_range\\*>> search includes the previous 180 days, whereas the time period for a <<\\*datetime_range\\*>> search is limited to the previous 7 days. For example: If the current datetime is Sep 21 10:00:00am CT, the earliest <<\\*start_transaction_datetime\\*>> that can be requested is Sep 14 12:00:00am CT. Note: All times are based on the Central Time zone.",
      "type": "object",
      "required": [
        "start_transaction_datetime",
        "end_transaction_datetime"
      ],
      "properties": {
        "start_transaction_datetime": {
          "description": "The start datetime of the search. The <<\\*start_transaction_datetime\\*>> value must be earlier than the <<\\*end_transaction_datetime\\*>>. Note - The value must be provided using the ISO 8601 standard, in one of the following formats - YYYY-MM-DDTHH:MM:SSZ, YYYY-MM-DDTHH:MM:S+/-offset, where offset= +hh:mm, -hh:mm.",
          "type": "string",
          "minLength": 20,
          "maxLength": 25,
          "pattern": "^(([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T[0-9]{2}:[0-9]{2}:[0-9]{2})(Z|([+|-][0-9]{2}:[0-9]{2}))$"
        },
        "end_transaction_datetime": {
          "description": "The end datetime of the search. The <<\\*end_transaction_datetime\\*>> value must be later than the <<\\*start_transaction_datetime\\*>>. Note - The value must be provided using the ISO 8601 standard, in one of the following formats - YYYY-MM-DDTHH:MM:SSZ, YYYY-MM-DDTHH:MM:SS+/-offset, where offset= +hh:mm, -hh:mm.",
          "type": "string",
          "minLength": 20,
          "maxLength": 25,
          "pattern": "^(([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T[0-9]{2}:[0-9]{2}:[0-9]{2})(Z|([+|-][0-9]{2}:[0-9]{2}))$"
        }
      }
    },
    "processed_datetime_range": {
      "description": "This filter enables you to accurately search for transactions processed during weekends, such as ATM deposits, and RTP/Instant Payment, even when the final settlement of the transaction occurs on the next business day. Additionally, this filter enables precise searches for batch- processed transactions like ACH and checks. \n Note: The Process Date and time reflects when the transaction was received in the reporting system, not the actual settlement date and time.  To search based on the posting date and time, use the <<\\*datetime_range*\\>> object. \n The requests must include at least one of the following: <<\\*date_range\\*>> object, or <<\\*datetime_range*\\>> object, or a <<\\*processed_datetime_range*\\>> object. \n Note: The start date in the <<\\*processed_date_range*\\>> cannot be earlier than 7 days prior to the current date.\n Example: If the current date and time is Sep 21 10:00:00am CT, the earliest <<\\*start_processed_datetime*\\>> you can be request is Sep 14 12:00:00am CT.\n Note: Not all times are based on the Central Time zone. Ensure the appropriate time zone is considered when making a request.",
      "type": "object",
      "required": [
        "start_processed_datetime",
        "end_processed_datetime"
      ],
      "properties": {
        "start_processed_datetime": {
          "description": "The start process date time of the search.  Note: The <<\\*start_processed_datetime*\\>> value must be earlier than the <<\\*end_processed_datetime*\\>>.  This field must be provided using the ISO 8601 standard, in one of the following formats: YYYY-MM-DDTHH:MM:SSZ YYYY-MM-DDTHH:MM:S+/-offset, where offset= +hh:mm, -hh:mm. Note: This field is required if a <<\\*processed_datetime_range*\\>> object is included in the request.",
          "type": "string",
          "minLength": 20,
          "maxLength": 25,
          "pattern": "^(([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T[0-9]{2}:[0-9]{2}:[0-9]{2})(Z|([+|-][0-9]{2}:[0-9]{2}))$"
        },
        "end_processed_datetime": {
          "description": "The end process date time of the search.  Note: The <<\\*end_processed_datetime*\\>> value must be later than the <<\\*start_processed_datetime*\\>>.  This field must be provided using the ISO 8601 standard, in one of the following formats: YYYY-MM-DDTHH:MM:SSZ YYYY-MM-DDTHH:MM:S+/-offset, where offset= +hh:mm, -hh:mm. Note: This field is required when a <<*processed_datetime_range*>> object is included in the request.",
          "type": "string",
          "minLength": 20,
          "maxLength": 25,
          "pattern": "^(([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T[0-9]{2}:[0-9]{2}:[0-9]{2})(Z|([+|-][0-9]{2}:[0-9]{2}))$"
        }
      }
    },
    "order_by": {
      "description": "Choose how transactions are ordered when searching by datetime_range.",
      "type": "array",
      "minItems": 1,
      "items": {
        "properties": {
          "field_name": {
            "description": "The field used to order transactions in the response. Note - Required if using the <<\\*datetime_range\\*>> filter.",
            "type": "string",
            "enum": [
              "transaction_datetime"
            ]
          },
          "sort_direction": {
            "description": "Sorting direction of the transactions returned using the datetime_range filter. Note - Required if using the <<\\*datetime_range\\*>> filter.",
            "type": "string",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ]
          }
        }
      }
    },
    "check_number_range": {
      "description": "A range of check numbers you may include to filter the search results. Note - Cannot be used at the same time as <<\\*check_number_list\\*>> filter.",
      "type": "object",
      "required": [
        "start_check_number",
        "end_check_number"
      ],
      "properties": {
        "start_check_number": {
          "description": "The starting check number within the range.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        },
        "end_check_number": {
          "description": "The ending check number within the range.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        }
      }
    },
    "serial_number_range": {
      "description": "A serial number range you may include to filter the search results. Note - Cannot be used at the same time as the <<\\*serial_number_list\\*>> filter",
      "type": "object",
      "required": [
        "start_serial_number",
        "end_serial_number"
      ],
      "properties": {
        "start_serial_number": {
          "description": "The starting serial number within the range. Value must be less than the <<\\*end_serial_number\\*>> value.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        },
        "end_serial_number": {
          "description": "The ending serial number within the range. Value must be greater than the <<\\*start_serial_number\\*>> value.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        }
      }
    },
    "customer_reference_number_range": {
      "description": "A range of customer reference numbers you may provide to help filter the search results. Note - Cannot be used at the same time as the <<\\*customer_reference_number_list\\*>> filter.",
      "type": "object",
      "required": [
        "start_customer_reference_number",
        "end_customer_reference_number"
      ],
      "properties": {
        "start_customer_reference_number": {
          "description": "The starting customer reference number within the range.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        },
        "end_customer_reference_number": {
          "description": "The ending customer reference number within the range.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        }
      }
    },
    "location_number_range": {
      "description": "A range of location numbers you may include to filter the search results. Note: Cannot be used at the same time as the <<\\*location_number_list\\*>> filter.",
      "type": "object",
      "required": [
        "start_location_number",
        "end_location_number"
      ],
      "properties": {
        "start_location_number": {
          "description": "The starting location number within the range.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        },
        "end_location_number": {
          "description": "The ending location number within the range.",
          "type": "string",
          "minLength": 1,
          "maxLength": 30
        }
      }
    },
    "amount_range": {
      "description": "A range of transaction amounts you may include to filter the search results.",
      "type": "object",
      "required": [
        "min_amount",
        "max_amount"
      ],
      "properties": {
        "min_amount": {
          "description": "The minimum transaction amount within the range. Do not include leading zeroes.",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "max_amount": {
          "description": "The maximum transaction amount within the range. Do not include leading zeroes.",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        }
      }
    },
    "transaction_field_name_search": {
      "description": "If the <<\\*transaction_type\\*>> is \u2018ACH\u2019, \u2018WIRE\u2019 or \u2018RTP\u2019, you may include a <<\\*transaction_field_name\\*>> by choosing an attribute from the list below to help limit the search results.If you include a <<\\*transaction_field_name\\*>> in your request, you must also provide a <<\\*transaction_field_value\\*>>. Valid values for \u2018ACH\u2019 transactions COID, TRACE, RECID, RECNAME, ENTRYDESC. Valid values for \u2018WIRE\u2019 transactions WIREREF,WELLSREF, ORG, BNF, SRF, OBI. Valid values for \u2018RTP\u2019 transactions SENDER, RECEIVER, E2EREF, INSTRUCTIONID.  Note: This field can only be included in your query if the <<\\*date_range\\*>> or <<\\*datetime_range\\*>> is set to the current date.",
      "type": "string",
      "enum": [
        "COID",
        "ENTRYDESC",
        "RECID",
        "RECNAME",
        "TRACE",
        "E2EREF",
        "INSTRUCTIONID",
        "SENDER",
        "RECEIVER",
        "BNF",
        "OBI",
        "ORG",
        "SRF",
        "WELLSREF",
        "WIREREF"
      ]
    },
    "transaction_field_name_report": {
      "description": "If the <<\\*transaction_type\\*>> is \u2018ACH\u2019 or \u2018WIRE\u2019, you may include a <<\\*transaction_field_name\\*>> by choosing an attribute from the list below to help limit the search results.If you include a <<\\*transaction_field_name\\*>> in your request, you must also provide a <<\\*transaction_field_value\\*>>. Valid values for \u2018ACH\u2019 transactions COID,TRACE, RECID, RECNAME, ENTRYDESC. Valid values for \u2018WIRE\u2019 transactions WIREREF,WELLSREF, ORG, BNF, SRF, OBI.  Note: This field can only be included in your query if the <<\\*date_range\\*>> or <<\\*datetime_range\\*>> is set to the current date.",
      "type": "string",
      "enum": [
        "COID",
        "ENTRYDESC",
        "RECID",
        "RECNAME",
        "TRACE",
        "BNF",
        "OBI",
        "ORG",
        "SRF",
        "WELLSREF",
        "WIREREF"
      ]
    },
    "transactions": {
      "description": "The list of transactions that match the search criteria, sorted by posting date in descending order. If there are no matching transactions, this object will not be returned.",
      "type": "array",
      "items": {
        "properties": {
          "posting_date": {
            "description": "The date when the transaction is posted to the account.",
            "type": "string",
            "format": "YYYY-MM-DD",
            "minLength": 10,
            "maxLength": 10
          },
          "value_date": {
            "description": "The value date of the transaction, when funds are released.",
            "type": "string",
            "format": "YYYY-MM-DD",
            "minLength": 10,
            "maxLength": 10
          },
          "transaction_datetime": {
            "description": "The date and time the transaction reaches the <<\\*transaction_status\\*>>.",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SSZ where \u201cZ\u201d indicates the UTC time zone",
            "minLength": 20,
            "maxLength": 20
          },
          "processed_transaction_datetime": {
            "description": "The date and time when the transaction was processed, along with its <<\\*transaction_status\\*>>.",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SSZ where \u201cZ\u201d indicates the UTC time zone",
            "minLength": 20,
            "maxLength": 20
          },
          "debit_credit_indicator": {
            "description": "Indicates whether the search was limited to debit or credit transactions. Valid values are CREDIT, DEBIT, ALL. If no value is selected, the default is ALL.",
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT",
              "ALL"
            ]
          },
          "transaction_type": {
            "description": "The transaction type.",
            "type": "string",
            "enum": [
              "ACH",
              "ADJUSTMENT",
              "ARP",
              "ATM",
              "BOND",
              "BROKER",
              "CDA",
              "CHECK",
              "COMMERCIAL LOAN",
              "DEPOSIT",
              "DTC",
              "INTERNATIONAL",
              "INVESTMENT",
              "LOCKBOX",
              "MISCELLANEOUS",
              "NON-MONETARY",
              "OTHER CHECKS",
              "OVERDRAFT",
              "PAYABLE THROUGH DRAFT",
              "RETURN",
              "REVERSAL",
              "RTP",
              "SWEEP",
              "WIRE",
              "ZBA"
            ]
          },
          "bai_type_code": {
            "description": "The Bank Administration Institute (BAI) code that maps to the <<\\*transaction_type\\*>>.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3
          },
          "bai_code_description": {
            "description": "Description for the bai_type_code that maps to the <<\\*transaction_type\\*>> field.",
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "unique_transaction_id": {
            "description": "Unique transaction identifier sent from the payment processing systems. It allows matching between intraday and previous day entries to eliminate duplicates. Applicable only for: ACH, WIRE, RTP/Instant Payment ",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "uetr": {
            "description": "A unique end-to end transaction reference number that travels through all networks, to all parties, ensuring the information is linked to the correct payment transaction. Available only for intraday transactions. Applicable only for: ACH, WIRE, RTP/Instant Payment ",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          "transaction_description": {
            "description": "The transaction description. Descriptions depend on the <<\\*transaction_type\\*>>.",
            "type": "string",
            "minLength": 1,
            "maxLength": 7000
          },
          "descriptive_text_details": {
            "description": "Additional descriptive text details related to the transaction type. Applicable for only intraday transactions. ",
            "type": "object",
            "properties": {
              "description_1": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_2": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_3": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_4": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_5": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_6": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_7": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_8": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              },
              "description_9": {
                "type": "string",
                "minimum": 1,
                "maximum": 100
              }
            }
          },
          "transaction_amount": {
            "description": "The amount of the transaction.",
            "type": "number",
            "minimum": -999999999999.99,
            "maximum": 9999999999999.99
          },
          "payment_fee_deduction": {
            "description": "Fees assessed by other banks deducted from the final payment. This applies only to wire payments originating internationally. Available only for intraday transactions.",
            "type": "string",
            "minimum": 1,
            "maximum": 100
          },
          "zero_day_float": {
            "description": "The portion of the posted amount subject to a 0-day float. Note - A \u201cfloat\u201d is a holding period for a transaction.",
            "type": "number",
            "minimum": -999999999999.99,
            "maximum": 9999999999999.99
          },
          "one_day_float": {
            "description": "The portion of the posted amount subject to a 1-day float. Note - A \u201cfloat\u201d is a holding period for a transaction.",
            "type": "number",
            "minimum": -999999999999.99,
            "maximum": 9999999999999.99
          },
          "two_date_float": {
            "description": "The portion of the posted amount subject to a 2-day float. Note - A \u201cfloat\u201d is a holding period for a transaction.",
            "type": "number",
            "minimum": -999999999999.99,
            "maximum": 9999999999999.99
          },
          "check_number": {
            "description": "The check number. Note - Duplicate check numbers are filtered and the response will display only one. If the results of a transaction query contain the <<\\*transaction_type\\*>> \u2018CHECK\u2019, this field will contain the appropriate <<\\*check_number\\*>>.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "serial_number": {
            "description": "The serial number of the transaction. Assigned by Wells Fargo. Note - Duplicate serial numbers are filtered and the response will display only one.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "customer_reference_number": {
            "description": "Both the <<\\*customer_reference_number\\*>> and <<\\*bank_reference\\*>> values are returned if available. Some transactions may only return one value or neither value. Note - Duplicate customer reference numbers are filtered and the response will display only one. This number will have the appropriate value only for current day transactions.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "location_number": {
            "description": "The location number. Note - Duplicate location numbers are filtered and the response will display only one.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "bank_reference": {
            "description": "Both the <<\\*customer_reference_number\\*>> and <<\\*bank_reference\\*>> values are returned if available. Some transactions may only return one value or neither value. Note - Duplicate bank reference numbers are filtered and the response will display only one.",
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "transaction_status": {
            "description": "If the status is intraday, the likely value is MEMO-POSTED. Note - If the status is previous day, the value is POSTED.",
            "type": "string",
            "minLength": 1,
            "maxLength": 15
          },
          "beneficiary_final_wire_received_status": {
            "description": "The beneficiary wire status.  Includes the following status types: Sent, In Process, Received, Completed, Rejected, Cancelled, Returned. This applies only to wire payments originating internationally and intraday transactions. ",
            "type": "string",
            "minimum": 1,
            "maximum": 100
          }
        }
      }
    },
    "posting_dates": {
      "description": "The set of posting dates within the account that fall within the date range in the request, sorted in reverse chronological order (most recent first). If this field is not returned, there was no activity for any of the dates within the requested range.",
      "type": "array",
      "items": {
        "properties": {
          "posting_date": {
            "description": "The posting date of the transactions.",
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "format": "YYYY-MM-DD"
          },
          "debit_count": {
            "description": "The number of debit items posted to the account for the selected range.",
            "type": "number"
          },
          "debit_amount": {
            "description": "The amount of debit items posted to this account for the selected range.",
            "type": "number"
          },
          "credit_count": {
            "description": "The number of credit items posted to this account for the selected range.",
            "type": "number"
          },
          "credit_amount": {
            "description": "The amount of credit items posted to this account for the selected range.",
            "type": "number"
          },
          "summaries": {
            "$ref": "#/definitions/summaries"
          }
        }
      }
    },
    "summaries": {
      "description": "This object is sorted by <<\\*debit_credit_indicator\\*>> (credits first), then <<\\*transaction_type\\*>> for the account and posting date. If the request did not include <<\\*transaction_type\\*>> in the search criteria, all <<\\*transaction_type\\*>> results will be included in the response.",
      "type": "array",
      "items": {
        "properties": {
          "debit_credit_indicator": {
            "description": "Given below are the values allowed for this. Valid values are CREDIT, DEBIT, ALL. If no value is selected, the default is ALL.",
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "ALL"
            ]
          },
          "transaction_type": {
            "description": "The transaction type. Note - For ACH and WIRE, you can only retrieve transaction details for the current day.",
            "type": "string",
            "enum": [
              "ACH",
              "ADJUSTMENT",
              "ARP",
              "ATM",
              "BOND",
              "BROKER",
              "CDA",
              "CHECK",
              "COMMERCIAL LOAN",
              "DEPOSIT",
              "DTC",
              "INTERNATIONAL",
              "INVESTMENT",
              "LOCKBOX",
              "MISCELLANEOUS",
              "NON-MONETARY",
              "OTHER CHECKS",
              "OVERDRAFT",
              "PAYABLE THROUGH DRAFT",
              "RETURN",
              "REVERSAL",
              "SWEEP",
              "WIRE",
              "ZBA"
            ]
          },
          "bai_type_code": {
            "description": "The Bank Administration Institute (BAI) code that maps to the <<\\*transaction_type\\*>>.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3
          },
          "bai_code_description": {
            "description": "The Bank Administration Institute (BAI) description that maps to the <<\\*transaction_type\\*>> ???.",
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "transaction_count": {
            "description": "The number of matching transactions returned for the account. Note - If there are no matching transactions found, the value for this field will be 0.",
            "type": "number"
          },
          "total_amount": {
            "description": "The total amount across all transactions for this <<\\*transaction_type\\*>> posted on this date to this account. It equals the sum of the corresponding detail records (if provided).",
            "type": "number",
            "maximum": 9999999999999.99
          }
        }
      }
    },
    "errors": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "A list of one or more errors describing the cause.",
          "items": {
            "$ref": "#/definitions/error"
          }
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "type": "string",
          "description": "A code describing the result of processing.",
          "minLength": 7,
          "maxLength": 8
        },
        "description": {
          "type": "string",
          "description": "A human-readable explanation. The message is not intended for algorithmic processing and is subject to change.",
          "minLength": 1,
          "maxLength": 100
        },
        "field_name": {
          "type": "string",
          "description": "The field name where the error occurred"
        },
        "field_value": {
          "type": "string",
          "description": "The field value entered in the request by the user."
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification"
        }
      }
    }
  },
  "parameters": {
    "Authorization": {
      "name": "Authorization",
      "in": "header",
      "description": "Include your API key in this header field and indicate \u201cBearer\u201d as the token type. Format: \"Authorization: Bearer {Your API Key}\" Generate your initial API key on the developer portal (See\n      https://developer.wellsfargo.com/portal/documentation/support/how-to#get-keys)\n      and regenerate every 24 hours by calling the Token API.",
      "type": "string",
      "required": true,
      "minLength": 32,
      "maxLength": 32
    },
    "content_type": {
      "name": "Content-Type",
      "in": "header",
      "description": "Describes the data in the body of the request. This header indicates the media (MIME) type of the content of the request (used with POST, PATCH and PUT requests) and the content of the response (including but not limited to GET responses). Example. Content-Type: application/json",
      "type": "string",
      "required": true,
      "enum": [
        "application/json"
      ]
    },
    "gateway_entity_id": {
      "name": "gateway-entity-id",
      "in": "header",
      "description": "Your Entity IDs are provided by Wells Fargo during initial company setup. An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.\n",
      "type": "string",
      "required": true,
      "minLength": 22,
      "maxLength": 22
    },
    "client_request_id": {
      "name": "client-request-id",
      "in": "header",
      "description": "Value you generate to track each API call. It will be returned in the header of the response.\n",
      "type": "string",
      "required": true,
      "pattern": "^[\\w-:.\\s]{1,36}$",
      "minLength": 1,
      "maxLength": 36
    },
    "ceo_company_id": {
      "name": "ceo-company-id",
      "in": "header",
      "description": "If you are an ERP plug-in provider use this field to identify the company you are placing a call on behalf of.",
      "type": "string",
      "minLength": 3,
      "maxLength": 20,
      "pattern": "^[a-zA-Z0-9]{3,20}$"
    },
    "connected_platforms_client": {
      "name": "connected-platforms-client",
      "in": "header",
      "description": "Provide a value in this field if you\u2019re a connected platforms client or provider.  Valid values: Yes",
      "type": "boolean",
      "minLength": 3,
      "maxLength": 3
    }
  },
  "x-wso2-security": {
    "apim": {
      "x-wso2-scopes": [
        {
          "name": "TM-Transaction-Search",
          "roles": "RES-TM-Transaction-Search",
          "description": "Returns Treasury Management transactions search",
          "key": "TM-Transaction-Search"
        },
        {
          "name": "TM-Transaction-Report",
          "roles": "RES-TM-Transaction-Report",
          "description": "Returns Treasury Management transactions report",
          "key": "TM-Transaction-Report"
        }
      ]
    }
  }
}