{
  "swagger": "2.0",
  "x-swagger-date": "2024-06-06",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "description": "The authorization request header should use the Bearer authorization scheme\nfollowed by the access token. Example: 'Bearer c2ebc483a02985ca9ae6f5f17ef3f454'\n",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "basePath": "/wires/v1",
  "host": "api.wellsfargo.com",
  "schemes": [
    "https"
  ],
  "info": {
    "title": "Wire Payment and Status",
    "version": "v1",
    "description": "Simplify Wire functionality by seamlessly integrating Wire Origination and Wire Status straight into your business flow.\n",
    "x-termsAndConditions": "https://developer.wellsfargo.com/tac/",
    "contact": {
      "name": "Wells Fargo Gateway Support",
      "url": "https://developer.wellsfargo.com/portal/support",
      "email": "gateway@wellsfargo.com"
    }
  },
  "paths": {
    "/payments/{payment-id}": {
      "get": {
        "operationId": "getPayment_status",
        "description": "Once you have originated an Wire Transfer transaction, you can view its status by including the transaction\u2019s payment_id and using the GET http method.",
        "parameters": [
          {
            "$ref": "#/parameters/gateway_company_id_PARAM"
          },
          {
            "$ref": "#/parameters/gateway_entity_id_PARAM"
          },
          {
            "$ref": "#/parameters/client_request_id_PARAM"
          },
          {
            "in": "path",
            "maxLength": 15,
            "name": "payment-id",
            "minLength": 1,
            "type": "string",
            "description": "Lookup the status of a payment using the payment_id that you submitted in the Wire Transfer Origination/Create API request.",
            "required": true
          },
          {
            "in": "query",
            "name": "detail",
            "description": "Optional - Flag that when present and/or set to yes will return all the details of a wire transfer payment.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK or Successful operation",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/payment_details_DEF"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "401": {
            "description": "Authentication Failed",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "403": {
            "description": "No authorization for the requested resource",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "404": {
            "description": "Requested resource cannot be found",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "405": {
            "description": "Requested method (e.g. GET/POST/PUT/DELETE) not available",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "408": {
            "description": "Request timed out",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "409": {
            "description": "Requests conflicts with another request",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "520": {
            "description": "Unknown error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "default": {
            "description": "unexpected error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          }
        },
        "tags": [
          "status"
        ],
        "x-scope": "Wires-Payments-Status",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/payments": {
      "post": {
        "operationId": "createPayment",
        "description": "Make a simple Wire payment using payer (party funding the payment) and payee (party receiving the payment) bank information.",
        "parameters": [
          {
            "$ref": "#/parameters/gateway_company_id_PARAM"
          },
          {
            "$ref": "#/parameters/gateway_entity_id_PARAM"
          },
          {
            "$ref": "#/parameters/client_request_id_PARAM"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/payment_details_DEF"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK or Successful operation",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/create_payment_response_DEF"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "401": {
            "description": "Authentication Failed",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "403": {
            "description": "No authorization for the requested resource",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "404": {
            "description": "Requested resource cannot be found",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "405": {
            "description": "Requested method (e.g. GET/POST/PUT/DELETE) not available",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "408": {
            "description": "Request timed out",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "409": {
            "description": "Requests conflicts with another request",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "520": {
            "description": "Unknown error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "default": {
            "description": "unexpected error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          }
        },
        "tags": [
          "payment"
        ],
        "x-scope": "Wires-Payments",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/payments/template": {
      "post": {
        "operationId": "createTemplatedPayment",
        "description": "Make a simple Wire payment using an existing and/or predefined template",
        "parameters": [
          {
            "$ref": "#/parameters/gateway_company_id_PARAM"
          },
          {
            "$ref": "#/parameters/gateway_entity_id_PARAM"
          },
          {
            "$ref": "#/parameters/client_request_id_PARAM"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_templated_wire_transfer_DEF"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK or Successful operation",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/create_payment_response_DEF"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "401": {
            "description": "Authentication Failed",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "403": {
            "description": "No authorization for the requested resource",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "404": {
            "description": "Requested resource cannot be found",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "405": {
            "description": "Requested method (e.g. GET/POST/PUT/DELETE) not available",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "408": {
            "description": "Request timed out",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "409": {
            "description": "Requests conflicts with another request",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "520": {
            "description": "Unknown error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          },
          "default": {
            "description": "unexpected error",
            "headers": {
              "request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/errors_DEF"
            }
          }
        },
        "tags": [
          "templated payment"
        ],
        "x-scope": "Wires-Payments-Template",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    }
  },
  "parameters": {
    "gateway_company_id_PARAM": {
      "in": "header",
      "maxLength": 10,
      "name": "gateway-company-id",
      "minLength": 10,
      "type": "string",
      "description": "Unique value assigned to your company.",
      "required": true
    },
    "gateway_entity_id_PARAM": {
      "in": "header",
      "maxLength": 22,
      "name": "gateway-entity-id",
      "minLength": 22,
      "type": "string",
      "description": "Identifier describing on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else. Issued by Wells Fargo.",
      "required": true
    },
    "client_request_id_PARAM": {
      "in": "header",
      "maxLength": 36,
      "name": "client-request-id",
      "minLength": 1,
      "type": "string",
      "description": "Unique value to track each API call; it will be returned in the header of every response.",
      "required": true
    }
  },
  "definitions": {
    "payment_details_DEF": {
      "description": "Wire Transfer Payment Detail and Status information",
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/payment_DEF"
        },
        "payee": {
          "$ref": "#/definitions/party_DEF"
        },
        "payer": {
          "$ref": "#/definitions/party_DEF"
        },
        "sender": {
          "$ref": "#/definitions/party_DEF"
        },
        "ultimate_payer": {
          "$ref": "#/definitions/party_DEF"
        },
        "ultimate_payee": {
          "$ref": "#/definitions/party_DEF"
        },
        "on_behalf_of_bank": {
          "$ref": "#/definitions/institution_information_DEF"
        },
        "intermediary_bank": {
          "$ref": "#/definitions/institution_information_DEF"
        },
        "payment_processing_information": {
          "$ref": "#/definitions/payment_processing_DEF"
        }
      }
    },
    "payment_DEF": {
      "description": "The payment object includes all the details of the payment information.",
      "type": "object",
      "required": [
        "payment_type",
        "payment_amount",
        "payment_currency",
        "payment_indicator",
        "credit_currency"
      ],
      "properties": {
        "payment_type": {
          "example": "WIRE, BOOK, DRAW",
          "maxLength": 4,
          "minLength": 1,
          "type": "string",
          "description": "Indicates the specific type of payment to be made (wire, draw down, book transfer...etc)",
          "enum": [
            "WIRE",
            "DRAW",
            "BOOK"
          ]
        },
        "payment_description": {
          "description": "Descriptive text that an application user has entered about the payment that may be needed for the payment approval process.",
          "type": "string",
          "maxLength": 256
        },
        "value_date": {
          "format": "date",
          "description": "The requested settlement date(yyyy-mm-dd) for the payment.",
          "type": "string"
        },
        "payment_amount": {
          "example": 100,
          "maxLength": 12,
          "minLength": 1,
          "type": "number",
          "description": "The amount of the payment to be transferred."
        },
        "payment_currency": {
          "example": "USD",
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "description": "Currency of Amount that will be debited from Originator/Debtor account for this transfer."
        },
        "payment_indicator": {
          "maxLength": 6,
          "minLength": 5,
          "type": "string",
          "description": "Value - Credit.",
          "enum": [
            "CREDIT"
          ]
        },
        "credit_currency": {
          "example": "USD",
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "description": "Currency of Amount that will be received by the Creditor (Beneficiary/Payee)."
        },
        "credit_amount": {
          "example": 100,
          "maxLength": 24,
          "minLength": 1,
          "type": "number",
          "description": "The amount that will be received by the beneficiary"
        },
        "debit_amount": {
          "example": 100,
          "maxLength": 24,
          "minLength": 1,
          "type": "number",
          "description": "The amount that will be debited from payer account"
        },
        "debit_currency": {
          "example": "USD",
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "description": "Currency of Amount that will be debited from payer account for this transfer."
        },
        "duplicate_check_flag": {
          "type": "boolean",
          "description": "Define the duplicate payment check flag.Allowed values are true or false, default is false."
        },
        "identifiers": {
          "$ref": "#/definitions/Identifiers_DEF"
        },
        "information": {
          "$ref": "#/definitions/Information_DEF"
        }
      }
    },
    "Information_DEF": {
      "description": "Additional information tied to this payment.",
      "type": "object",
      "properties": {
        "fee_assigment_code": {
          "example": "CREDIT",
          "maxLength": 13,
          "minLength": 1,
          "type": "string",
          "description": "Specifies which party(ies) will pay charges due for processing of the payment transaction.",
          "enum": [
            "DEBIT",
            "CREDIT",
            "SHARED",
            "SERVICE_LEVEL"
          ]
        },
        "payment_purpose_description": {
          "example": "Paying for art supplies",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Description of the payment for the receiving party."
        },
        "dodd_frank_payment_originator_type": {
          "description": "Type of Originator who originated this DF payment.",
          "type": "string",
          "enum": [
            "ORIGINAL_CUSTOMER",
            "EXTERNAL_PARTY",
            "INTERNAL_PARTY"
          ]
        },
        "payment_hold_indicator": {
          "description": "Indicates the SOR should perform 30 minute Dodd Frank \u2018hold\u2019 on this payment.",
          "type": "boolean",
          "example": "\u2018true\u2019 - indicates the SOR should perform 30 minute DF \u2018hold\u2019 on this payment."
        },
        "instruction_code_for_creditor_agent": {
          "type": "string",
          "description": "4 - character code provided by the initiating party, intended for the creditor's agent related to the processing of the payment instruction."
        },
        "remittance_information": {
          "type": "array",
          "description": "A collection of remittance information (max 4 free form text elements), each element limit is restricted to 35 chars with overall 140 chars limit.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "party_DEF": {
      "description": "The payee is the business or consumer receiving the payment. This object requires name and bank_information for the payee.",
      "type": "object",
      "properties": {
        "name": {
          "example": "John Doe",
          "maxLength": 60,
          "minLength": 1,
          "type": "string",
          "description": "Name of payer."
        },
        "short_name": {
          "example": "JD",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Short name of payer."
        },
        "address": {
          "$ref": "#/definitions/address_DEF"
        },
        "identification": {
          "example": "ABC123444",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Identification assigned by an institution."
        },
        "contact_information": {
          "$ref": "#/definitions/contact_information_DEF"
        },
        "bank_information": {
          "$ref": "#/definitions/bank_information_DEF"
        }
      }
    },
    "address_DEF": {
      "description": "Address of the object referenced, international or domestic.",
      "type": "object",
      "properties": {
        "address_line_1": {
          "description": "Street address line 1.Cannot contain a PO box.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "address_line_2": {
          "description": "Street address line 2.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "city": {
          "description": "City or locality.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "country_subdivision_name": {
          "description": "State, province, or other country sub-division name.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "postal_code": {
          "description": "Postal code. Punctuation, spaces, and special characters are not allowed. U.S. postal_code code \u2013 999999999 or 99999.",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "country_code": {
          "description": "ISO 3166 Two-character alpha country code.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        }
      }
    },
    "contact_information_DEF": {
      "description": "The payee and/or payor contact Information.",
      "type": "object",
      "properties": {
        "name": {
          "example": "John Doe",
          "maxLength": 140,
          "minLength": 1,
          "type": "string",
          "description": "Name of contact party."
        },
        "phone": {
          "example": 8005551212,
          "maxLength": 35,
          "minLength": 10,
          "type": "string",
          "description": "Phone number."
        },
        "emails": {
          "type": "array",
          "description": "A collection of email addresses for this contact (max 5 emails)",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "bank_information_DEF": {
      "description": "Information on the payee or payer\u2019s bank account.",
      "type": "object",
      "properties": {
        "bank_account_number": {
          "description": "Domestic only - Bank account number (Domestic or International).",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "international_bank_account_number": {
          "description": "International only - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "account_name": {
          "description": "Name of the account.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "account_currency": {
          "description": "Identification of the currency in which the account is held. Usage:- Currency should only be used in case one and the same account number covers several currencies and the initiating party needs to identify which currency needs to be used for settlement on.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "account_type_code": {
          "description": "Account type, in a coded form.",
          "type": "string",
          "maxLength": 10,
          "example": "CASH"
        },
        "institution_information": {
          "$ref": "#/definitions/institution_information_DEF"
        }
      }
    },
    "institution_information_DEF": {
      "description": "institution information associated with this account.",
      "type": "object",
      "properties": {
        "name": {
          "example": "Wells Fargo Bank.",
          "maxLength": 140,
          "minLength": 1,
          "type": "string",
          "description": "Name of the institution."
        },
        "bank_identifier_code": {
          "example": "Wells Fargo Bank.",
          "maxLength": 11,
          "pattern": "^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$",
          "minLength": 8,
          "type": "string",
          "description": "International only - Bank Identifier Code (BIC), only applicable for foreign wires. Code allocated to financial institutions by the Registration Authority, under an international identification scheme, as described in the latest version of the standard ISO 9362 Banking (Banking telecommunication messages, Bank Identifier Codes)."
        },
        "united_states_clearing_house_interbank_payment_system_id": {
          "example": 1223455,
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Clearing House Interbank Payments System (CHIPS) ID. Identifies entities that own accounts at CHIPS participating financial institutions,through which CHIPS payments are effected."
        },
        "routing_transit_number": {
          "example": 1218766555,
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Domestic only - USA Bank Routing Transit Number (RTN), only applicable for domestic wires."
        },
        "address": {
          "$ref": "#/definitions/address_DEF"
        }
      }
    },
    "payment_processing_DEF": {
      "description": "Structure that contains a previously created Wire Transfer Payment processing information, includng audit innformation.",
      "type": "object",
      "properties": {
        "status": {
          "example": 151201321441,
          "maxLength": 10,
          "minLength": 1,
          "type": "string",
          "description": "Indicates the current status of the payment within the internal application."
        },
        "payment_id": {
          "example": "ID12345",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Unique payment identifier corresponding to the Wire Transfer Payment."
        },
        "app_id": {
          "description": "Indicates the payment processing type based on the application id.",
          "type": "string",
          "example": "CEO_WIRES_APPROVAL",
          "enum": [
            "CEO_WIRES_APPROVAL",
            "TRUE_STRAIGHT_THROUGH"
          ]
        },
        "originating_application_id": {
          "example": "1BAAS",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Identifies the application which originated the wire transfer payment request."
        },
        "payment_origination_method": {
          "example": "templated",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Indicates the method used to enter the payment data. Templated, Freeform, File Import."
        },
        "payment_description": {
          "example": "My Payment Type",
          "maxLength": 140,
          "minLength": 1,
          "type": "string",
          "description": "Descriptive text that an application user has entered about the payment that may be needed for the payment approval process."
        },
        "cut_off_time": {
          "example": "13:00 PST",
          "maxLength": 10,
          "minLength": 1,
          "type": "string",
          "description": "This is cutoff time for a payment.Used in the Date validation task. Provided as part of the response from Calendar Cutoff Service and provided by application"
        },
        "template_name": {
          "example": "MY-TEMPLATE-NAME",
          "maxLength": 140,
          "minLength": 1,
          "type": "string",
          "description": "Name assigned to the template, if payment_origination_method is templated."
        },
        "file_name": {
          "example": "MY-FILE-NAME",
          "maxLength": 140,
          "minLength": 1,
          "type": "string",
          "description": "Name of the file, if payment_origination_method is file import."
        },
        "clearing_system_information": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/clearing_system_information_DEF"
          }
        },
        "payment_audit": {
          "$ref": "#/definitions/payment_audit_DEF"
        }
      }
    },
    "clearing_system_information_DEF": {
      "description": "",
      "type": "object",
      "properties": {
        "clearing_system_name": {
          "example": "SWIFT",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Payment Clearing System Name."
        },
        "clearing_system_reference_number": {
          "type": "string",
          "description": "Payment Reference Number assigned by Clearing System.",
          "minLength": 1,
          "maxLength": 60
        }
      }
    },
    "payment_audit_DEF": {
      "description": "The payment audit object includes all the audit details of a wire transfer payment.",
      "type": "object",
      "properties": {
        "last_modified_by": {
          "example": "Mr. Person",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Payment Last Modified By Name."
        },
        "last_modified_timestamp": {
          "description": "Payment Last Modified Date and Time",
          "format": "date",
          "type": "string"
        },
        "created_by": {
          "example": "Mr. Person",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Payment Created By Name."
        },
        "created_timestamp": {
          "description": "Payment Create Date and Time.",
          "format": "date",
          "type": "string"
        }
      }
    },
    "payment_details_identifiers_DEF": {
      "description": "",
      "type": "object",
      "properties": {
        "third_party_reference_number": {
          "maxLength": 16,
          "minLength": 1,
          "type": "string",
          "description": "Additional information for the initiator to provide to the approver."
        },
        "customer_reference_number": {
          "maxLength": 16,
          "minLength": 1,
          "type": "string",
          "description": "Unique reference assigned by the originating party to identify the transaction."
        },
        "foreign_exchange_information": {
          "$ref": "#/definitions/Foreign_exchange_information_DEF"
        }
      }
    },
    "Foreign_exchange_information_DEF": {
      "description": "Additional foreign exchange payment information.",
      "type": "object",
      "properties": {
        "contract_id": {
          "example": "12345GG",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Reference assigned to the trade by the investor or the trading party."
        }
      }
    },
    "errors_DEF": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_DEF"
          }
        }
      }
    },
    "error_DEF": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "400-008",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Missing required field in body",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "A human-readable explanation. The message is not intended for algorithmic processing and is subject to change."
        },
        "field_name": {
          "type": "string",
          "description": "The field name where the error occurred.",
          "example": "payment_id"
        },
        "field_value": {
          "type": "string",
          "description": "The field value entered in the request by the user.",
          "example": 123456789
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com/#login"
        }
      }
    },
    "create_payment_response_DEF": {
      "description": "Originate and/or Create Wire Transfer Payment response",
      "type": "object",
      "properties": {
        "payment_id": {
          "description": "Unique identifier corresponding to the newly created Wire Transfer Payment.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "status": {
          "description": "Status of the newly created Wire Transer Payment.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "creation_datetime": {
          "format": "date",
          "description": "System date when Wire Transfer was created.",
          "type": "string"
        }
      }
    },
    "create_templated_wire_transfer_DEF": {
      "description": "Provides a mechanism to create/originate a Wire Transfer Payment using an existing and/or predefined payment template.",
      "type": "object",
      "required": [
        "template_name",
        "payment"
      ],
      "properties": {
        "template_name": {
          "example": "MY_MONTHLY_WIRE_TRANSFER_TEMPLATE_NAME",
          "maxLength": 60,
          "minLength": 1,
          "type": "string",
          "description": "Name assigned to the template."
        },
        "payment": {
          "$ref": "#/definitions/Payment_DEF"
        }
      }
    },
    "Payment_DEF": {
      "description": "Payment information.",
      "type": "object",
      "required": [
        "payment_type",
        "value_date"
      ],
      "properties": {
        "payment_type": {
          "example": "WIRE, BOOK, DRAW",
          "maxLength": 4,
          "minLength": 1,
          "type": "string",
          "description": "Indicates the specific type of payment to be made (wire, draw down, book transfer...etc)",
          "enum": [
            "WIRE",
            "DRAW",
            "BOOK"
          ]
        },
        "payment_amount": {
          "example": 100,
          "maxLength": 12,
          "minLength": 1,
          "type": "number",
          "description": "The amount of the payment to be transferred."
        },
        "payment_currency": {
          "example": "USD",
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "description": "Currency of Amount that will be debited from Originator/Debtor account for this transfer."
        },
        "value_date": {
          "format": "date",
          "description": "The requested settlement date(yyyy-mm-dd) for the payment.",
          "type": "string"
        },
        "duplicate_check_flag": {
          "type": "boolean",
          "description": "Define the duplicate payment check flag. Allowed values are true or false, default is false."
        },
        "identifiers": {
          "$ref": "#/definitions/create_templated_wire_transfer_payments_identifiers_DEF"
        },
        "information": {
          "$ref": "#/definitions/Information_DEF"
        }
      }
    },
    "create_templated_wire_transfer_payments_identifiers_DEF": {
      "description": "",
      "type": "object",
      "properties": {
        "third_party_reference_number": {
          "maxLength": 16,
          "minLength": 1,
          "type": "string",
          "description": "Additional information for the initiator to provide to the approver."
        },
        "customer_reference_number": {
          "maxLength": 16,
          "minLength": 1,
          "type": "string",
          "description": "Unique reference assigned by the originating party to identify the transaction."
        },
        "foreign_exchange_information": {
          "$ref": "#/definitions/Foreign_exchange_information_DEF"
        }
      }
    },
    "Identifiers_DEF": {
      "description": "Miscellanouse payment identifiers.",
      "type": "object",
      "properties": {
        "third_party_reference_number": {
          "example": "REF12345",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Additional info for the initiator to provide to the approver."
        },
        "customer_reference_number": {
          "example": "MyEnd2EndUniqueId",
          "maxLength": 35,
          "minLength": 1,
          "type": "string",
          "description": "Unique identification assigned by the initiating party to unumbiguously identify the transaction."
        },
        "foreign_exchange_information": {
          "$ref": "#/definitions/Foreign_exchange_information_DEF"
        }
      }
    },
    "create_payment_DEF": {
      "description": "Originate and/or Create Wire Transfer Payment",
      "type": "object",
      "required": [
        "payment",
        "payee",
        "payer"
      ],
      "properties": {
        "payment": {
          "$ref": "#/definitions/payment_DEF"
        },
        "payee": {
          "$ref": "#/definitions/party_DEF"
        },
        "ultimate_payer": {
          "$ref": "#/definitions/party_DEF"
        },
        "payer": {
          "$ref": "#/definitions/party_DEF"
        },
        "intermediary_bank": {
          "$ref": "#/definitions/institution_information_DEF"
        },
        "on_behalf_of_bank": {
          "$ref": "#/definitions/institution_information_DEF"
        }
      }
    }
  },
  "x-wso2-security": {
    "apim": {
      "x-wso2-scopes": [
        {
          "name": "Wires-Payments-Status",
          "roles": "RES-WIRES-Payments-Status",
          "description": "Get the status of a Wire Transfer Payment",
          "key": "Wires-Payments-Status"
        },
        {
          "name": "Wires-Payments-Template",
          "roles": "RES-WIRES-Payments-Template",
          "description": "Originate/Create a Wire Transfer Transaction using a template",
          "key": "Wires-Payments-Template"
        },
        {
          "name": "Wires-Payments",
          "roles": "RES-WIRES-Payments",
          "description": "Originate/Create a Wire Transfer Transaction",
          "key": "Wires-Payments"
        }
      ]
    }
  }
}