{
  "swagger": "2.0",
  "x-swagger-date": "2024-01-15T00:00:00+00:00",
  "info": {
    "title": "Account-Balance",
    "version": "v2.0",
    "contact": {
      "name": "Wells Fargo Gateway Support",
      "url": "https://developer.wellsfargo.com/portal/support",
      "email": "gateway@wellsfargo.com"
    },
    "description": "This API is used to deliver account balance reports for Treasury Management customers."
  },
  "host": "api.wellsfargo.com",
  "basePath": "/treasury/balance-reporting/v2",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "description": "Include your API key in this header field and indicate **Bearer** as the token type.\n**Format:** \"Authorization: Bearer {Your API Key}\"\nGenerate your initial API key on the developer portal  (See https://developer.wellsfargo.com/portal/documentation/support/how-to#get-keys) and regenerate every 24 hours by calling the Token API.\n",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/balances/report": {
      "post": {
        "description": "Request a report of balances as of a given date for a selected set of accounts and balance types.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Include your API key in this header field and indicate **Bearer** as the token type.\n**Format:** \"Authorization: Bearer {Your API Key}\"\nGenerate your initial API key on the developer portal  (See https://developer.wellsfargo.com/portal/documentation/support/how-to#get-keys) and regenerate every 24 hours by calling the Token API.\n",
            "type": "string"
          },
          {
            "$ref": "#/parameters/content_type"
          },
          {
            "$ref": "#/parameters/gateway_entity_id"
          },
          {
            "$ref": "#/parameters/client_request_id"
          },
          {
            "$ref": "#/parameters/ceo_company_id"
          },
          {
            "$ref": "#/parameters/connected_platforms_client"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/balances_report_request"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/balances_report_response"
            },
            "description": "OK or Successful operation",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/error_response_400"
            },
            "description": "Bad Request",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API Name Authorization request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Authentication error (proper authentication is required)",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_401"
            }
          },
          "403": {
            "description": "No authorization for the requested resource",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_403"
            }
          },
          "404": {
            "description": "Requested resource cannot be found",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_404"
            }
          },
          "405": {
            "description": "Requested method not supported",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_405"
            }
          },
          "408": {
            "description": "Request timed out",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_408"
            }
          },
          "429": {
            "description": "Too many requests within a certain timeframe",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_429"
            }
          },
          "500": {
            "description": "Internal system error",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_500"
            }
          },
          "503": {
            "description": "Service unavailable",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_503"
            }
          },
          "504": {
            "description": "Response timeout",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_504"
            }
          },
          "520": {
            "description": "Unknown error",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_520"
            }
          }
        },
        "tags": [
          "Retrieve account balances"
        ],
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "x-scope": "Account-Balance"
      }
    }
  },
  "definitions": {
    "balances_report_request": {
      "type": "object",
      "required": [
        "as_of_date",
        "balance_types",
        "accounts"
      ],
      "properties": {
        "as_of_date": {
          "description": "The effective date of the balances",
          "pattern": "^([1-9][0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string",
          "format": "date"
        },
        "balance_types": {
          "description": "The list of requested balance types",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CURRENT_AVAILABLE",
              "CLOSING_COLLECTED",
              "CLOSING_LEDGER",
              "OPENING_AVAILABLE",
              "CURRENT_LEDGER",
              "OPENING_LEDGER",
              "MTD_AVERAGE_COLLECTED_BALANCE",
              "MTD_AVERAGE_CLOSING_COLLECTED_BALANCE",
              "INTEREST_BEARING_BALANCE",
              "INVESTMENT_BALANCE",
              "OVERDRAFT_BALANCE"
            ]
          }
        },
        "accounts": {
          "description": "The list of requested accounts and bank identifier",
          "type": "array",
          "items": {
            "required": [
              "account_number"
            ],
            "properties": {
              "bank_id": {
                "description": "The bank identifier.  For US accounts this is the routing number. Eight or 11 alphanumeric characters with the following special characters allowed, space, comma (,) period (.) forward slash (/) asterisk (*) parentheses ( ) apostrophe (\u2018) dash (-) ampersand (&) and pound sign (#).",
                "type": "string",
                "minLength": 8,
                "maxLength": 11
              },
              "account_number": {
                "description": "The account number. Accepts alphanumeric characters along with the following special characters, space, comma (,) period (.) forward slash (/) asterisk (*) question mark (?) semicolon (;) parenthesis ( ) apostrophe (\u2018) plus sign (+) curly bracket { } single quote (\u2018) and dash (-).\n*Note* - To specify multiple account numbers, each account number must be separated by a comma. Up to 10 accounts can be queried per request.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              }
            }
          }
        }
      }
    },
    "balances_report_response": {
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "properties": {
              "bank_id": {
                "description": "The bank identifier.  For U.S. accounts this is the Routing Number.",
                "type": "string"
              },
              "account_number": {
                "description": "The account number",
                "type": "string"
              },
              "status": {
                "description": "Account entitlement status",
                "type": "string",
                "enum": [
                  "AUTHORIZED",
                  "UNAUTHORIZED"
                ]
              },
              "account_type": {
                "description": "The account type",
                "type": "string",
                "enum": [
                  "DEMAND_DEPOSIT",
                  "GENERAL_LEDGER",
                  "SAVINGS"
                ]
              },
              "account_name": {
                "description": "The name on the account",
                "type": "string"
              },
              "currency_code": {
                "description": "The currency of the account, expressed as the ISO 4217 alpha 3 currency code.",
                "type": "string"
              },
              "balances": {
                "description": "List of balances returned",
                "type": "array",
                "items": {
                  "properties": {
                    "as_of_date": {
                      "description": "The date associcated with the balance.",
                      "type": "string",
                      "format": "date"
                    },
                    "balance_type": {
                      "description": "Balance type",
                      "type": "string",
                      "enum": [
                        "OPENING_AVAILABLE",
                        "CLOSING_LEDGER",
                        "CLOSING_COLLECTED",
                        "CURRENT_AVAILABLE",
                        "CURRENT_LEDGER",
                        "OPENING_LEDGER",
                        "MTD_AVERAGE_COLLECTED_BALANCE",
                        "MTD_AVERAGE_CLOSING_COLLECTED_BALANCE",
                        "INTEREST_BEARING_BALANCE",
                        "INVESTMENT_BALANCE",
                        "OVERDRAFT_BALANCE"
                      ]
                    },
                    "balance_amount": {
                      "description": "The balance amount for the given balance type.",
                      "type": "number",
                      "format": "double",
                      "minimum": -9999999999999.99,
                      "maximum": 9999999999999.99,
                      "example": 123456789.1
                    },
                    "bai_type_code": {
                      "description": "The BAI Type Code that maps to the balance type.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "040",
                        "015",
                        "045",
                        "060",
                        "030",
                        "010",
                        "050",
                        "020",
                        "263",
                        "354",
                        "355"
                      ]
                    },
                    "adjusted_balance_amount": {
                      "description": "The adjusted balance for the given balance type.",
                      "type": "number",
                      "format": "double",
                      "minimum": -9999999999999.99,
                      "maximum": 9999999999999.99,
                      "example": 123456789.1
                    },
                    "interest_rate": {
                      "description": "The interest rate for the given balance type.",
                      "type": "number",
                      "minimum": 0,
                      "maximum": 99.999999,
                      "example": 1.234567
                    },
                    "interest_amount": {
                      "description": "The interest amount for the given balance type.",
                      "type": "number",
                      "format": "double",
                      "minimum": -9999999999999.99,
                      "maximum": 9999999999999.99,
                      "example": 123456789.1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "error_response_400": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "A list of one or more errors describing the cause.",
          "items": {
            "$ref": "#/definitions/error_info_400"
          }
        }
      }
    },
    "error_info_400": {
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "type": "string",
          "description": "A code describing the result of processing.",
          "minLength": 7,
          "maxLength": 8,
          "example": "400-008"
        },
        "description": {
          "type": "string",
          "description": "A human-readable explanation. The message is not intended for algorithmic processing and is subject to change.",
          "example": "Missing required field in body",
          "minLength": 1,
          "maxLength": 100
        },
        "field_name": {
          "type": "string",
          "description": "The field name where the error occurred",
          "example": "bank_id"
        },
        "field_value": {
          "type": "string",
          "description": "The field value entered in the request by the user.",
          "example": 123456789
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification",
          "example": "https://developer.wellsfargo.com/#login"
        }
      }
    },
    "error_response_401": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_401"
          }
        }
      }
    },
    "error_info_401": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "401-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "API key is invalid or expired.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "API key is invalid or expired.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_403": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_403"
          }
        }
      }
    },
    "error_info_403": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "403-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Account associated with API key does not have access to the requested API.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "A human-readable explanation. The message is not intended for algorithmic processing and is subject to change.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_404": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_404"
          }
        }
      }
    },
    "error_info_404": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "404-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Requested API does not exist.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Requested API does not exist.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_405": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_405"
          }
        }
      }
    },
    "error_info_405": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "405-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Requested method is not supported. Check the API specification for supported methods.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Requested method is not supported. Check the API specification for supported methods.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_408": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_408"
          }
        }
      }
    },
    "error_info_408": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "408-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Request timed out.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Request timed out.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_429": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_429"
          }
        }
      }
    },
    "error_info_429": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "429-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Service is currently unavailable due to rate limiting.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Service is currently unavailable due to rate limiting.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_500": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_500"
          }
        }
      }
    },
    "error_info_500": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "500-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Internal server error.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Internal server error.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_503": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_503"
          }
        }
      }
    },
    "error_info_503": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "503-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Service unavailable.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Service unavailable.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_504": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_504"
          }
        }
      }
    },
    "error_info_504": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "504-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Server timed out.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Server timed out.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_520": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_520"
          }
        }
      }
    },
    "error_info_520": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "520-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Unknown error occurred.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Unknown error occurred.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    }
  },
  "parameters": {
    "content_type": {
      "name": "Content-Type",
      "in": "header",
      "description": "Describes the data in the request body. Valid values: application/json.",
      "type": "string",
      "enum": [
        "application/json"
      ]
    },
    "gateway_entity_id": {
      "name": "gateway-entity-id",
      "in": "header",
      "description": "Unique identifier assigned to the entity to use the Wells Fargo Gateway.",
      "type": "string",
      "required": true,
      "minLength": 22,
      "maxLength": 22
    },
    "client_request_id": {
      "name": "client-request-id",
      "in": "header",
      "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
      "type": "string",
      "required": true,
      "minLength": 36,
      "maxLength": 36
    },
    "ceo_company_id": {
      "name": "ceo-company-id",
      "in": "header",
      "description": "If you are an ERP plug-in provider use this field to identify the company you are placing a call on behalf of.",
      "type": "string",
      "minLength": 3,
      "maxLength": 20,
      "pattern": "^[a-zA-Z0-9]{3,20}$"
    },
    "connected_platforms_client": {
      "name": "connected-platforms-client",
      "in": "header",
      "description": "Provide a value in this field if you\u2019re a connected platforms client or provider.  Valid values: Yes",
      "type": "boolean",
      "minLength": 3,
      "maxLength": 3
    }
  }
}