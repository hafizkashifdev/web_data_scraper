{
  "swagger": "2.0",
  "x-swagger-date": "2022-11-02",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "description": "The authorization request header should use the Bearer authorization scheme followed by the access token. Example: 'Bearer c2ebc483a02985ca9ae6f5f17ef3f454'",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "basePath": "/commercial/fraud/positive-pay/v1",
  "host": "api.wellsfargo.com",
  "schemes": [
    "https"
  ],
  "info": {
    "title": "Positive Pay",
    "version": "v1.0 December, 08 2022",
    "description": "Positive Pay API provides wholesale banking customers securely manage the life cycle of checks that they have issued, by submitting check issues for Positive Pay and maintaining the register with voids and cancels. For each request, customer can send a maximum of 1500 checks.",
    "x-termsAndConditions": "https://developer.wellsfargo.com/tac/",
    "contact": {
      "name": "Wells Fargo Gateway Support",
      "url": "http://developer.wellsfargo.com/contact-us",
      "email": "gateway@wellsfargo.com"
    }
  },
  "paths": {
    "/check-issues": {
      "post": {
        "operationId": "post_check_issues",
        "description": "Submit a list of checks for issue, void and cancel transactions for a domestic account.",
        "parameters": [
          {
            "$ref": "#/parameters/Authorization_HEADER"
          },
          {
            "$ref": "#/parameters/Content-Type_HEADER"
          },
          {
            "$ref": "#/parameters/client-request-id_HEADER"
          },
          {
            "$ref": "#/parameters/gateway-entity-id_HEADER"
          },
          {
            "$ref": "#/parameters/ceo-company-id_HEADER"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/checks_request_DEF"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created or Successful Response",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/checks_response_DEF_201"
            }
          },
          "400": {
            "description": "Request could not be fulfilled because of incorrect check information",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/checks_response_DEF_400"
            }
          },
          "401": {
            "description": "Authentication error (proper authentication is required)",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_401"
            }
          },
          "403": {
            "description": "No authorization for the requested resource",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_403"
            }
          },
          "404": {
            "description": "Requested resource cannot be found",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_404"
            }
          },
          "405": {
            "description": "Requested method not supported",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_405"
            }
          },
          "408": {
            "description": "Request timed out",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_408"
            }
          },
          "429": {
            "description": "Too many requests within a certain timeframe",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_429"
            }
          },
          "500": {
            "description": "Internal system error",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_500"
            }
          },
          "503": {
            "description": "Service unavailable",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_503"
            }
          },
          "504": {
            "description": "Response timeout",
            "headers": {
              "client-request-id": {
                "description": "Value generated by your company to track the API request. It will be returned in the header of the response.",
                "type": "string"
              },
              "gateway-request-id": {
                "description": "A unique value generated by Wells Fargo Gateway to track the API request. It will be returned in the header of the response",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_504"
            }
          },
          "520": {
            "description": "Unknown error",
            "headers": {
              "client-request-id": {
                "description": "Value you generate to track each API call. A UUID value compliant with RFC 4122 is required. The value is echoed back in the response header.",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
              },
              "gateway-request-id": {
                "description": "An Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/error_response_520"
            }
          }
        },
        "tags": [
          "Post check issues, void and cancel"
        ],
        "x-scope": "Positive-Pay",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    }
  },
  "parameters": {
    "Authorization_HEADER": {
      "description": "Generate your initial API key on the [My Apps] ((Link: My Apps)) screen and regenerate every 24 hours by calling the [Token API] ((Link: Documentation: How To: Authentication: Generate Keys Programmatically)).",
      "in": "header",
      "maxLength": 32,
      "name": "Authorization",
      "required": true,
      "type": "string"
    },
    "Content-Type_HEADER": {
      "description": "The Content-Type header is used to indicate the media type of the resource. Requests must have the value application/json.Requests require an <<*application/json*>> value (Not applicable to <<*GET*>> requests).Indicates the media type of the request body. Requests must have the value application/json.",
      "in": "header",
      "maxLength": 16,
      "name": "Content-Type",
      "required": true,
      "type": "string"
    },
    "client-request-id_HEADER": {
      "in": "header",
      "maxLength": 36,
      "name": "client-request-id",
      "minLength": 1,
      "type": "string",
      "description": "Value generated by your company to track each API request. This should be a unique value, and it will be returned in the header of every response. UUID is recommended for this value.Value you generate to track each API call that is returned in the header of every response. Note: Generate it at your discretion, but we recommend following the UUID version 4 (RFC 4122) form.Value you generate to track each API call. The value is echoed back in the response header. Wells Fargo recommends generating a value based on the UUID version 4 standard (RFC 4122).",
      "required": true
    },
    "gateway-entity-id_HEADER": {
      "description": "Your Gateway Entity IDs are provided by Wells Fargo during initial company setup. The Gateway Entity ID describes on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else.Identifier describing on whose behalf the API request is being sent. This may represent your company, a division within your company, a third party, or something else. Issued by Wells Fargo.Your Entity IDs are provided by Wells Fargo during initial setup.  An Entity ID describes on whose behalf the API request is being sent.  This may represent your company, a division within your company, a third party, or something else.",
      "in": "header",
      "maxLength": 22,
      "name": "gateway-entity-id",
      "required": true,
      "type": "string"
    },
    "ceo-company-id_HEADER": {
      "in": "header",
      "maxLength": 20,
      "name": "ceo-company-id",
      "pattern": "^[a-zA-Z0-9]{3,20}$",
      "minLength": 3,
      "type": "string",
      "description": "If you are an ERP plug-in provider use this field to identify the company you are placing a call on behalf of."
    }
  },
  "definitions": {
    "checks_request_DEF": {
      "description": "List of check transactions in request payload.",
      "type": "object",
      "required": [
        "account_number",
        "total_check_amount",
        "total_item_count",
        "checks"
      ],
      "properties": {
        "account_number": {
          "maxLength": 15,
          "minLength": 1,
          "type": "string",
          "description": "Bank account number of the check."
        },
        "total_check_amount": {
          "type": "number",
          "maxLength": 15,
          "minLength": 1,
          "description": "Total Check amount received in the request payload. The total  amount of the checks is limited to 999999999999.99 (99 billion). The total_amount should be of the format *#.## with digits, a decimal point, and two decimal places. Any amount less than $1.00 must include a preceding 0 (0.25, for example).",
          "example": 255.22
        },
        "total_item_count": {
          "type": "number",
          "minimum": 1,
          "maximum": 4,
          "description": "Count of total check transactions.",
          "example": 1
        },
        "checks": {
          "type": "array",
          "description": "Positive Pay check transaction details.",
          "items": {
            "$ref": "#/definitions/check_transaction_DEF"
          }
        }
      }
    },
    "check_transaction_DEF": {
      "description": "Positive Pay check transaction details.",
      "type": "object",
      "required": [
        "check_number",
        "issue_date",
        "transaction_type",
        "check_amount"
      ],
      "properties": {
        "check_number": {
          "maxLength": 10,
          "minLength": 1,
          "type": "string",
          "description": "The check number."
        },
        "issue_date": {
          "maxLength": 10,
          "minLength": 10,
          "type": "string",
          "description": "The issue date for the check in ISO 8601 format (YYYY-MM-DD). The date cannot be in future if transaction type is \"CANCEL\"."
        },
        "transaction_type": {
          "description": "Type of check transaction. Valid values are \"ISSUE\", \"VOID\" and \"CANCEL\".",
          "type": "string",
          "enum": [
            "ISSUE",
            "VOID",
            "CANCEL"
          ]
        },
        "check_amount": {
          "maxLength": 11,
          "minLength": 1,
          "type": "number",
          "description": "The check amount. Amount should be 0 if the transaction type is \"VOID\".",
          "example": 166.52
        },
        "currency_code": {
          "maxLength": 3,
          "type": "string",
          "description": "The currency code for the bank account, expressed as the ISO 4217 alpha 3 currency code. Default is USD. Valid value if provided,  is  \u201cUSD\u201d."
        },
        "payee_information_additional_data": {
          "maxLength": 120,
          "type": "string",
          "description": "Payee information and additional data for the check. Format should be \"Payee information~additional data\". Additional data (such as employee numbers or invoice numbers) included after the tilde can be included on ARP optional reports, if requested. Note: If Payee Validation is set up on the account, then Payee Name must be sent in this field. Example: ABC Company\n"
        }
      }
    },
    "checks_response_DEF_201": {
      "description": "Checks response with status, counts of checks received, and count of checks rejected due to validation errors along with error details.",
      "type": "object",
      "required": [
        "account_last_four",
        "total_check_amount",
        "total_item_count",
        "received_item_count"
      ],
      "properties": {
        "account_last_four": {
          "maxLength": 4,
          "minLength": 4,
          "type": "string",
          "description": "Last four digit of account number."
        },
        "total_check_amount": {
          "type": "number",
          "description": "The total  amount of the checks.",
          "example": 455.63
        },
        "total_item_count": {
          "type": "number",
          "description": "Count of check transactions received in request payload.",
          "example": 2
        },
        "received_item_count": {
          "type": "number",
          "description": "Count of check transactions processed in request payload.",
          "example": 2
        }
      }
    },
    "checks_response_DEF_400": {
      "description": "Checks response with status, counts of checks received, and count of checks rejected due to validation errors along with error details.",
      "type": "object",
      "properties": {
        "account_last_four": {
          "maxLength": 4,
          "minLength": 4,
          "type": "string",
          "description": "Last four digit of account number."
        },
        "total_check_amount": {
          "type": "number",
          "description": "The total  amount of the checks.",
          "example": 200.55
        },
        "total_item_count": {
          "type": "number",
          "description": "Count of check transactions received in request payload.",
          "example": 1
        },
        "rejected_item_count": {
          "type": "number",
          "description": "Count of check transactions rejected in request payload.",
          "example": 1
        },
        "errors": {
          "type": "array",
          "description": "Error to cross check number of checks and total amount.",
          "items": {
            "$ref": "#/definitions/issue_total_check_DEF"
          }
        },
        "rejected_items": {
          "type": "array",
          "description": "Rejected check transaction details.",
          "items": {
            "$ref": "#/definitions/rejected_check_DEF"
          }
        }
      }
    },
    "issue_total_check_DEF": {
      "description": "Error to cross check number of checks and total amount.",
      "type": "object",
      "properties": {
        "error_code": {
          "example": "1050-003",
          "maxLength": 8,
          "minLength": 8,
          "type": "string",
          "description": "Error code at check level."
        },
        "description": {
          "example": "total_item_count does not match with calculated total item count: 2",
          "maxLength": 120,
          "minLength": 1,
          "type": "string",
          "description": "Error description at check level."
        }
      }
    },
    "rejected_check_DEF": {
      "description": "Rejected check transaction details.",
      "type": "object",
      "properties": {
        "error_code": {
          "maxLength": 8,
          "minLength": 8,
          "type": "string",
          "description": "Error code at check level."
        },
        "description": {
          "maxLength": 120,
          "minLength": 1,
          "type": "string",
          "description": "Error description at check level."
        },
        "check_transaction": {
          "$ref": "#/definitions/Check_transaction_DEF"
        }
      }
    },
    "Check_transaction_DEF": {
      "description": "Rejected check transaction details.",
      "type": "object",
      "properties": {
        "check_number": {
          "maxLength": 10,
          "minLength": 1,
          "type": "string",
          "description": "The check number."
        },
        "issue_date": {
          "maxLength": 10,
          "minLength": 10,
          "type": "string",
          "description": "The issue date for the check in ISO 8601 format (YYYY-MM-DD). The date cannot be in future if transaction type is \"CANCEL\"."
        },
        "transaction_type": {
          "description": "Type of check transaction. Valid values are \"ISSUE\", \"VOID\" and \"CANCEL\".",
          "type": "string",
          "enum": [
            "ISSUE",
            "VOID",
            "CANCEL"
          ]
        },
        "check_amount": {
          "maxLength": 11,
          "minLength": 1,
          "type": "number",
          "description": "The check amount. Amount should be 0 if the transaction type is \"VOID\".",
          "example": 200.55
        },
        "currency_code": {
          "maxLength": 3,
          "type": "string",
          "description": "The currency code for the bank account, expressed as the ISO 4217 alpha 3 currency code. Default is USD.Valid value if provided,  is  \u201cUSD\u201d."
        },
        "payee_information_additional_data": {
          "maxLength": 120,
          "type": "string",
          "description": "Payee information and additional data for the check. Format should be \"Payee information~additional data\". Additional data (such as employee numbers or invoice numbers) included after the tilde can be included on ARP optional reports, if requested. Note: If Payee Validation is set up on the account, then Payee Name must be sent in this field. Example: ABC Company\n"
        }
      }
    },
    "error_response_401": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_401"
          }
        }
      }
    },
    "error_info_401": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "401-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "API key is invalid or expired.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "API key is invalid or expired.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_403": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_403"
          }
        }
      }
    },
    "error_info_403": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "403-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Account associated with API key does not have access to the requested API.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "A human-readable explanation. The message is not intended for algorithmic processing and is subject to change.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_404": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_404"
          }
        }
      }
    },
    "error_info_404": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "404-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Requested API does not exist.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Requested API does not exist.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_405": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_405"
          }
        }
      }
    },
    "error_info_405": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "405-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Requested method is not supported. Check the API specification for supported methods.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Requested method is not supported. Check the API specification for supported methods.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_408": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_408"
          }
        }
      }
    },
    "error_info_408": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "408-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Request timed out.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Request timed out.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_429": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_429"
          }
        }
      }
    },
    "error_info_429": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "429-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Service is currently unavailable due to rate limiting.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Service is currently unavailable due to rate limiting.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_500": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_500"
          }
        }
      }
    },
    "error_info_500": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "500-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Internal server error.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Internal server error.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_503": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_503"
          }
        }
      }
    },
    "error_info_503": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "503-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Service unavailable.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Service unavailable.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_504": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_504"
          }
        }
      }
    },
    "error_info_504": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "504-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Server timed out.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Server timed out.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    },
    "error_response_520": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/error_info_520"
          }
        }
      }
    },
    "error_info_520": {
      "description": "",
      "type": "object",
      "required": [
        "error_code",
        "description"
      ],
      "properties": {
        "error_code": {
          "example": "520-001",
          "maxLength": 8,
          "minLength": 7,
          "type": "string",
          "description": "A code describing the result of processing."
        },
        "description": {
          "example": "Unknown error occurred.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "description": "Unknown error occurred.\n"
        },
        "api_specification_url": {
          "type": "string",
          "description": "A link to the API specification.",
          "example": "https://developer.wellsfargo.com"
        }
      }
    }
  }
}