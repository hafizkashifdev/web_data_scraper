import type { FromSchema } from 'json-schema-to-ts';
import * as schemas from './schemas';
export type AuthorizeGetMetadataParam = FromSchema<typeof schemas.AuthorizeGet.metadata>;
export type AuthorizePost1BodyParam = FromSchema<typeof schemas.AuthorizePost1.body>;
export type AuthorizePost1MetadataParam = FromSchema<typeof schemas.AuthorizePost1.metadata>;
export type AuthorizePost1Response201 = FromSchema<typeof schemas.AuthorizePost1.response['201']>;
export type AuthorizePostBodyParam = FromSchema<typeof schemas.AuthorizePost.body>;
export type AuthorizePostMetadataParam = FromSchema<typeof schemas.AuthorizePost.metadata>;
export type ConfigurationMetadataParam = FromSchema<typeof schemas.Configuration.metadata>;
export type ConfigurationResponse200 = FromSchema<typeof schemas.Configuration.response['200']>;
export type DoGetMetadataParam = FromSchema<typeof schemas.DoGet.metadata>;
export type DoGetResponse200 = FromSchema<typeof schemas.DoGet.response['200']>;
export type DoPostMetadataParam = FromSchema<typeof schemas.DoPost.metadata>;
export type DoPostResponse200 = FromSchema<typeof schemas.DoPost.response['200']>;
export type TokenBodyParam = FromSchema<typeof schemas.Token.body>;
export type TokenMetadataParam = FromSchema<typeof schemas.Token.metadata>;
export type TokenResponse200 = FromSchema<typeof schemas.Token.response['200']>;
export type TokenRevocationBodyParam = FromSchema<typeof schemas.TokenRevocation.body>;
export type TokenRevocationMetadataParam = FromSchema<typeof schemas.TokenRevocation.metadata>;
export type TokenRevocationResponse200 = FromSchema<typeof schemas.TokenRevocation.response['200']>;
